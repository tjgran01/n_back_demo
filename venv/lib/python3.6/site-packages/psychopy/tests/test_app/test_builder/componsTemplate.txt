ApertureComponent.order:['name', 'size', 'pos']
ApertureComponent.name.default:aperture
ApertureComponent.name.label:Name
ApertureComponent.name.valType:code
ApertureComponent.name.val:aperture
ApertureComponent.name.allowedTypes:[]
ApertureComponent.name.categ:Basic
ApertureComponent.name.allowedVals:[]
ApertureComponent.name.readOnly:False
ApertureComponent.name.staticUpdater:None
ApertureComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ApertureComponent.name.allowedUpdates:None
ApertureComponent.stopVal.default:1.0
ApertureComponent.stopVal.label:Stop
ApertureComponent.stopVal.valType:code
ApertureComponent.stopVal.val:1.0
ApertureComponent.stopVal.allowedTypes:[]
ApertureComponent.stopVal.categ:Basic
ApertureComponent.stopVal.allowedVals:[]
ApertureComponent.stopVal.readOnly:False
ApertureComponent.stopVal.updates:constant
ApertureComponent.stopVal.staticUpdater:None
ApertureComponent.stopVal.hint:When does the component end? (blank is endless)
ApertureComponent.stopVal.allowedUpdates:[]
ApertureComponent.durationEstim.default:
ApertureComponent.durationEstim.label:Expected duration (s)
ApertureComponent.durationEstim.valType:code
ApertureComponent.durationEstim.val:
ApertureComponent.durationEstim.allowedTypes:[]
ApertureComponent.durationEstim.categ:Basic
ApertureComponent.durationEstim.allowedVals:[]
ApertureComponent.durationEstim.readOnly:False
ApertureComponent.durationEstim.updates:None
ApertureComponent.durationEstim.staticUpdater:None
ApertureComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ApertureComponent.durationEstim.allowedUpdates:None
ApertureComponent.pos.default:(0, 0)
ApertureComponent.pos.label:Position [x,y]
ApertureComponent.pos.valType:code
ApertureComponent.pos.val:(0, 0)
ApertureComponent.pos.allowedTypes:[]
ApertureComponent.pos.categ:Basic
ApertureComponent.pos.allowedVals:[]
ApertureComponent.pos.readOnly:False
ApertureComponent.pos.updates:constant
ApertureComponent.pos.staticUpdater:None
ApertureComponent.pos.hint:Where is the aperture centred?
ApertureComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ApertureComponent.startEstim.default:
ApertureComponent.startEstim.label:Expected start (s)
ApertureComponent.startEstim.valType:code
ApertureComponent.startEstim.val:
ApertureComponent.startEstim.allowedTypes:[]
ApertureComponent.startEstim.categ:Basic
ApertureComponent.startEstim.allowedVals:[]
ApertureComponent.startEstim.readOnly:False
ApertureComponent.startEstim.updates:None
ApertureComponent.startEstim.staticUpdater:None
ApertureComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ApertureComponent.startEstim.allowedUpdates:None
ApertureComponent.units.default:'norm'
ApertureComponent.units.label:Units
ApertureComponent.units.valType:str
ApertureComponent.units.val:norm
ApertureComponent.units.allowedTypes:[]
ApertureComponent.units.categ:Basic
ApertureComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ApertureComponent.units.readOnly:False
ApertureComponent.units.updates:None
ApertureComponent.units.staticUpdater:None
ApertureComponent.units.hint:Units of dimensions for this stimulus
ApertureComponent.units.allowedUpdates:None
ApertureComponent.startType.default:'time (s)'
ApertureComponent.startType.label:start type
ApertureComponent.startType.valType:str
ApertureComponent.startType.val:time (s)
ApertureComponent.startType.allowedTypes:[]
ApertureComponent.startType.categ:Basic
ApertureComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ApertureComponent.startType.readOnly:False
ApertureComponent.startType.updates:None
ApertureComponent.startType.staticUpdater:None
ApertureComponent.startType.hint:How do you want to define your start point?
ApertureComponent.startType.allowedUpdates:None
ApertureComponent.stopType.default:'duration (s)'
ApertureComponent.stopType.label:stop type
ApertureComponent.stopType.valType:str
ApertureComponent.stopType.val:duration (s)
ApertureComponent.stopType.allowedTypes:[]
ApertureComponent.stopType.categ:Basic
ApertureComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ApertureComponent.stopType.readOnly:False
ApertureComponent.stopType.updates:None
ApertureComponent.stopType.staticUpdater:None
ApertureComponent.stopType.hint:How do you want to define your end point?
ApertureComponent.stopType.allowedUpdates:None
ApertureComponent.startVal.default:0.0
ApertureComponent.startVal.label:Start
ApertureComponent.startVal.valType:code
ApertureComponent.startVal.val:0.0
ApertureComponent.startVal.allowedTypes:[]
ApertureComponent.startVal.categ:Basic
ApertureComponent.startVal.allowedVals:[]
ApertureComponent.startVal.readOnly:False
ApertureComponent.startVal.updates:None
ApertureComponent.startVal.staticUpdater:None
ApertureComponent.startVal.hint:When does the component start?
ApertureComponent.startVal.allowedUpdates:None
ApertureComponent.size.default:1
ApertureComponent.size.label:Size
ApertureComponent.size.valType:code
ApertureComponent.size.val:1
ApertureComponent.size.allowedTypes:[]
ApertureComponent.size.categ:Basic
ApertureComponent.size.allowedVals:[]
ApertureComponent.size.readOnly:False
ApertureComponent.size.updates:constant
ApertureComponent.size.staticUpdater:None
ApertureComponent.size.hint:How big is the aperture? (a single number for diameter)
ApertureComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
CodeComponent.order:['name', 'Begin Experiment', 'Begin Routine', 'Each Frame', 'End Routine', 'End Experiment']
CodeComponent.Begin Experiment.default:
CodeComponent.Begin Experiment.label:Begin Experiment
CodeComponent.Begin Experiment.valType:extendedCode
CodeComponent.Begin Experiment.val:
CodeComponent.Begin Experiment.allowedTypes:[]
CodeComponent.Begin Experiment.categ:Basic
CodeComponent.Begin Experiment.allowedVals:[]
CodeComponent.Begin Experiment.readOnly:False
CodeComponent.Begin Experiment.updates:constant
CodeComponent.Begin Experiment.staticUpdater:None
CodeComponent.Begin Experiment.hint:Code at the start of the experiment (initialization); right-click checks syntax
CodeComponent.Begin Experiment.allowedUpdates:[]
CodeComponent.name.default:code
CodeComponent.name.label:Name
CodeComponent.name.valType:code
CodeComponent.name.val:code
CodeComponent.name.allowedTypes:[]
CodeComponent.name.categ:Basic
CodeComponent.name.allowedVals:[]
CodeComponent.name.readOnly:False
CodeComponent.name.staticUpdater:None
CodeComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
CodeComponent.name.allowedUpdates:None
CodeComponent.Begin Routine.default:
CodeComponent.Begin Routine.label:Begin Routine
CodeComponent.Begin Routine.valType:extendedCode
CodeComponent.Begin Routine.val:
CodeComponent.Begin Routine.allowedTypes:[]
CodeComponent.Begin Routine.categ:Basic
CodeComponent.Begin Routine.allowedVals:[]
CodeComponent.Begin Routine.readOnly:False
CodeComponent.Begin Routine.updates:constant
CodeComponent.Begin Routine.staticUpdater:None
CodeComponent.Begin Routine.hint:Code to be run at the start of each repeat of the Routine (e.g. each trial); right-click checks syntax
CodeComponent.Begin Routine.allowedUpdates:[]
CodeComponent.End Routine.default:
CodeComponent.End Routine.label:End Routine
CodeComponent.End Routine.valType:extendedCode
CodeComponent.End Routine.val:
CodeComponent.End Routine.allowedTypes:[]
CodeComponent.End Routine.categ:Basic
CodeComponent.End Routine.allowedVals:[]
CodeComponent.End Routine.readOnly:False
CodeComponent.End Routine.updates:constant
CodeComponent.End Routine.staticUpdater:None
CodeComponent.End Routine.hint:Code at the end of this repeat of the Routine (e.g. getting/storing responses); right-click checks syntax
CodeComponent.End Routine.allowedUpdates:[]
CodeComponent.End Experiment.default:
CodeComponent.End Experiment.label:End Experiment
CodeComponent.End Experiment.valType:extendedCode
CodeComponent.End Experiment.val:
CodeComponent.End Experiment.allowedTypes:[]
CodeComponent.End Experiment.categ:Basic
CodeComponent.End Experiment.allowedVals:[]
CodeComponent.End Experiment.readOnly:False
CodeComponent.End Experiment.updates:constant
CodeComponent.End Experiment.staticUpdater:None
CodeComponent.End Experiment.hint:Code at the end of the entire experiment (e.g. saving files, resetting computer); right-click checks syntax
CodeComponent.End Experiment.allowedUpdates:[]
CodeComponent.Each Frame.default:
CodeComponent.Each Frame.label:Each Frame
CodeComponent.Each Frame.valType:extendedCode
CodeComponent.Each Frame.val:
CodeComponent.Each Frame.allowedTypes:[]
CodeComponent.Each Frame.categ:Basic
CodeComponent.Each Frame.allowedVals:[]
CodeComponent.Each Frame.readOnly:False
CodeComponent.Each Frame.updates:constant
CodeComponent.Each Frame.staticUpdater:None
CodeComponent.Each Frame.hint:Code to be run on every video frame during for the duration of this Routine; right-click checks syntax
CodeComponent.Each Frame.allowedUpdates:[]
DotsComponent.order:['name']
DotsComponent.color.default:[1.0,1.0,1.0]
DotsComponent.color.label:Color
DotsComponent.color.valType:str
DotsComponent.color.val:$[1.0,1.0,1.0]
DotsComponent.color.allowedTypes:[]
DotsComponent.color.categ:Basic
DotsComponent.color.allowedVals:[]
DotsComponent.color.readOnly:False
DotsComponent.color.updates:constant
DotsComponent.color.staticUpdater:None
DotsComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
DotsComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.colorSpace.default:'rgb'
DotsComponent.colorSpace.label:Color space
DotsComponent.colorSpace.valType:str
DotsComponent.colorSpace.val:rgb
DotsComponent.colorSpace.allowedTypes:[]
DotsComponent.colorSpace.categ:Basic
DotsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
DotsComponent.colorSpace.readOnly:False
DotsComponent.colorSpace.updates:constant
DotsComponent.colorSpace.staticUpdater:None
DotsComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
DotsComponent.colorSpace.allowedUpdates:None
DotsComponent.startVal.default:0.0
DotsComponent.startVal.label:Start
DotsComponent.startVal.valType:code
DotsComponent.startVal.val:0.0
DotsComponent.startVal.allowedTypes:[]
DotsComponent.startVal.categ:Basic
DotsComponent.startVal.allowedVals:[]
DotsComponent.startVal.readOnly:False
DotsComponent.startVal.updates:None
DotsComponent.startVal.staticUpdater:None
DotsComponent.startVal.hint:When does the component start?
DotsComponent.startVal.allowedUpdates:None
DotsComponent.fieldPos.default:(0.0, 0.0)
DotsComponent.fieldPos.label:Field position
DotsComponent.fieldPos.valType:code
DotsComponent.fieldPos.val:(0.0, 0.0)
DotsComponent.fieldPos.allowedTypes:[]
DotsComponent.fieldPos.categ:Basic
DotsComponent.fieldPos.allowedVals:[]
DotsComponent.fieldPos.readOnly:False
DotsComponent.fieldPos.updates:constant
DotsComponent.fieldPos.staticUpdater:None
DotsComponent.fieldPos.hint:Where is the field centred (in the specified units)?
DotsComponent.fieldPos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.speed.default:0.1
DotsComponent.speed.label:Speed
DotsComponent.speed.valType:code
DotsComponent.speed.val:0.1
DotsComponent.speed.allowedTypes:[]
DotsComponent.speed.categ:Dots
DotsComponent.speed.allowedVals:[]
DotsComponent.speed.readOnly:False
DotsComponent.speed.updates:constant
DotsComponent.speed.staticUpdater:None
DotsComponent.speed.hint:Speed of the dots (displacement per frame in the specified units)
DotsComponent.speed.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.noiseDots.default:'direction'
DotsComponent.noiseDots.label:Noise dots
DotsComponent.noiseDots.valType:str
DotsComponent.noiseDots.val:direction
DotsComponent.noiseDots.allowedTypes:[]
DotsComponent.noiseDots.categ:Dots
DotsComponent.noiseDots.allowedVals:['direction', 'position', 'walk']
DotsComponent.noiseDots.readOnly:False
DotsComponent.noiseDots.updates:None
DotsComponent.noiseDots.staticUpdater:None
DotsComponent.noiseDots.hint:What governs the behaviour of the noise dots? See Scase et al.
DotsComponent.noiseDots.allowedUpdates:None
DotsComponent.dotLife.default:3
DotsComponent.dotLife.label:Dot life-time
DotsComponent.dotLife.valType:code
DotsComponent.dotLife.val:3
DotsComponent.dotLife.allowedTypes:[]
DotsComponent.dotLife.categ:Dots
DotsComponent.dotLife.allowedVals:[]
DotsComponent.dotLife.readOnly:False
DotsComponent.dotLife.updates:None
DotsComponent.dotLife.staticUpdater:None
DotsComponent.dotLife.hint:Number of frames before each dot is killed and randomly assigned a new position
DotsComponent.dotLife.allowedUpdates:None
DotsComponent.units.default:'from exp settings'
DotsComponent.units.label:Units
DotsComponent.units.valType:str
DotsComponent.units.val:from exp settings
DotsComponent.units.allowedTypes:[]
DotsComponent.units.categ:Basic
DotsComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
DotsComponent.units.readOnly:False
DotsComponent.units.updates:None
DotsComponent.units.staticUpdater:None
DotsComponent.units.hint:Units of dimensions for this stimulus
DotsComponent.units.allowedUpdates:None
DotsComponent.refreshDots.default:'repeat'
DotsComponent.refreshDots.label:Dot refresh rule
DotsComponent.refreshDots.valType:str
DotsComponent.refreshDots.val:repeat
DotsComponent.refreshDots.allowedTypes:[]
DotsComponent.refreshDots.categ:Dots
DotsComponent.refreshDots.allowedVals:['none', 'repeat']
DotsComponent.refreshDots.readOnly:False
DotsComponent.refreshDots.updates:None
DotsComponent.refreshDots.staticUpdater:None
DotsComponent.refreshDots.hint:When should the whole sample of dots be refreshed
DotsComponent.refreshDots.allowedUpdates:[]
DotsComponent.opacity.default:1
DotsComponent.opacity.label:Opacity
DotsComponent.opacity.valType:code
DotsComponent.opacity.val:1
DotsComponent.opacity.allowedTypes:[]
DotsComponent.opacity.categ:Basic
DotsComponent.opacity.allowedVals:[]
DotsComponent.opacity.readOnly:False
DotsComponent.opacity.updates:constant
DotsComponent.opacity.staticUpdater:None
DotsComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
DotsComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.fieldShape.default:'circle'
DotsComponent.fieldShape.label:Field shape
DotsComponent.fieldShape.valType:str
DotsComponent.fieldShape.val:circle
DotsComponent.fieldShape.allowedTypes:[]
DotsComponent.fieldShape.categ:Basic
DotsComponent.fieldShape.allowedVals:['circle', 'square']
DotsComponent.fieldShape.readOnly:False
DotsComponent.fieldShape.updates:constant
DotsComponent.fieldShape.staticUpdater:None
DotsComponent.fieldShape.hint:What is the shape of the field?
DotsComponent.fieldShape.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.coherence.default:1.0
DotsComponent.coherence.label:Coherence
DotsComponent.coherence.valType:code
DotsComponent.coherence.val:1.0
DotsComponent.coherence.allowedTypes:[]
DotsComponent.coherence.categ:Dots
DotsComponent.coherence.allowedVals:[]
DotsComponent.coherence.readOnly:False
DotsComponent.coherence.updates:constant
DotsComponent.coherence.staticUpdater:None
DotsComponent.coherence.hint:Coherence of the dots (fraction moving in the signal direction on any one frame)
DotsComponent.coherence.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.nDots.default:100
DotsComponent.nDots.label:Number of dots
DotsComponent.nDots.valType:code
DotsComponent.nDots.val:100
DotsComponent.nDots.allowedTypes:[]
DotsComponent.nDots.categ:Dots
DotsComponent.nDots.allowedVals:[]
DotsComponent.nDots.readOnly:False
DotsComponent.nDots.updates:constant
DotsComponent.nDots.staticUpdater:None
DotsComponent.nDots.hint:Number of dots in the field (for circular fields this will be average number of dots)
DotsComponent.nDots.allowedUpdates:None
DotsComponent.stopVal.default:1.0
DotsComponent.stopVal.label:Stop
DotsComponent.stopVal.valType:code
DotsComponent.stopVal.val:1.0
DotsComponent.stopVal.allowedTypes:[]
DotsComponent.stopVal.categ:Basic
DotsComponent.stopVal.allowedVals:[]
DotsComponent.stopVal.readOnly:False
DotsComponent.stopVal.updates:constant
DotsComponent.stopVal.staticUpdater:None
DotsComponent.stopVal.hint:When does the component end? (blank is endless)
DotsComponent.stopVal.allowedUpdates:[]
DotsComponent.durationEstim.default:
DotsComponent.durationEstim.label:Expected duration (s)
DotsComponent.durationEstim.valType:code
DotsComponent.durationEstim.val:
DotsComponent.durationEstim.allowedTypes:[]
DotsComponent.durationEstim.categ:Basic
DotsComponent.durationEstim.allowedVals:[]
DotsComponent.durationEstim.readOnly:False
DotsComponent.durationEstim.updates:None
DotsComponent.durationEstim.staticUpdater:None
DotsComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
DotsComponent.durationEstim.allowedUpdates:None
DotsComponent.fieldSize.default:1.0
DotsComponent.fieldSize.label:Field size
DotsComponent.fieldSize.valType:code
DotsComponent.fieldSize.val:1.0
DotsComponent.fieldSize.allowedTypes:[]
DotsComponent.fieldSize.categ:Basic
DotsComponent.fieldSize.allowedVals:[]
DotsComponent.fieldSize.readOnly:False
DotsComponent.fieldSize.updates:constant
DotsComponent.fieldSize.staticUpdater:None
DotsComponent.fieldSize.hint:What is the size of the field (in the specified units)?
DotsComponent.fieldSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.startEstim.default:
DotsComponent.startEstim.label:Expected start (s)
DotsComponent.startEstim.valType:code
DotsComponent.startEstim.val:
DotsComponent.startEstim.allowedTypes:[]
DotsComponent.startEstim.categ:Basic
DotsComponent.startEstim.allowedVals:[]
DotsComponent.startEstim.readOnly:False
DotsComponent.startEstim.updates:None
DotsComponent.startEstim.staticUpdater:None
DotsComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
DotsComponent.startEstim.allowedUpdates:None
DotsComponent.signalDots.default:'same'
DotsComponent.signalDots.label:Signal dots
DotsComponent.signalDots.valType:str
DotsComponent.signalDots.val:same
DotsComponent.signalDots.allowedTypes:[]
DotsComponent.signalDots.categ:Dots
DotsComponent.signalDots.allowedVals:['same', 'different']
DotsComponent.signalDots.readOnly:False
DotsComponent.signalDots.updates:None
DotsComponent.signalDots.staticUpdater:None
DotsComponent.signalDots.hint:On each frame are the signals dots remaining the same or changing? See Scase et al.
DotsComponent.signalDots.allowedUpdates:None
DotsComponent.startType.default:'time (s)'
DotsComponent.startType.label:start type
DotsComponent.startType.valType:str
DotsComponent.startType.val:time (s)
DotsComponent.startType.allowedTypes:[]
DotsComponent.startType.categ:Basic
DotsComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
DotsComponent.startType.readOnly:False
DotsComponent.startType.updates:None
DotsComponent.startType.staticUpdater:None
DotsComponent.startType.hint:How do you want to define your start point?
DotsComponent.startType.allowedUpdates:None
DotsComponent.stopType.default:'duration (s)'
DotsComponent.stopType.label:stop type
DotsComponent.stopType.valType:str
DotsComponent.stopType.val:duration (s)
DotsComponent.stopType.allowedTypes:[]
DotsComponent.stopType.categ:Basic
DotsComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
DotsComponent.stopType.readOnly:False
DotsComponent.stopType.updates:None
DotsComponent.stopType.staticUpdater:None
DotsComponent.stopType.hint:How do you want to define your end point?
DotsComponent.stopType.allowedUpdates:None
DotsComponent.name.default:dots
DotsComponent.name.label:Name
DotsComponent.name.valType:code
DotsComponent.name.val:dots
DotsComponent.name.allowedTypes:[]
DotsComponent.name.categ:Basic
DotsComponent.name.allowedVals:[]
DotsComponent.name.readOnly:False
DotsComponent.name.staticUpdater:None
DotsComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
DotsComponent.name.allowedUpdates:None
DotsComponent.dotSize.default:2
DotsComponent.dotSize.label:Dot size
DotsComponent.dotSize.valType:code
DotsComponent.dotSize.val:2
DotsComponent.dotSize.allowedTypes:[]
DotsComponent.dotSize.categ:Dots
DotsComponent.dotSize.allowedVals:[]
DotsComponent.dotSize.readOnly:False
DotsComponent.dotSize.updates:constant
DotsComponent.dotSize.staticUpdater:None
DotsComponent.dotSize.hint:Size of the dots IN PIXELS regardless of the set units
DotsComponent.dotSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
DotsComponent.dir.default:0.0
DotsComponent.dir.label:Direction
DotsComponent.dir.valType:code
DotsComponent.dir.val:0.0
DotsComponent.dir.allowedTypes:[]
DotsComponent.dir.categ:Dots
DotsComponent.dir.allowedVals:[]
DotsComponent.dir.readOnly:False
DotsComponent.dir.updates:constant
DotsComponent.dir.staticUpdater:None
DotsComponent.dir.hint:Direction of motion for the signal dots (degrees)
DotsComponent.dir.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.order:['carrier', 'mask']
EnvGratingComponent.color.default:[1,1,1]
EnvGratingComponent.color.label:Color
EnvGratingComponent.color.valType:str
EnvGratingComponent.color.val:$[1,1,1]
EnvGratingComponent.color.allowedTypes:[]
EnvGratingComponent.color.categ:Basic
EnvGratingComponent.color.allowedVals:[]
EnvGratingComponent.color.readOnly:False
EnvGratingComponent.color.updates:constant
EnvGratingComponent.color.staticUpdater:None
EnvGratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
EnvGratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.colorSpace.default:'rgb'
EnvGratingComponent.colorSpace.label:Color space
EnvGratingComponent.colorSpace.valType:str
EnvGratingComponent.colorSpace.val:rgb
EnvGratingComponent.colorSpace.allowedTypes:[]
EnvGratingComponent.colorSpace.categ:Basic
EnvGratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
EnvGratingComponent.colorSpace.readOnly:False
EnvGratingComponent.colorSpace.updates:constant
EnvGratingComponent.colorSpace.staticUpdater:None
EnvGratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
EnvGratingComponent.colorSpace.allowedUpdates:None
EnvGratingComponent.pos.default:(0, 0)
EnvGratingComponent.pos.label:Position [x,y]
EnvGratingComponent.pos.valType:code
EnvGratingComponent.pos.val:(0, 0)
EnvGratingComponent.pos.allowedTypes:[]
EnvGratingComponent.pos.categ:Basic
EnvGratingComponent.pos.allowedVals:[]
EnvGratingComponent.pos.readOnly:False
EnvGratingComponent.pos.updates:constant
EnvGratingComponent.pos.staticUpdater:None
EnvGratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
EnvGratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.stopType.default:'duration (s)'
EnvGratingComponent.stopType.label:stop type
EnvGratingComponent.stopType.valType:str
EnvGratingComponent.stopType.val:duration (s)
EnvGratingComponent.stopType.allowedTypes:[]
EnvGratingComponent.stopType.categ:Basic
EnvGratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
EnvGratingComponent.stopType.readOnly:False
EnvGratingComponent.stopType.updates:None
EnvGratingComponent.stopType.staticUpdater:None
EnvGratingComponent.stopType.hint:How do you want to define your end point?
EnvGratingComponent.stopType.allowedUpdates:None
EnvGratingComponent.blendmode.default:'avg'
EnvGratingComponent.blendmode.label:OpenGL blend mode
EnvGratingComponent.blendmode.valType:str
EnvGratingComponent.blendmode.val:avg
EnvGratingComponent.blendmode.allowedTypes:[]
EnvGratingComponent.blendmode.categ:Basic
EnvGratingComponent.blendmode.allowedVals:['avg', 'add']
EnvGratingComponent.blendmode.readOnly:False
EnvGratingComponent.blendmode.updates:constant
EnvGratingComponent.blendmode.staticUpdater:None
EnvGratingComponent.blendmode.hint:OpenGL Blendmode. Avg is most common mode in PsychoPy, add is useful if combining a beat with the carrier image or numpy array at point of display
EnvGratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.startVal.default:0.0
EnvGratingComponent.startVal.label:Start
EnvGratingComponent.startVal.valType:code
EnvGratingComponent.startVal.val:0.0
EnvGratingComponent.startVal.allowedTypes:[]
EnvGratingComponent.startVal.categ:Basic
EnvGratingComponent.startVal.allowedVals:[]
EnvGratingComponent.startVal.readOnly:False
EnvGratingComponent.startVal.updates:None
EnvGratingComponent.startVal.staticUpdater:None
EnvGratingComponent.startVal.hint:When does the component start?
EnvGratingComponent.startVal.allowedUpdates:None
EnvGratingComponent.size.default:(0.5, 0.5)
EnvGratingComponent.size.label:Size [w,h]
EnvGratingComponent.size.valType:code
EnvGratingComponent.size.val:(0.5, 0.5)
EnvGratingComponent.size.allowedTypes:[]
EnvGratingComponent.size.categ:Basic
EnvGratingComponent.size.allowedVals:[]
EnvGratingComponent.size.readOnly:False
EnvGratingComponent.size.updates:constant
EnvGratingComponent.size.staticUpdater:None
EnvGratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
EnvGratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.units.default:'from exp settings'
EnvGratingComponent.units.label:Units
EnvGratingComponent.units.valType:str
EnvGratingComponent.units.val:from exp settings
EnvGratingComponent.units.allowedTypes:[]
EnvGratingComponent.units.categ:Basic
EnvGratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
EnvGratingComponent.units.readOnly:False
EnvGratingComponent.units.updates:None
EnvGratingComponent.units.staticUpdater:None
EnvGratingComponent.units.hint:Units of dimensions for this stimulus
EnvGratingComponent.units.allowedUpdates:None
EnvGratingComponent.contrast.default:0.5
EnvGratingComponent.contrast.label:Carrier contrast
EnvGratingComponent.contrast.valType:code
EnvGratingComponent.contrast.val:0.5
EnvGratingComponent.contrast.allowedTypes:[]
EnvGratingComponent.contrast.categ:Carrier
EnvGratingComponent.contrast.allowedVals:[]
EnvGratingComponent.contrast.readOnly:False
EnvGratingComponent.contrast.updates:constant
EnvGratingComponent.contrast.staticUpdater:None
EnvGratingComponent.contrast.hint:Contrast of background carrier
EnvGratingComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.opacity.default:1
EnvGratingComponent.opacity.label:Opacity
EnvGratingComponent.opacity.valType:code
EnvGratingComponent.opacity.val:1
EnvGratingComponent.opacity.allowedTypes:[]
EnvGratingComponent.opacity.categ:Basic
EnvGratingComponent.opacity.allowedVals:[]
EnvGratingComponent.opacity.readOnly:False
EnvGratingComponent.opacity.updates:constant
EnvGratingComponent.opacity.staticUpdater:None
EnvGratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
EnvGratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.moddepth.default:1.0
EnvGratingComponent.moddepth.label:Envelope modulation depth
EnvGratingComponent.moddepth.valType:code
EnvGratingComponent.moddepth.val:1.0
EnvGratingComponent.moddepth.allowedTypes:[]
EnvGratingComponent.moddepth.categ:Envelope
EnvGratingComponent.moddepth.allowedVals:[]
EnvGratingComponent.moddepth.readOnly:False
EnvGratingComponent.moddepth.updates:constant
EnvGratingComponent.moddepth.staticUpdater:None
EnvGratingComponent.moddepth.hint:Modulation depth of modulation envelope
EnvGratingComponent.moddepth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.beat.default:False
EnvGratingComponent.beat.label:Is modulation a beat
EnvGratingComponent.beat.valType:str
EnvGratingComponent.beat.val:False
EnvGratingComponent.beat.allowedTypes:[]
EnvGratingComponent.beat.categ:Envelope
EnvGratingComponent.beat.allowedVals:[]
EnvGratingComponent.beat.readOnly:False
EnvGratingComponent.beat.updates:constant
EnvGratingComponent.beat.staticUpdater:None
EnvGratingComponent.beat.hint:Do you want a 'beat'? [beat = carrier*envelope, no beat = carrier*(1+envelope), True/False, Y/N]
EnvGratingComponent.beat.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envori.default:0.0
EnvGratingComponent.envori.label:Envelope orientation
EnvGratingComponent.envori.valType:code
EnvGratingComponent.envori.val:0.0
EnvGratingComponent.envori.allowedTypes:[]
EnvGratingComponent.envori.categ:Envelope
EnvGratingComponent.envori.allowedVals:[]
EnvGratingComponent.envori.readOnly:False
EnvGratingComponent.envori.updates:constant
EnvGratingComponent.envori.staticUpdater:None
EnvGratingComponent.envori.hint:Orientation of the modulation envelope(wraps in range 0-360)
EnvGratingComponent.envori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.stopVal.default:1.0
EnvGratingComponent.stopVal.label:Stop
EnvGratingComponent.stopVal.valType:code
EnvGratingComponent.stopVal.val:1.0
EnvGratingComponent.stopVal.allowedTypes:[]
EnvGratingComponent.stopVal.categ:Basic
EnvGratingComponent.stopVal.allowedVals:[]
EnvGratingComponent.stopVal.readOnly:False
EnvGratingComponent.stopVal.updates:constant
EnvGratingComponent.stopVal.staticUpdater:None
EnvGratingComponent.stopVal.hint:When does the component end? (blank is endless)
EnvGratingComponent.stopVal.allowedUpdates:[]
EnvGratingComponent.durationEstim.default:
EnvGratingComponent.durationEstim.label:Expected duration (s)
EnvGratingComponent.durationEstim.valType:code
EnvGratingComponent.durationEstim.val:
EnvGratingComponent.durationEstim.allowedTypes:[]
EnvGratingComponent.durationEstim.categ:Basic
EnvGratingComponent.durationEstim.allowedVals:[]
EnvGratingComponent.durationEstim.readOnly:False
EnvGratingComponent.durationEstim.updates:None
EnvGratingComponent.durationEstim.staticUpdater:None
EnvGratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
EnvGratingComponent.durationEstim.allowedUpdates:None
EnvGratingComponent.envelope.default:'sin'
EnvGratingComponent.envelope.label:Envelope texture
EnvGratingComponent.envelope.valType:str
EnvGratingComponent.envelope.val:sin
EnvGratingComponent.envelope.allowedTypes:[]
EnvGratingComponent.envelope.categ:Envelope
EnvGratingComponent.envelope.allowedVals:[]
EnvGratingComponent.envelope.readOnly:False
EnvGratingComponent.envelope.updates:constant
EnvGratingComponent.envelope.staticUpdater:None
EnvGratingComponent.envelope.hint:The (2D) texture of the envelope - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.envelope.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.interpolate.default:'linear'
EnvGratingComponent.interpolate.label:Interpolate
EnvGratingComponent.interpolate.valType:str
EnvGratingComponent.interpolate.val:linear
EnvGratingComponent.interpolate.allowedTypes:[]
EnvGratingComponent.interpolate.categ:Carrier
EnvGratingComponent.interpolate.allowedVals:['linear', 'nearest']
EnvGratingComponent.interpolate.readOnly:False
EnvGratingComponent.interpolate.updates:constant
EnvGratingComponent.interpolate.staticUpdater:None
EnvGratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
EnvGratingComponent.interpolate.allowedUpdates:[]
EnvGratingComponent.startEstim.default:
EnvGratingComponent.startEstim.label:Expected start (s)
EnvGratingComponent.startEstim.valType:code
EnvGratingComponent.startEstim.val:
EnvGratingComponent.startEstim.allowedTypes:[]
EnvGratingComponent.startEstim.categ:Basic
EnvGratingComponent.startEstim.allowedVals:[]
EnvGratingComponent.startEstim.readOnly:False
EnvGratingComponent.startEstim.updates:None
EnvGratingComponent.startEstim.staticUpdater:None
EnvGratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
EnvGratingComponent.startEstim.allowedUpdates:None
EnvGratingComponent.startType.default:'time (s)'
EnvGratingComponent.startType.label:start type
EnvGratingComponent.startType.valType:str
EnvGratingComponent.startType.val:time (s)
EnvGratingComponent.startType.allowedTypes:[]
EnvGratingComponent.startType.categ:Basic
EnvGratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
EnvGratingComponent.startType.readOnly:False
EnvGratingComponent.startType.updates:None
EnvGratingComponent.startType.staticUpdater:None
EnvGratingComponent.startType.hint:How do you want to define your start point?
EnvGratingComponent.startType.allowedUpdates:None
EnvGratingComponent.ori.default:0
EnvGratingComponent.ori.label:Carrier Orientation
EnvGratingComponent.ori.valType:code
EnvGratingComponent.ori.val:0
EnvGratingComponent.ori.allowedTypes:[]
EnvGratingComponent.ori.categ:Carrier
EnvGratingComponent.ori.allowedVals:[]
EnvGratingComponent.ori.readOnly:False
EnvGratingComponent.ori.updates:constant
EnvGratingComponent.ori.staticUpdater:None
EnvGratingComponent.ori.hint:Orientation of this stimulus (in deg)
EnvGratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.phase.default:0.0
EnvGratingComponent.phase.label:Carrier phase (in cycles)
EnvGratingComponent.phase.valType:code
EnvGratingComponent.phase.val:0.0
EnvGratingComponent.phase.allowedTypes:[]
EnvGratingComponent.phase.categ:Carrier
EnvGratingComponent.phase.allowedVals:[]
EnvGratingComponent.phase.readOnly:False
EnvGratingComponent.phase.updates:constant
EnvGratingComponent.phase.staticUpdater:None
EnvGratingComponent.phase.hint:Spatial positioning of the background carrier (wraps in range 0-1.0)
EnvGratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.texture resolution.default:128
EnvGratingComponent.texture resolution.label:Texture resolution
EnvGratingComponent.texture resolution.valType:code
EnvGratingComponent.texture resolution.val:128
EnvGratingComponent.texture resolution.allowedTypes:[]
EnvGratingComponent.texture resolution.categ:Carrier
EnvGratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
EnvGratingComponent.texture resolution.readOnly:False
EnvGratingComponent.texture resolution.updates:constant
EnvGratingComponent.texture resolution.staticUpdater:None
EnvGratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
EnvGratingComponent.texture resolution.allowedUpdates:[]
EnvGratingComponent.name.default:env_grating
EnvGratingComponent.name.label:Name
EnvGratingComponent.name.valType:code
EnvGratingComponent.name.val:env_grating
EnvGratingComponent.name.allowedTypes:[]
EnvGratingComponent.name.categ:Basic
EnvGratingComponent.name.allowedVals:[]
EnvGratingComponent.name.readOnly:False
EnvGratingComponent.name.staticUpdater:None
EnvGratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
EnvGratingComponent.name.allowedUpdates:None
EnvGratingComponent.envphase.default:0.0
EnvGratingComponent.envphase.label:Envelope phase
EnvGratingComponent.envphase.valType:code
EnvGratingComponent.envphase.val:0.0
EnvGratingComponent.envphase.allowedTypes:[]
EnvGratingComponent.envphase.categ:Envelope
EnvGratingComponent.envphase.allowedVals:[]
EnvGratingComponent.envphase.readOnly:False
EnvGratingComponent.envphase.updates:constant
EnvGratingComponent.envphase.staticUpdater:None
EnvGratingComponent.envphase.hint:Spatial positioning of the modulation envelope(wraps in range 0-1.0)
EnvGratingComponent.envphase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.envsf.default:1.0
EnvGratingComponent.envsf.label:Envelope spatial frequency
EnvGratingComponent.envsf.valType:code
EnvGratingComponent.envsf.val:1.0
EnvGratingComponent.envsf.allowedTypes:[]
EnvGratingComponent.envsf.categ:Envelope
EnvGratingComponent.envsf.allowedVals:[]
EnvGratingComponent.envsf.readOnly:False
EnvGratingComponent.envsf.updates:constant
EnvGratingComponent.envsf.staticUpdater:None
EnvGratingComponent.envsf.hint:Spatial frequency of the modulation envelope repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.envsf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.mask.default:'None'
EnvGratingComponent.mask.label:Mask
EnvGratingComponent.mask.valType:str
EnvGratingComponent.mask.val:None
EnvGratingComponent.mask.allowedTypes:[]
EnvGratingComponent.mask.categ:Carrier
EnvGratingComponent.mask.allowedVals:[]
EnvGratingComponent.mask.readOnly:False
EnvGratingComponent.mask.updates:constant
EnvGratingComponent.mask.staticUpdater:None
EnvGratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
EnvGratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.carrier.default:'sin'
EnvGratingComponent.carrier.label:Carrier texture
EnvGratingComponent.carrier.valType:str
EnvGratingComponent.carrier.val:sin
EnvGratingComponent.carrier.allowedTypes:[]
EnvGratingComponent.carrier.categ:Carrier
EnvGratingComponent.carrier.allowedVals:[]
EnvGratingComponent.carrier.readOnly:False
EnvGratingComponent.carrier.updates:constant
EnvGratingComponent.carrier.staticUpdater:None
EnvGratingComponent.carrier.hint:The (2D) texture of the background - can be sin, sqr, sinXsin... or a filename (including path)
EnvGratingComponent.carrier.allowedUpdates:['constant', 'set every repeat', 'set every frame']
EnvGratingComponent.sf.default:1.0
EnvGratingComponent.sf.label:Carrier spatial frequency
EnvGratingComponent.sf.valType:code
EnvGratingComponent.sf.val:1.0
EnvGratingComponent.sf.allowedTypes:[]
EnvGratingComponent.sf.categ:Carrier
EnvGratingComponent.sf.allowedVals:[]
EnvGratingComponent.sf.readOnly:False
EnvGratingComponent.sf.updates:constant
EnvGratingComponent.sf.staticUpdater:None
EnvGratingComponent.sf.hint:Spatial frequency of background carrier repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
EnvGratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.order:['tex', 'mask']
GratingComponent.opacity.default:1
GratingComponent.opacity.label:Opacity
GratingComponent.opacity.valType:code
GratingComponent.opacity.val:1
GratingComponent.opacity.allowedTypes:[]
GratingComponent.opacity.categ:Basic
GratingComponent.opacity.allowedVals:[]
GratingComponent.opacity.readOnly:False
GratingComponent.opacity.updates:constant
GratingComponent.opacity.staticUpdater:None
GratingComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
GratingComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.tex.default:'sin'
GratingComponent.tex.label:Texture
GratingComponent.tex.valType:str
GratingComponent.tex.val:sin
GratingComponent.tex.allowedTypes:[]
GratingComponent.tex.categ:Advanced
GratingComponent.tex.allowedVals:[]
GratingComponent.tex.readOnly:False
GratingComponent.tex.updates:constant
GratingComponent.tex.staticUpdater:None
GratingComponent.tex.hint:The (2D) texture of the grating - can be sin, sqr, sinXsin... or a filename (including path)
GratingComponent.tex.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.colorSpace.default:'rgb'
GratingComponent.colorSpace.label:Color space
GratingComponent.colorSpace.valType:str
GratingComponent.colorSpace.val:rgb
GratingComponent.colorSpace.allowedTypes:[]
GratingComponent.colorSpace.categ:Basic
GratingComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
GratingComponent.colorSpace.readOnly:False
GratingComponent.colorSpace.updates:constant
GratingComponent.colorSpace.staticUpdater:None
GratingComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
GratingComponent.colorSpace.allowedUpdates:None
GratingComponent.blendmode.default:'avg'
GratingComponent.blendmode.label:OpenGL blend mode
GratingComponent.blendmode.valType:str
GratingComponent.blendmode.val:avg
GratingComponent.blendmode.allowedTypes:[]
GratingComponent.blendmode.categ:Basic
GratingComponent.blendmode.allowedVals:['avg', 'add']
GratingComponent.blendmode.readOnly:False
GratingComponent.blendmode.updates:constant
GratingComponent.blendmode.staticUpdater:None
GratingComponent.blendmode.hint:OpenGL Blendmode: avg gives traditional transparency, add is important to combine gratings)]
GratingComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.name.default:grating
GratingComponent.name.label:Name
GratingComponent.name.valType:code
GratingComponent.name.val:grating
GratingComponent.name.allowedTypes:[]
GratingComponent.name.categ:Basic
GratingComponent.name.allowedVals:[]
GratingComponent.name.readOnly:False
GratingComponent.name.staticUpdater:None
GratingComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
GratingComponent.name.allowedUpdates:None
GratingComponent.color.default:[1,1,1]
GratingComponent.color.label:Color
GratingComponent.color.valType:str
GratingComponent.color.val:$[1,1,1]
GratingComponent.color.allowedTypes:[]
GratingComponent.color.categ:Basic
GratingComponent.color.allowedVals:[]
GratingComponent.color.readOnly:False
GratingComponent.color.updates:constant
GratingComponent.color.staticUpdater:None
GratingComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
GratingComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.stopVal.default:1.0
GratingComponent.stopVal.label:Stop
GratingComponent.stopVal.valType:code
GratingComponent.stopVal.val:1.0
GratingComponent.stopVal.allowedTypes:[]
GratingComponent.stopVal.categ:Basic
GratingComponent.stopVal.allowedVals:[]
GratingComponent.stopVal.readOnly:False
GratingComponent.stopVal.updates:constant
GratingComponent.stopVal.staticUpdater:None
GratingComponent.stopVal.hint:When does the component end? (blank is endless)
GratingComponent.stopVal.allowedUpdates:[]
GratingComponent.durationEstim.default:
GratingComponent.durationEstim.label:Expected duration (s)
GratingComponent.durationEstim.valType:code
GratingComponent.durationEstim.val:
GratingComponent.durationEstim.allowedTypes:[]
GratingComponent.durationEstim.categ:Basic
GratingComponent.durationEstim.allowedVals:[]
GratingComponent.durationEstim.readOnly:False
GratingComponent.durationEstim.updates:None
GratingComponent.durationEstim.staticUpdater:None
GratingComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
GratingComponent.durationEstim.allowedUpdates:None
GratingComponent.mask.default:'None'
GratingComponent.mask.label:Mask
GratingComponent.mask.valType:str
GratingComponent.mask.val:None
GratingComponent.mask.allowedTypes:[]
GratingComponent.mask.categ:Advanced
GratingComponent.mask.allowedVals:[]
GratingComponent.mask.readOnly:False
GratingComponent.mask.updates:constant
GratingComponent.mask.staticUpdater:None
GratingComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
GratingComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.pos.default:(0, 0)
GratingComponent.pos.label:Position [x,y]
GratingComponent.pos.valType:code
GratingComponent.pos.val:(0, 0)
GratingComponent.pos.allowedTypes:[]
GratingComponent.pos.categ:Basic
GratingComponent.pos.allowedVals:[]
GratingComponent.pos.readOnly:False
GratingComponent.pos.updates:constant
GratingComponent.pos.staticUpdater:None
GratingComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
GratingComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.interpolate.default:'linear'
GratingComponent.interpolate.label:Interpolate
GratingComponent.interpolate.valType:str
GratingComponent.interpolate.val:linear
GratingComponent.interpolate.allowedTypes:[]
GratingComponent.interpolate.categ:Advanced
GratingComponent.interpolate.allowedVals:['linear', 'nearest']
GratingComponent.interpolate.readOnly:False
GratingComponent.interpolate.updates:constant
GratingComponent.interpolate.staticUpdater:None
GratingComponent.interpolate.hint:How should the image be interpolated if/when rescaled
GratingComponent.interpolate.allowedUpdates:[]
GratingComponent.startEstim.default:
GratingComponent.startEstim.label:Expected start (s)
GratingComponent.startEstim.valType:code
GratingComponent.startEstim.val:
GratingComponent.startEstim.allowedTypes:[]
GratingComponent.startEstim.categ:Basic
GratingComponent.startEstim.allowedVals:[]
GratingComponent.startEstim.readOnly:False
GratingComponent.startEstim.updates:None
GratingComponent.startEstim.staticUpdater:None
GratingComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
GratingComponent.startEstim.allowedUpdates:None
GratingComponent.units.default:'from exp settings'
GratingComponent.units.label:Units
GratingComponent.units.valType:str
GratingComponent.units.val:from exp settings
GratingComponent.units.allowedTypes:[]
GratingComponent.units.categ:Basic
GratingComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
GratingComponent.units.readOnly:False
GratingComponent.units.updates:None
GratingComponent.units.staticUpdater:None
GratingComponent.units.hint:Units of dimensions for this stimulus
GratingComponent.units.allowedUpdates:None
GratingComponent.texture resolution.default:128
GratingComponent.texture resolution.label:Texture resolution
GratingComponent.texture resolution.valType:code
GratingComponent.texture resolution.val:128
GratingComponent.texture resolution.allowedTypes:[]
GratingComponent.texture resolution.categ:Advanced
GratingComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
GratingComponent.texture resolution.readOnly:False
GratingComponent.texture resolution.updates:constant
GratingComponent.texture resolution.staticUpdater:None
GratingComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
GratingComponent.texture resolution.allowedUpdates:[]
GratingComponent.phase.default:0.0
GratingComponent.phase.label:Phase (in cycles)
GratingComponent.phase.valType:code
GratingComponent.phase.val:0.0
GratingComponent.phase.allowedTypes:[]
GratingComponent.phase.categ:Advanced
GratingComponent.phase.allowedVals:[]
GratingComponent.phase.readOnly:False
GratingComponent.phase.updates:constant
GratingComponent.phase.staticUpdater:None
GratingComponent.phase.hint:Spatial positioning of the image on the grating (wraps in range 0-1.0)
GratingComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.startType.default:'time (s)'
GratingComponent.startType.label:start type
GratingComponent.startType.valType:str
GratingComponent.startType.val:time (s)
GratingComponent.startType.allowedTypes:[]
GratingComponent.startType.categ:Basic
GratingComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
GratingComponent.startType.readOnly:False
GratingComponent.startType.updates:None
GratingComponent.startType.staticUpdater:None
GratingComponent.startType.hint:How do you want to define your start point?
GratingComponent.startType.allowedUpdates:None
GratingComponent.ori.default:0
GratingComponent.ori.label:Orientation
GratingComponent.ori.valType:code
GratingComponent.ori.val:0
GratingComponent.ori.allowedTypes:[]
GratingComponent.ori.categ:Basic
GratingComponent.ori.allowedVals:[]
GratingComponent.ori.readOnly:False
GratingComponent.ori.updates:constant
GratingComponent.ori.staticUpdater:None
GratingComponent.ori.hint:Orientation of this stimulus (in deg)
GratingComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.stopType.default:'duration (s)'
GratingComponent.stopType.label:stop type
GratingComponent.stopType.valType:str
GratingComponent.stopType.val:duration (s)
GratingComponent.stopType.allowedTypes:[]
GratingComponent.stopType.categ:Basic
GratingComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
GratingComponent.stopType.readOnly:False
GratingComponent.stopType.updates:None
GratingComponent.stopType.staticUpdater:None
GratingComponent.stopType.hint:How do you want to define your end point?
GratingComponent.stopType.allowedUpdates:None
GratingComponent.startVal.default:0.0
GratingComponent.startVal.label:Start
GratingComponent.startVal.valType:code
GratingComponent.startVal.val:0.0
GratingComponent.startVal.allowedTypes:[]
GratingComponent.startVal.categ:Basic
GratingComponent.startVal.allowedVals:[]
GratingComponent.startVal.readOnly:False
GratingComponent.startVal.updates:None
GratingComponent.startVal.staticUpdater:None
GratingComponent.startVal.hint:When does the component start?
GratingComponent.startVal.allowedUpdates:None
GratingComponent.sf.default:None
GratingComponent.sf.label:Spatial frequency
GratingComponent.sf.valType:code
GratingComponent.sf.val:None
GratingComponent.sf.allowedTypes:[]
GratingComponent.sf.categ:Advanced
GratingComponent.sf.allowedVals:[]
GratingComponent.sf.readOnly:False
GratingComponent.sf.updates:constant
GratingComponent.sf.staticUpdater:None
GratingComponent.sf.hint:Spatial frequency of image repeats across the grating in 1 or 2 dimensions, e.g. 4 or [2,3]
GratingComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
GratingComponent.size.default:(0.5, 0.5)
GratingComponent.size.label:Size [w,h]
GratingComponent.size.valType:code
GratingComponent.size.val:(0.5, 0.5)
GratingComponent.size.allowedTypes:[]
GratingComponent.size.categ:Basic
GratingComponent.size.allowedVals:[]
GratingComponent.size.readOnly:False
GratingComponent.size.updates:constant
GratingComponent.size.staticUpdater:None
GratingComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
GratingComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.order:['name', 'image', 'pos', 'size', 'ori', 'opacity']
ImageComponent.opacity.default:1
ImageComponent.opacity.label:Opacity
ImageComponent.opacity.valType:code
ImageComponent.opacity.val:1
ImageComponent.opacity.allowedTypes:[]
ImageComponent.opacity.categ:Basic
ImageComponent.opacity.allowedVals:[]
ImageComponent.opacity.readOnly:False
ImageComponent.opacity.updates:constant
ImageComponent.opacity.staticUpdater:None
ImageComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
ImageComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.flipVert.default:False
ImageComponent.flipVert.label:Flip vertically
ImageComponent.flipVert.valType:bool
ImageComponent.flipVert.val:False
ImageComponent.flipVert.allowedTypes:[]
ImageComponent.flipVert.categ:Advanced
ImageComponent.flipVert.allowedVals:[]
ImageComponent.flipVert.readOnly:False
ImageComponent.flipVert.updates:constant
ImageComponent.flipVert.staticUpdater:None
ImageComponent.flipVert.hint:Should the image be flipped vertically (top to bottom)?
ImageComponent.flipVert.allowedUpdates:[]
ImageComponent.colorSpace.default:'rgb'
ImageComponent.colorSpace.label:Color space
ImageComponent.colorSpace.valType:str
ImageComponent.colorSpace.val:rgb
ImageComponent.colorSpace.allowedTypes:[]
ImageComponent.colorSpace.categ:Advanced
ImageComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
ImageComponent.colorSpace.readOnly:False
ImageComponent.colorSpace.updates:constant
ImageComponent.colorSpace.staticUpdater:None
ImageComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
ImageComponent.colorSpace.allowedUpdates:None
ImageComponent.flipHoriz.default:False
ImageComponent.flipHoriz.label:Flip horizontally
ImageComponent.flipHoriz.valType:bool
ImageComponent.flipHoriz.val:False
ImageComponent.flipHoriz.allowedTypes:[]
ImageComponent.flipHoriz.categ:Advanced
ImageComponent.flipHoriz.allowedVals:[]
ImageComponent.flipHoriz.readOnly:False
ImageComponent.flipHoriz.updates:constant
ImageComponent.flipHoriz.staticUpdater:None
ImageComponent.flipHoriz.hint:Should the image be flipped horizontally (left to right)?
ImageComponent.flipHoriz.allowedUpdates:[]
ImageComponent.name.default:image
ImageComponent.name.label:Name
ImageComponent.name.valType:code
ImageComponent.name.val:image
ImageComponent.name.allowedTypes:[]
ImageComponent.name.categ:Basic
ImageComponent.name.allowedVals:[]
ImageComponent.name.readOnly:False
ImageComponent.name.staticUpdater:None
ImageComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ImageComponent.name.allowedUpdates:None
ImageComponent.color.default:[1,1,1]
ImageComponent.color.label:Color
ImageComponent.color.valType:str
ImageComponent.color.val:$[1,1,1]
ImageComponent.color.allowedTypes:[]
ImageComponent.color.categ:Advanced
ImageComponent.color.allowedVals:[]
ImageComponent.color.readOnly:False
ImageComponent.color.updates:constant
ImageComponent.color.staticUpdater:None
ImageComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
ImageComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.stopVal.default:1.0
ImageComponent.stopVal.label:Stop
ImageComponent.stopVal.valType:code
ImageComponent.stopVal.val:1.0
ImageComponent.stopVal.allowedTypes:[]
ImageComponent.stopVal.categ:Basic
ImageComponent.stopVal.allowedVals:[]
ImageComponent.stopVal.readOnly:False
ImageComponent.stopVal.updates:constant
ImageComponent.stopVal.staticUpdater:None
ImageComponent.stopVal.hint:When does the component end? (blank is endless)
ImageComponent.stopVal.allowedUpdates:[]
ImageComponent.durationEstim.default:
ImageComponent.durationEstim.label:Expected duration (s)
ImageComponent.durationEstim.valType:code
ImageComponent.durationEstim.val:
ImageComponent.durationEstim.allowedTypes:[]
ImageComponent.durationEstim.categ:Basic
ImageComponent.durationEstim.allowedVals:[]
ImageComponent.durationEstim.readOnly:False
ImageComponent.durationEstim.updates:None
ImageComponent.durationEstim.staticUpdater:None
ImageComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ImageComponent.durationEstim.allowedUpdates:None
ImageComponent.mask.default:'None'
ImageComponent.mask.label:Mask
ImageComponent.mask.valType:str
ImageComponent.mask.val:None
ImageComponent.mask.allowedTypes:[]
ImageComponent.mask.categ:Advanced
ImageComponent.mask.allowedVals:[]
ImageComponent.mask.readOnly:False
ImageComponent.mask.updates:constant
ImageComponent.mask.staticUpdater:None
ImageComponent.mask.hint:An image to define the alpha mask through which the image is seen - gauss, circle, None or a filename (including path)
ImageComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.pos.default:(0, 0)
ImageComponent.pos.label:Position [x,y]
ImageComponent.pos.valType:code
ImageComponent.pos.val:(0, 0)
ImageComponent.pos.allowedTypes:[]
ImageComponent.pos.categ:Basic
ImageComponent.pos.allowedVals:[]
ImageComponent.pos.readOnly:False
ImageComponent.pos.updates:constant
ImageComponent.pos.staticUpdater:None
ImageComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
ImageComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.interpolate.default:'linear'
ImageComponent.interpolate.label:Interpolate
ImageComponent.interpolate.valType:str
ImageComponent.interpolate.val:linear
ImageComponent.interpolate.allowedTypes:[]
ImageComponent.interpolate.categ:Advanced
ImageComponent.interpolate.allowedVals:['linear', 'nearest']
ImageComponent.interpolate.readOnly:False
ImageComponent.interpolate.updates:constant
ImageComponent.interpolate.staticUpdater:None
ImageComponent.interpolate.hint:How should the image be interpolated if/when rescaled
ImageComponent.interpolate.allowedUpdates:[]
ImageComponent.startEstim.default:
ImageComponent.startEstim.label:Expected start (s)
ImageComponent.startEstim.valType:code
ImageComponent.startEstim.val:
ImageComponent.startEstim.allowedTypes:[]
ImageComponent.startEstim.categ:Basic
ImageComponent.startEstim.allowedVals:[]
ImageComponent.startEstim.readOnly:False
ImageComponent.startEstim.updates:None
ImageComponent.startEstim.staticUpdater:None
ImageComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ImageComponent.startEstim.allowedUpdates:None
ImageComponent.units.default:'from exp settings'
ImageComponent.units.label:Units
ImageComponent.units.valType:str
ImageComponent.units.val:from exp settings
ImageComponent.units.allowedTypes:[]
ImageComponent.units.categ:Basic
ImageComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
ImageComponent.units.readOnly:False
ImageComponent.units.updates:None
ImageComponent.units.staticUpdater:None
ImageComponent.units.hint:Units of dimensions for this stimulus
ImageComponent.units.allowedUpdates:None
ImageComponent.texture resolution.default:128
ImageComponent.texture resolution.label:Texture resolution
ImageComponent.texture resolution.valType:code
ImageComponent.texture resolution.val:128
ImageComponent.texture resolution.allowedTypes:[]
ImageComponent.texture resolution.categ:Advanced
ImageComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
ImageComponent.texture resolution.readOnly:False
ImageComponent.texture resolution.updates:constant
ImageComponent.texture resolution.staticUpdater:None
ImageComponent.texture resolution.hint:Resolution of the mask if one is used.
ImageComponent.texture resolution.allowedUpdates:[]
ImageComponent.startType.default:'time (s)'
ImageComponent.startType.label:start type
ImageComponent.startType.valType:str
ImageComponent.startType.val:time (s)
ImageComponent.startType.allowedTypes:[]
ImageComponent.startType.categ:Basic
ImageComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ImageComponent.startType.readOnly:False
ImageComponent.startType.updates:None
ImageComponent.startType.staticUpdater:None
ImageComponent.startType.hint:How do you want to define your start point?
ImageComponent.startType.allowedUpdates:None
ImageComponent.ori.default:0
ImageComponent.ori.label:Orientation
ImageComponent.ori.valType:code
ImageComponent.ori.val:0
ImageComponent.ori.allowedTypes:[]
ImageComponent.ori.categ:Basic
ImageComponent.ori.allowedVals:[]
ImageComponent.ori.readOnly:False
ImageComponent.ori.updates:constant
ImageComponent.ori.staticUpdater:None
ImageComponent.ori.hint:Orientation of this stimulus (in deg)
ImageComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.stopType.default:'duration (s)'
ImageComponent.stopType.label:stop type
ImageComponent.stopType.valType:str
ImageComponent.stopType.val:duration (s)
ImageComponent.stopType.allowedTypes:[]
ImageComponent.stopType.categ:Basic
ImageComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ImageComponent.stopType.readOnly:False
ImageComponent.stopType.updates:None
ImageComponent.stopType.staticUpdater:None
ImageComponent.stopType.hint:How do you want to define your end point?
ImageComponent.stopType.allowedUpdates:None
ImageComponent.startVal.default:0.0
ImageComponent.startVal.label:Start
ImageComponent.startVal.valType:code
ImageComponent.startVal.val:0.0
ImageComponent.startVal.allowedTypes:[]
ImageComponent.startVal.categ:Basic
ImageComponent.startVal.allowedVals:[]
ImageComponent.startVal.readOnly:False
ImageComponent.startVal.updates:None
ImageComponent.startVal.staticUpdater:None
ImageComponent.startVal.hint:When does the component start?
ImageComponent.startVal.allowedUpdates:None
ImageComponent.image.default:''
ImageComponent.image.label:Image
ImageComponent.image.valType:str
ImageComponent.image.val:
ImageComponent.image.allowedTypes:[]
ImageComponent.image.categ:Basic
ImageComponent.image.allowedVals:[]
ImageComponent.image.readOnly:False
ImageComponent.image.updates:constant
ImageComponent.image.staticUpdater:None
ImageComponent.image.hint:The image to be displayed - a filename, including path
ImageComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
ImageComponent.size.default:(0.5, 0.5)
ImageComponent.size.label:Size [w,h]
ImageComponent.size.valType:code
ImageComponent.size.val:(0.5, 0.5)
ImageComponent.size.allowedTypes:[]
ImageComponent.size.categ:Basic
ImageComponent.size.allowedVals:[]
ImageComponent.size.readOnly:False
ImageComponent.size.updates:constant
ImageComponent.size.staticUpdater:None
ImageComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
ImageComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
KeyboardComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
KeyboardComponent.correctAns.default:''
KeyboardComponent.correctAns.label:Correct answer
KeyboardComponent.correctAns.valType:str
KeyboardComponent.correctAns.val:
KeyboardComponent.correctAns.allowedTypes:[]
KeyboardComponent.correctAns.categ:Basic
KeyboardComponent.correctAns.allowedVals:[]
KeyboardComponent.correctAns.readOnly:False
KeyboardComponent.correctAns.updates:constant
KeyboardComponent.correctAns.staticUpdater:None
KeyboardComponent.correctAns.hint:What is the 'correct' key? Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
KeyboardComponent.correctAns.allowedUpdates:None
KeyboardComponent.storeCorrect.default:False
KeyboardComponent.storeCorrect.label:Store correct
KeyboardComponent.storeCorrect.valType:bool
KeyboardComponent.storeCorrect.val:False
KeyboardComponent.storeCorrect.allowedTypes:[]
KeyboardComponent.storeCorrect.categ:Basic
KeyboardComponent.storeCorrect.allowedVals:[]
KeyboardComponent.storeCorrect.readOnly:False
KeyboardComponent.storeCorrect.updates:constant
KeyboardComponent.storeCorrect.staticUpdater:None
KeyboardComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
KeyboardComponent.storeCorrect.allowedUpdates:None
KeyboardComponent.name.default:key_resp
KeyboardComponent.name.label:Name
KeyboardComponent.name.valType:code
KeyboardComponent.name.val:key_resp
KeyboardComponent.name.allowedTypes:[]
KeyboardComponent.name.categ:Basic
KeyboardComponent.name.allowedVals:[]
KeyboardComponent.name.readOnly:False
KeyboardComponent.name.staticUpdater:None
KeyboardComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
KeyboardComponent.name.allowedUpdates:None
KeyboardComponent.stopVal.default:
KeyboardComponent.stopVal.label:Stop
KeyboardComponent.stopVal.valType:code
KeyboardComponent.stopVal.val:
KeyboardComponent.stopVal.allowedTypes:[]
KeyboardComponent.stopVal.categ:Basic
KeyboardComponent.stopVal.allowedVals:[]
KeyboardComponent.stopVal.readOnly:False
KeyboardComponent.stopVal.updates:constant
KeyboardComponent.stopVal.staticUpdater:None
KeyboardComponent.stopVal.hint:When does the component end? (blank is endless)
KeyboardComponent.stopVal.allowedUpdates:[]
KeyboardComponent.durationEstim.default:
KeyboardComponent.durationEstim.label:Expected duration (s)
KeyboardComponent.durationEstim.valType:code
KeyboardComponent.durationEstim.val:
KeyboardComponent.durationEstim.allowedTypes:[]
KeyboardComponent.durationEstim.categ:Basic
KeyboardComponent.durationEstim.allowedVals:[]
KeyboardComponent.durationEstim.readOnly:False
KeyboardComponent.durationEstim.updates:None
KeyboardComponent.durationEstim.staticUpdater:None
KeyboardComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
KeyboardComponent.durationEstim.allowedUpdates:None
KeyboardComponent.forceEndRoutine.default:True
KeyboardComponent.forceEndRoutine.label:Force end of Routine
KeyboardComponent.forceEndRoutine.valType:bool
KeyboardComponent.forceEndRoutine.val:True
KeyboardComponent.forceEndRoutine.allowedTypes:[]
KeyboardComponent.forceEndRoutine.categ:Basic
KeyboardComponent.forceEndRoutine.allowedVals:[]
KeyboardComponent.forceEndRoutine.readOnly:False
KeyboardComponent.forceEndRoutine.updates:constant
KeyboardComponent.forceEndRoutine.staticUpdater:None
KeyboardComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
KeyboardComponent.forceEndRoutine.allowedUpdates:None
KeyboardComponent.startEstim.default:
KeyboardComponent.startEstim.label:Expected start (s)
KeyboardComponent.startEstim.valType:code
KeyboardComponent.startEstim.val:
KeyboardComponent.startEstim.allowedTypes:[]
KeyboardComponent.startEstim.categ:Basic
KeyboardComponent.startEstim.allowedVals:[]
KeyboardComponent.startEstim.readOnly:False
KeyboardComponent.startEstim.updates:None
KeyboardComponent.startEstim.staticUpdater:None
KeyboardComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
KeyboardComponent.startEstim.allowedUpdates:None
KeyboardComponent.discard previous.default:True
KeyboardComponent.discard previous.label:Discard previous
KeyboardComponent.discard previous.valType:bool
KeyboardComponent.discard previous.val:True
KeyboardComponent.discard previous.allowedTypes:[]
KeyboardComponent.discard previous.categ:Basic
KeyboardComponent.discard previous.allowedVals:[]
KeyboardComponent.discard previous.readOnly:False
KeyboardComponent.discard previous.updates:constant
KeyboardComponent.discard previous.staticUpdater:None
KeyboardComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
KeyboardComponent.discard previous.allowedUpdates:None
KeyboardComponent.startType.default:'time (s)'
KeyboardComponent.startType.label:start type
KeyboardComponent.startType.valType:str
KeyboardComponent.startType.val:time (s)
KeyboardComponent.startType.allowedTypes:[]
KeyboardComponent.startType.categ:Basic
KeyboardComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
KeyboardComponent.startType.readOnly:False
KeyboardComponent.startType.updates:None
KeyboardComponent.startType.staticUpdater:None
KeyboardComponent.startType.hint:How do you want to define your start point?
KeyboardComponent.startType.allowedUpdates:None
KeyboardComponent.allowedKeys.default:'y','n','left','right','space'
KeyboardComponent.allowedKeys.label:Allowed keys
KeyboardComponent.allowedKeys.valType:code
KeyboardComponent.allowedKeys.val:'y','n','left','right','space'
KeyboardComponent.allowedKeys.allowedTypes:[]
KeyboardComponent.allowedKeys.categ:Basic
KeyboardComponent.allowedKeys.allowedVals:[]
KeyboardComponent.allowedKeys.readOnly:False
KeyboardComponent.allowedKeys.updates:constant
KeyboardComponent.allowedKeys.staticUpdater:None
KeyboardComponent.allowedKeys.hint:A comma-separated list of keys (with quotes), such as 'q','right','space','left'
KeyboardComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
KeyboardComponent.stopType.default:'duration (s)'
KeyboardComponent.stopType.label:stop type
KeyboardComponent.stopType.valType:str
KeyboardComponent.stopType.val:duration (s)
KeyboardComponent.stopType.allowedTypes:[]
KeyboardComponent.stopType.categ:Basic
KeyboardComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
KeyboardComponent.stopType.readOnly:False
KeyboardComponent.stopType.updates:None
KeyboardComponent.stopType.staticUpdater:None
KeyboardComponent.stopType.hint:How do you want to define your end point?
KeyboardComponent.stopType.allowedUpdates:None
KeyboardComponent.startVal.default:0.0
KeyboardComponent.startVal.label:Start
KeyboardComponent.startVal.valType:code
KeyboardComponent.startVal.val:0.0
KeyboardComponent.startVal.allowedTypes:[]
KeyboardComponent.startVal.categ:Basic
KeyboardComponent.startVal.allowedVals:[]
KeyboardComponent.startVal.readOnly:False
KeyboardComponent.startVal.updates:None
KeyboardComponent.startVal.staticUpdater:None
KeyboardComponent.startVal.hint:When does the component start?
KeyboardComponent.startVal.allowedUpdates:None
KeyboardComponent.store.default:'last key'
KeyboardComponent.store.label:Store
KeyboardComponent.store.valType:str
KeyboardComponent.store.val:last key
KeyboardComponent.store.allowedTypes:[]
KeyboardComponent.store.categ:Basic
KeyboardComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
KeyboardComponent.store.readOnly:False
KeyboardComponent.store.updates:constant
KeyboardComponent.store.staticUpdater:None
KeyboardComponent.store.hint:Choose which (if any) responses to store at the end of a trial
KeyboardComponent.store.allowedUpdates:None
KeyboardComponent.syncScreenRefresh.default:True
KeyboardComponent.syncScreenRefresh.label:sync RT with screen
KeyboardComponent.syncScreenRefresh.valType:bool
KeyboardComponent.syncScreenRefresh.val:True
KeyboardComponent.syncScreenRefresh.allowedTypes:[]
KeyboardComponent.syncScreenRefresh.categ:Basic
KeyboardComponent.syncScreenRefresh.allowedVals:[]
KeyboardComponent.syncScreenRefresh.readOnly:False
KeyboardComponent.syncScreenRefresh.updates:constant
KeyboardComponent.syncScreenRefresh.staticUpdater:None
KeyboardComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
KeyboardComponent.syncScreenRefresh.allowedUpdates:None
MicrophoneComponent.order:['name']
MicrophoneComponent.stereo.default:False
MicrophoneComponent.stereo.label:Stereo
MicrophoneComponent.stereo.valType:bool
MicrophoneComponent.stereo.val:False
MicrophoneComponent.stereo.allowedTypes:[]
MicrophoneComponent.stereo.categ:Basic
MicrophoneComponent.stereo.allowedVals:[]
MicrophoneComponent.stereo.readOnly:False
MicrophoneComponent.stereo.updates:None
MicrophoneComponent.stereo.staticUpdater:None
MicrophoneComponent.stereo.hint:Record two channels (stereo) or one (mono, smaller file)
MicrophoneComponent.stereo.allowedUpdates:None
MicrophoneComponent.name.default:mic_1
MicrophoneComponent.name.label:Name
MicrophoneComponent.name.valType:code
MicrophoneComponent.name.val:mic_1
MicrophoneComponent.name.allowedTypes:[]
MicrophoneComponent.name.categ:Basic
MicrophoneComponent.name.allowedVals:[]
MicrophoneComponent.name.readOnly:False
MicrophoneComponent.name.staticUpdater:None
MicrophoneComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MicrophoneComponent.name.allowedUpdates:None
MicrophoneComponent.stopVal.default:2.0
MicrophoneComponent.stopVal.label:Stop
MicrophoneComponent.stopVal.valType:code
MicrophoneComponent.stopVal.val:2.0
MicrophoneComponent.stopVal.allowedTypes:[]
MicrophoneComponent.stopVal.categ:Basic
MicrophoneComponent.stopVal.allowedVals:[]
MicrophoneComponent.stopVal.readOnly:False
MicrophoneComponent.stopVal.updates:constant
MicrophoneComponent.stopVal.staticUpdater:None
MicrophoneComponent.stopVal.hint:When does the component end? (blank is endless)
MicrophoneComponent.stopVal.allowedUpdates:[]
MicrophoneComponent.durationEstim.default:
MicrophoneComponent.durationEstim.label:Expected duration (s)
MicrophoneComponent.durationEstim.valType:code
MicrophoneComponent.durationEstim.val:
MicrophoneComponent.durationEstim.allowedTypes:[]
MicrophoneComponent.durationEstim.categ:Basic
MicrophoneComponent.durationEstim.allowedVals:[]
MicrophoneComponent.durationEstim.readOnly:False
MicrophoneComponent.durationEstim.updates:None
MicrophoneComponent.durationEstim.staticUpdater:None
MicrophoneComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MicrophoneComponent.durationEstim.allowedUpdates:None
MicrophoneComponent.startEstim.default:
MicrophoneComponent.startEstim.label:Expected start (s)
MicrophoneComponent.startEstim.valType:code
MicrophoneComponent.startEstim.val:
MicrophoneComponent.startEstim.allowedTypes:[]
MicrophoneComponent.startEstim.categ:Basic
MicrophoneComponent.startEstim.allowedVals:[]
MicrophoneComponent.startEstim.readOnly:False
MicrophoneComponent.startEstim.updates:None
MicrophoneComponent.startEstim.staticUpdater:None
MicrophoneComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MicrophoneComponent.startEstim.allowedUpdates:None
MicrophoneComponent.startType.default:'time (s)'
MicrophoneComponent.startType.label:start type
MicrophoneComponent.startType.valType:str
MicrophoneComponent.startType.val:time (s)
MicrophoneComponent.startType.allowedTypes:[]
MicrophoneComponent.startType.categ:Basic
MicrophoneComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MicrophoneComponent.startType.readOnly:False
MicrophoneComponent.startType.updates:None
MicrophoneComponent.startType.staticUpdater:None
MicrophoneComponent.startType.hint:How do you want to define your start point?
MicrophoneComponent.startType.allowedUpdates:None
MicrophoneComponent.stopType.default:'duration (s)'
MicrophoneComponent.stopType.label:stop type
MicrophoneComponent.stopType.valType:str
MicrophoneComponent.stopType.val:duration (s)
MicrophoneComponent.stopType.allowedTypes:[]
MicrophoneComponent.stopType.categ:Basic
MicrophoneComponent.stopType.allowedVals:['duration (s)']
MicrophoneComponent.stopType.readOnly:False
MicrophoneComponent.stopType.updates:None
MicrophoneComponent.stopType.staticUpdater:None
MicrophoneComponent.stopType.hint:The duration of the recording in seconds; blank = 0 sec
MicrophoneComponent.stopType.allowedUpdates:None
MicrophoneComponent.startVal.default:0.0
MicrophoneComponent.startVal.label:Start
MicrophoneComponent.startVal.valType:code
MicrophoneComponent.startVal.val:0.0
MicrophoneComponent.startVal.allowedTypes:[]
MicrophoneComponent.startVal.categ:Basic
MicrophoneComponent.startVal.allowedVals:[]
MicrophoneComponent.startVal.readOnly:False
MicrophoneComponent.startVal.updates:None
MicrophoneComponent.startVal.staticUpdater:None
MicrophoneComponent.startVal.hint:When does the component start?
MicrophoneComponent.startVal.allowedUpdates:None
MouseComponent.order:['name', 'forceEndRoutineOnPress', 'saveMouseState', 'timeRelativeTo', 'newClicksOnly', 'clickable', 'saveParamsClickable']
MouseComponent.name.default:mouse
MouseComponent.name.label:Name
MouseComponent.name.valType:code
MouseComponent.name.val:mouse
MouseComponent.name.allowedTypes:[]
MouseComponent.name.categ:Basic
MouseComponent.name.allowedVals:[]
MouseComponent.name.readOnly:False
MouseComponent.name.staticUpdater:None
MouseComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MouseComponent.name.allowedUpdates:None
MouseComponent.timeRelativeTo.default:'routine'
MouseComponent.timeRelativeTo.label:Time relative to
MouseComponent.timeRelativeTo.valType:str
MouseComponent.timeRelativeTo.val:routine
MouseComponent.timeRelativeTo.allowedTypes:[]
MouseComponent.timeRelativeTo.categ:Basic
MouseComponent.timeRelativeTo.allowedVals:['experiment', 'routine']
MouseComponent.timeRelativeTo.readOnly:False
MouseComponent.timeRelativeTo.updates:constant
MouseComponent.timeRelativeTo.staticUpdater:None
MouseComponent.timeRelativeTo.hint:What should the values of mouse.time should be relative to?
MouseComponent.timeRelativeTo.allowedUpdates:None
MouseComponent.stopVal.default:1.0
MouseComponent.stopVal.label:Stop
MouseComponent.stopVal.valType:code
MouseComponent.stopVal.val:1.0
MouseComponent.stopVal.allowedTypes:[]
MouseComponent.stopVal.categ:Basic
MouseComponent.stopVal.allowedVals:[]
MouseComponent.stopVal.readOnly:False
MouseComponent.stopVal.updates:constant
MouseComponent.stopVal.staticUpdater:None
MouseComponent.stopVal.hint:When does the component end? (blank is endless)
MouseComponent.stopVal.allowedUpdates:[]
MouseComponent.durationEstim.default:
MouseComponent.durationEstim.label:Expected duration (s)
MouseComponent.durationEstim.valType:code
MouseComponent.durationEstim.val:
MouseComponent.durationEstim.allowedTypes:[]
MouseComponent.durationEstim.categ:Basic
MouseComponent.durationEstim.allowedVals:[]
MouseComponent.durationEstim.readOnly:False
MouseComponent.durationEstim.updates:None
MouseComponent.durationEstim.staticUpdater:None
MouseComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MouseComponent.durationEstim.allowedUpdates:None
MouseComponent.forceEndRoutineOnPress.default:'any click'
MouseComponent.forceEndRoutineOnPress.label:End Routine on press
MouseComponent.forceEndRoutineOnPress.valType:str
MouseComponent.forceEndRoutineOnPress.val:any click
MouseComponent.forceEndRoutineOnPress.allowedTypes:[]
MouseComponent.forceEndRoutineOnPress.categ:Basic
MouseComponent.forceEndRoutineOnPress.allowedVals:['never', 'any click', 'valid click']
MouseComponent.forceEndRoutineOnPress.readOnly:False
MouseComponent.forceEndRoutineOnPress.updates:constant
MouseComponent.forceEndRoutineOnPress.staticUpdater:None
MouseComponent.forceEndRoutineOnPress.hint:Should a button press force the end of the routine (e.g end the trial)?
MouseComponent.forceEndRoutineOnPress.allowedUpdates:None
MouseComponent.newClicksOnly.default:True
MouseComponent.newClicksOnly.label:New clicks only
MouseComponent.newClicksOnly.valType:bool
MouseComponent.newClicksOnly.val:True
MouseComponent.newClicksOnly.allowedTypes:[]
MouseComponent.newClicksOnly.categ:Basic
MouseComponent.newClicksOnly.allowedVals:[]
MouseComponent.newClicksOnly.readOnly:False
MouseComponent.newClicksOnly.updates:constant
MouseComponent.newClicksOnly.staticUpdater:None
MouseComponent.newClicksOnly.hint:If the mouse button is already down when we startchecking then wait for it to be released beforerecording as a new click.
MouseComponent.newClicksOnly.allowedUpdates:None
MouseComponent.startEstim.default:
MouseComponent.startEstim.label:Expected start (s)
MouseComponent.startEstim.valType:code
MouseComponent.startEstim.val:
MouseComponent.startEstim.allowedTypes:[]
MouseComponent.startEstim.categ:Basic
MouseComponent.startEstim.allowedVals:[]
MouseComponent.startEstim.readOnly:False
MouseComponent.startEstim.updates:None
MouseComponent.startEstim.staticUpdater:None
MouseComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MouseComponent.startEstim.allowedUpdates:None
MouseComponent.startType.default:'time (s)'
MouseComponent.startType.label:start type
MouseComponent.startType.valType:str
MouseComponent.startType.val:time (s)
MouseComponent.startType.allowedTypes:[]
MouseComponent.startType.categ:Basic
MouseComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MouseComponent.startType.readOnly:False
MouseComponent.startType.updates:None
MouseComponent.startType.staticUpdater:None
MouseComponent.startType.hint:How do you want to define your start point?
MouseComponent.startType.allowedUpdates:None
MouseComponent.clickable.default:
MouseComponent.clickable.label:Clickable stimuli
MouseComponent.clickable.valType:code
MouseComponent.clickable.val:
MouseComponent.clickable.allowedTypes:[]
MouseComponent.clickable.categ:Basic
MouseComponent.clickable.allowedVals:[]
MouseComponent.clickable.readOnly:False
MouseComponent.clickable.updates:constant
MouseComponent.clickable.staticUpdater:None
MouseComponent.clickable.hint:A comma-separated list of your stimulus names that can be "clicked" by the participant. e.g. target, foil
MouseComponent.clickable.allowedUpdates:None
MouseComponent.stopType.default:'duration (s)'
MouseComponent.stopType.label:stop type
MouseComponent.stopType.valType:str
MouseComponent.stopType.val:duration (s)
MouseComponent.stopType.allowedTypes:[]
MouseComponent.stopType.categ:Basic
MouseComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MouseComponent.stopType.readOnly:False
MouseComponent.stopType.updates:None
MouseComponent.stopType.staticUpdater:None
MouseComponent.stopType.hint:How do you want to define your end point?
MouseComponent.stopType.allowedUpdates:None
MouseComponent.startVal.default:0.0
MouseComponent.startVal.label:Start
MouseComponent.startVal.valType:code
MouseComponent.startVal.val:0.0
MouseComponent.startVal.allowedTypes:[]
MouseComponent.startVal.categ:Basic
MouseComponent.startVal.allowedVals:[]
MouseComponent.startVal.readOnly:False
MouseComponent.startVal.updates:None
MouseComponent.startVal.staticUpdater:None
MouseComponent.startVal.hint:When does the component start?
MouseComponent.startVal.allowedUpdates:None
MouseComponent.saveParamsClickable.default:name,
MouseComponent.saveParamsClickable.label:Store params for clicked
MouseComponent.saveParamsClickable.valType:code
MouseComponent.saveParamsClickable.val:name,
MouseComponent.saveParamsClickable.allowedTypes:[]
MouseComponent.saveParamsClickable.categ:Basic
MouseComponent.saveParamsClickable.allowedVals:[]
MouseComponent.saveParamsClickable.readOnly:False
MouseComponent.saveParamsClickable.updates:constant
MouseComponent.saveParamsClickable.staticUpdater:None
MouseComponent.saveParamsClickable.hint:The params (e.g. name, text), for which you want to store the current value, for the stimulus that was"clicked" by the mouse. Make sure that all the clickable objects have all these params.
MouseComponent.saveParamsClickable.allowedUpdates:[]
MouseComponent.saveMouseState.default:'final'
MouseComponent.saveMouseState.label:Save mouse state
MouseComponent.saveMouseState.valType:str
MouseComponent.saveMouseState.val:final
MouseComponent.saveMouseState.allowedTypes:[]
MouseComponent.saveMouseState.categ:Basic
MouseComponent.saveMouseState.allowedVals:['final', 'on click', 'every frame', 'never']
MouseComponent.saveMouseState.readOnly:False
MouseComponent.saveMouseState.updates:None
MouseComponent.saveMouseState.staticUpdater:None
MouseComponent.saveMouseState.hint:How often should the mouse state (x,y,buttons) be stored? On every video frame, every click or just at the end of the Routine?
MouseComponent.saveMouseState.allowedUpdates:None
MovieComponent.order:['forceEndRoutine']
MovieComponent.opacity.default:1
MovieComponent.opacity.label:Opacity
MovieComponent.opacity.valType:code
MovieComponent.opacity.val:1
MovieComponent.opacity.allowedTypes:[]
MovieComponent.opacity.categ:Basic
MovieComponent.opacity.allowedVals:[]
MovieComponent.opacity.readOnly:False
MovieComponent.opacity.updates:constant
MovieComponent.opacity.staticUpdater:None
MovieComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
MovieComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.name.default:movie
MovieComponent.name.label:Name
MovieComponent.name.valType:code
MovieComponent.name.val:movie
MovieComponent.name.allowedTypes:[]
MovieComponent.name.categ:Basic
MovieComponent.name.allowedVals:[]
MovieComponent.name.readOnly:False
MovieComponent.name.staticUpdater:None
MovieComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
MovieComponent.name.allowedUpdates:None
MovieComponent.movie.default:''
MovieComponent.movie.label:Movie file
MovieComponent.movie.valType:str
MovieComponent.movie.val:
MovieComponent.movie.allowedTypes:[]
MovieComponent.movie.categ:Basic
MovieComponent.movie.allowedVals:[]
MovieComponent.movie.readOnly:False
MovieComponent.movie.updates:constant
MovieComponent.movie.staticUpdater:None
MovieComponent.movie.hint:A filename for the movie (including path)
MovieComponent.movie.allowedUpdates:['constant', 'set every repeat']
MovieComponent.stopVal.default:1.0
MovieComponent.stopVal.label:Stop
MovieComponent.stopVal.valType:code
MovieComponent.stopVal.val:1.0
MovieComponent.stopVal.allowedTypes:[]
MovieComponent.stopVal.categ:Basic
MovieComponent.stopVal.allowedVals:[]
MovieComponent.stopVal.readOnly:False
MovieComponent.stopVal.updates:constant
MovieComponent.stopVal.staticUpdater:None
MovieComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
MovieComponent.stopVal.allowedUpdates:[]
MovieComponent.durationEstim.default:
MovieComponent.durationEstim.label:Expected duration (s)
MovieComponent.durationEstim.valType:code
MovieComponent.durationEstim.val:
MovieComponent.durationEstim.allowedTypes:[]
MovieComponent.durationEstim.categ:Basic
MovieComponent.durationEstim.allowedVals:[]
MovieComponent.durationEstim.readOnly:False
MovieComponent.durationEstim.updates:None
MovieComponent.durationEstim.staticUpdater:None
MovieComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
MovieComponent.durationEstim.allowedUpdates:None
MovieComponent.pos.default:(0, 0)
MovieComponent.pos.label:Position [x,y]
MovieComponent.pos.valType:code
MovieComponent.pos.val:(0, 0)
MovieComponent.pos.allowedTypes:[]
MovieComponent.pos.categ:Basic
MovieComponent.pos.allowedVals:[]
MovieComponent.pos.readOnly:False
MovieComponent.pos.updates:constant
MovieComponent.pos.staticUpdater:None
MovieComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
MovieComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.forceEndRoutine.default:False
MovieComponent.forceEndRoutine.label:Force end of Routine
MovieComponent.forceEndRoutine.valType:bool
MovieComponent.forceEndRoutine.val:False
MovieComponent.forceEndRoutine.allowedTypes:[]
MovieComponent.forceEndRoutine.categ:Basic
MovieComponent.forceEndRoutine.allowedVals:[]
MovieComponent.forceEndRoutine.readOnly:False
MovieComponent.forceEndRoutine.updates:constant
MovieComponent.forceEndRoutine.staticUpdater:None
MovieComponent.forceEndRoutine.hint:Should the end of the movie cause the end of the routine (e.g. trial)?
MovieComponent.forceEndRoutine.allowedUpdates:[]
MovieComponent.startEstim.default:
MovieComponent.startEstim.label:Expected start (s)
MovieComponent.startEstim.valType:code
MovieComponent.startEstim.val:
MovieComponent.startEstim.allowedTypes:[]
MovieComponent.startEstim.categ:Basic
MovieComponent.startEstim.allowedVals:[]
MovieComponent.startEstim.readOnly:False
MovieComponent.startEstim.updates:None
MovieComponent.startEstim.staticUpdater:None
MovieComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
MovieComponent.startEstim.allowedUpdates:None
MovieComponent.units.default:'from exp settings'
MovieComponent.units.label:Units
MovieComponent.units.valType:str
MovieComponent.units.val:from exp settings
MovieComponent.units.allowedTypes:[]
MovieComponent.units.categ:Basic
MovieComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
MovieComponent.units.readOnly:False
MovieComponent.units.updates:None
MovieComponent.units.staticUpdater:None
MovieComponent.units.hint:Units of dimensions for this stimulus
MovieComponent.units.allowedUpdates:None
MovieComponent.No audio.default:False
MovieComponent.No audio.label:No audio
MovieComponent.No audio.valType:bool
MovieComponent.No audio.val:False
MovieComponent.No audio.allowedTypes:[]
MovieComponent.No audio.categ:Basic
MovieComponent.No audio.allowedVals:[]
MovieComponent.No audio.readOnly:False
MovieComponent.No audio.updates:None
MovieComponent.No audio.staticUpdater:None
MovieComponent.No audio.hint:Prevent the audio stream from being loaded/processed (moviepy and opencv only)
MovieComponent.No audio.allowedUpdates:None
MovieComponent.startType.default:'time (s)'
MovieComponent.startType.label:start type
MovieComponent.startType.valType:str
MovieComponent.startType.val:time (s)
MovieComponent.startType.allowedTypes:[]
MovieComponent.startType.categ:Basic
MovieComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
MovieComponent.startType.readOnly:False
MovieComponent.startType.updates:None
MovieComponent.startType.staticUpdater:None
MovieComponent.startType.hint:How do you want to define your start point?
MovieComponent.startType.allowedUpdates:None
MovieComponent.ori.default:0
MovieComponent.ori.label:Orientation
MovieComponent.ori.valType:code
MovieComponent.ori.val:0
MovieComponent.ori.allowedTypes:[]
MovieComponent.ori.categ:Basic
MovieComponent.ori.allowedVals:[]
MovieComponent.ori.readOnly:False
MovieComponent.ori.updates:constant
MovieComponent.ori.staticUpdater:None
MovieComponent.ori.hint:Orientation of this stimulus (in deg)
MovieComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
MovieComponent.stopType.default:'duration (s)'
MovieComponent.stopType.label:stop type
MovieComponent.stopType.valType:str
MovieComponent.stopType.val:duration (s)
MovieComponent.stopType.allowedTypes:[]
MovieComponent.stopType.categ:Basic
MovieComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
MovieComponent.stopType.readOnly:False
MovieComponent.stopType.updates:None
MovieComponent.stopType.staticUpdater:None
MovieComponent.stopType.hint:How do you want to define your end point?
MovieComponent.stopType.allowedUpdates:None
MovieComponent.startVal.default:0.0
MovieComponent.startVal.label:Start
MovieComponent.startVal.valType:code
MovieComponent.startVal.val:0.0
MovieComponent.startVal.allowedTypes:[]
MovieComponent.startVal.categ:Basic
MovieComponent.startVal.allowedVals:[]
MovieComponent.startVal.readOnly:False
MovieComponent.startVal.updates:None
MovieComponent.startVal.staticUpdater:None
MovieComponent.startVal.hint:When does the component start?
MovieComponent.startVal.allowedUpdates:None
MovieComponent.backend.default:'moviepy'
MovieComponent.backend.label:backend
MovieComponent.backend.valType:str
MovieComponent.backend.val:moviepy
MovieComponent.backend.allowedTypes:[]
MovieComponent.backend.categ:Basic
MovieComponent.backend.allowedVals:['moviepy', 'avbin', 'opencv']
MovieComponent.backend.readOnly:False
MovieComponent.backend.updates:None
MovieComponent.backend.staticUpdater:None
MovieComponent.backend.hint:What underlying lib to use for loading movies
MovieComponent.backend.allowedUpdates:None
MovieComponent.size.default:
MovieComponent.size.label:Size [w,h]
MovieComponent.size.valType:code
MovieComponent.size.val:
MovieComponent.size.allowedTypes:[]
MovieComponent.size.categ:Basic
MovieComponent.size.allowedVals:[]
MovieComponent.size.readOnly:False
MovieComponent.size.updates:constant
MovieComponent.size.staticUpdater:None
MovieComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
MovieComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.order:['tex', 'mask']
NoiseStimComponent.noiseFilterUpper.default:8.0
NoiseStimComponent.noiseFilterUpper.label:Upper cut off frequency
NoiseStimComponent.noiseFilterUpper.valType:code
NoiseStimComponent.noiseFilterUpper.val:8.0
NoiseStimComponent.noiseFilterUpper.allowedTypes:[]
NoiseStimComponent.noiseFilterUpper.categ:Filtered
NoiseStimComponent.noiseFilterUpper.allowedVals:[]
NoiseStimComponent.noiseFilterUpper.readOnly:False
NoiseStimComponent.noiseFilterUpper.updates:constant
NoiseStimComponent.noiseFilterUpper.staticUpdater:None
NoiseStimComponent.noiseFilterUpper.hint:Upper cutoff frequency
NoiseStimComponent.noiseFilterUpper.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.color.default:[1,1,1]
NoiseStimComponent.color.label:Color
NoiseStimComponent.color.valType:str
NoiseStimComponent.color.val:$[1,1,1]
NoiseStimComponent.color.allowedTypes:[]
NoiseStimComponent.color.categ:Basic
NoiseStimComponent.color.allowedVals:[]
NoiseStimComponent.color.readOnly:False
NoiseStimComponent.color.updates:constant
NoiseStimComponent.color.staticUpdater:None
NoiseStimComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
NoiseStimComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.colorSpace.default:'rgb'
NoiseStimComponent.colorSpace.label:Color space
NoiseStimComponent.colorSpace.valType:str
NoiseStimComponent.colorSpace.val:rgb
NoiseStimComponent.colorSpace.allowedTypes:[]
NoiseStimComponent.colorSpace.categ:Basic
NoiseStimComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
NoiseStimComponent.colorSpace.readOnly:False
NoiseStimComponent.colorSpace.updates:constant
NoiseStimComponent.colorSpace.staticUpdater:None
NoiseStimComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
NoiseStimComponent.colorSpace.allowedUpdates:None
NoiseStimComponent.pos.default:(0, 0)
NoiseStimComponent.pos.label:Position [x,y]
NoiseStimComponent.pos.valType:code
NoiseStimComponent.pos.val:(0, 0)
NoiseStimComponent.pos.allowedTypes:[]
NoiseStimComponent.pos.categ:Basic
NoiseStimComponent.pos.allowedVals:[]
NoiseStimComponent.pos.readOnly:False
NoiseStimComponent.pos.updates:constant
NoiseStimComponent.pos.staticUpdater:None
NoiseStimComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
NoiseStimComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.stopType.default:'duration (s)'
NoiseStimComponent.stopType.label:stop type
NoiseStimComponent.stopType.valType:str
NoiseStimComponent.stopType.val:duration (s)
NoiseStimComponent.stopType.allowedTypes:[]
NoiseStimComponent.stopType.categ:Basic
NoiseStimComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
NoiseStimComponent.stopType.readOnly:False
NoiseStimComponent.stopType.updates:None
NoiseStimComponent.stopType.staticUpdater:None
NoiseStimComponent.stopType.hint:How do you want to define your end point?
NoiseStimComponent.stopType.allowedUpdates:None
NoiseStimComponent.blendmode.default:'avg'
NoiseStimComponent.blendmode.label:OpenGL blend mode
NoiseStimComponent.blendmode.valType:str
NoiseStimComponent.blendmode.val:avg
NoiseStimComponent.blendmode.allowedTypes:[]
NoiseStimComponent.blendmode.categ:Basic
NoiseStimComponent.blendmode.allowedVals:[]
NoiseStimComponent.blendmode.readOnly:False
NoiseStimComponent.blendmode.updates:constant
NoiseStimComponent.blendmode.staticUpdater:None
NoiseStimComponent.blendmode.hint:OpenGL Blendmode [avg, add (avg is most common mode in PsychoPy, add is used if you want to generate the sum of two components)]
NoiseStimComponent.blendmode.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBaseSf.default:8.0
NoiseStimComponent.noiseBaseSf.label:Base spatial frequency
NoiseStimComponent.noiseBaseSf.valType:code
NoiseStimComponent.noiseBaseSf.val:8.0
NoiseStimComponent.noiseBaseSf.allowedTypes:[]
NoiseStimComponent.noiseBaseSf.categ:Gabor/Isotropic
NoiseStimComponent.noiseBaseSf.allowedVals:[]
NoiseStimComponent.noiseBaseSf.readOnly:False
NoiseStimComponent.noiseBaseSf.updates:constant
NoiseStimComponent.noiseBaseSf.staticUpdater:None
NoiseStimComponent.noiseBaseSf.hint:Base spatial frequency
NoiseStimComponent.noiseBaseSf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.startVal.default:0.0
NoiseStimComponent.startVal.label:Start
NoiseStimComponent.startVal.valType:code
NoiseStimComponent.startVal.val:0.0
NoiseStimComponent.startVal.allowedTypes:[]
NoiseStimComponent.startVal.categ:Basic
NoiseStimComponent.startVal.allowedVals:[]
NoiseStimComponent.startVal.readOnly:False
NoiseStimComponent.startVal.updates:None
NoiseStimComponent.startVal.staticUpdater:None
NoiseStimComponent.startVal.hint:When does the component start?
NoiseStimComponent.startVal.allowedUpdates:None
NoiseStimComponent.size.default:(0.5, 0.5)
NoiseStimComponent.size.label:Size [w,h]
NoiseStimComponent.size.valType:code
NoiseStimComponent.size.val:(0.5, 0.5)
NoiseStimComponent.size.allowedTypes:[]
NoiseStimComponent.size.categ:Basic
NoiseStimComponent.size.allowedVals:[]
NoiseStimComponent.size.readOnly:False
NoiseStimComponent.size.updates:constant
NoiseStimComponent.size.staticUpdater:None
NoiseStimComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
NoiseStimComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseClip.default:3.0
NoiseStimComponent.noiseClip.label:Number of standard deviations at which to clip noise
NoiseStimComponent.noiseClip.valType:code
NoiseStimComponent.noiseClip.val:3.0
NoiseStimComponent.noiseClip.allowedTypes:[]
NoiseStimComponent.noiseClip.categ: Noise
NoiseStimComponent.noiseClip.allowedVals:[]
NoiseStimComponent.noiseClip.readOnly:False
NoiseStimComponent.noiseClip.updates:constant
NoiseStimComponent.noiseClip.staticUpdater:None
NoiseStimComponent.noiseClip.hint:Truncate high and low values beyound stated standard deviations from mean (not used for binary or uniform noise; scales rather than clips normal noise). The higher this is the lower the final RMS contrast. If low noise may appear binary
NoiseStimComponent.noiseClip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseImage.default:'None'
NoiseStimComponent.noiseImage.label:Image from which to derive noise spectrum
NoiseStimComponent.noiseImage.valType:str
NoiseStimComponent.noiseImage.val:None
NoiseStimComponent.noiseImage.allowedTypes:[]
NoiseStimComponent.noiseImage.categ:Image noise
NoiseStimComponent.noiseImage.allowedVals:[]
NoiseStimComponent.noiseImage.readOnly:False
NoiseStimComponent.noiseImage.updates:constant
NoiseStimComponent.noiseImage.staticUpdater:None
NoiseStimComponent.noiseImage.hint:An image from which to derive the frequency spectrum for the noise. Give filename (including path)
NoiseStimComponent.noiseImage.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseNewSample.default:'None'
NoiseStimComponent.noiseNewSample.label:How to update noise sample
NoiseStimComponent.noiseNewSample.valType:str
NoiseStimComponent.noiseNewSample.val:None
NoiseStimComponent.noiseNewSample.allowedTypes:[]
NoiseStimComponent.noiseNewSample.categ: Noise
NoiseStimComponent.noiseNewSample.allowedVals:['None', 'Repeat', 'N-frames', 'Seconds']
NoiseStimComponent.noiseNewSample.readOnly:False
NoiseStimComponent.noiseNewSample.updates:constant
NoiseStimComponent.noiseNewSample.staticUpdater:None
NoiseStimComponent.noiseNewSample.hint:How to update noise if not otherwise required by other changes (none, repeat, N-frames, Seconds)
NoiseStimComponent.noiseNewSample.allowedUpdates:[]
NoiseStimComponent.noiseNewSampleWhen.default:'1'
NoiseStimComponent.noiseNewSampleWhen.label:When to update noise sample
NoiseStimComponent.noiseNewSampleWhen.valType:str
NoiseStimComponent.noiseNewSampleWhen.val:1
NoiseStimComponent.noiseNewSampleWhen.allowedTypes:[]
NoiseStimComponent.noiseNewSampleWhen.categ: Noise
NoiseStimComponent.noiseNewSampleWhen.allowedVals:[]
NoiseStimComponent.noiseNewSampleWhen.readOnly:False
NoiseStimComponent.noiseNewSampleWhen.updates:constant
NoiseStimComponent.noiseNewSampleWhen.staticUpdater:None
NoiseStimComponent.noiseNewSampleWhen.hint:How often to update noise (in frames or seconds) - can be a variable, ignored if any noise characteristic is updating on every frame
NoiseStimComponent.noiseNewSampleWhen.allowedUpdates:[]
NoiseStimComponent.noiseBWO.default:1
NoiseStimComponent.noiseBWO.label:Orientation bandwidth for Gabor noise
NoiseStimComponent.noiseBWO.valType:code
NoiseStimComponent.noiseBWO.val:1
NoiseStimComponent.noiseBWO.allowedTypes:[]
NoiseStimComponent.noiseBWO.categ:Gabor/Isotropic
NoiseStimComponent.noiseBWO.allowedVals:[]
NoiseStimComponent.noiseBWO.readOnly:False
NoiseStimComponent.noiseBWO.updates:constant
NoiseStimComponent.noiseBWO.staticUpdater:None
NoiseStimComponent.noiseBWO.hint:Orientation bandwidth in degrees (Gabor only) - Full width half height
NoiseStimComponent.noiseBWO.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterLower.default:1.0
NoiseStimComponent.noiseFilterLower.label:Lower cut off frequency
NoiseStimComponent.noiseFilterLower.valType:code
NoiseStimComponent.noiseFilterLower.val:1.0
NoiseStimComponent.noiseFilterLower.allowedTypes:[]
NoiseStimComponent.noiseFilterLower.categ:Filtered
NoiseStimComponent.noiseFilterLower.allowedVals:[]
NoiseStimComponent.noiseFilterLower.readOnly:False
NoiseStimComponent.noiseFilterLower.updates:constant
NoiseStimComponent.noiseFilterLower.staticUpdater:None
NoiseStimComponent.noiseFilterLower.hint:Lower cutoff frequency
NoiseStimComponent.noiseFilterLower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.units.default:'from exp settings'
NoiseStimComponent.units.label:Units
NoiseStimComponent.units.valType:str
NoiseStimComponent.units.val:from exp settings
NoiseStimComponent.units.allowedTypes:[]
NoiseStimComponent.units.categ:Basic
NoiseStimComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
NoiseStimComponent.units.readOnly:False
NoiseStimComponent.units.updates:None
NoiseStimComponent.units.staticUpdater:None
NoiseStimComponent.units.hint:Units of dimensions for this stimulus
NoiseStimComponent.units.allowedUpdates:None
NoiseStimComponent.contrast.default:1.0
NoiseStimComponent.contrast.label:Contrast
NoiseStimComponent.contrast.valType:code
NoiseStimComponent.contrast.val:1.0
NoiseStimComponent.contrast.allowedTypes:[]
NoiseStimComponent.contrast.categ:Advanced
NoiseStimComponent.contrast.allowedVals:[]
NoiseStimComponent.contrast.readOnly:False
NoiseStimComponent.contrast.updates:constant
NoiseStimComponent.contrast.staticUpdater:None
NoiseStimComponent.contrast.hint:Michaelson contrast of the image
NoiseStimComponent.contrast.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.opacity.default:1
NoiseStimComponent.opacity.label:Opacity
NoiseStimComponent.opacity.valType:code
NoiseStimComponent.opacity.val:1
NoiseStimComponent.opacity.allowedTypes:[]
NoiseStimComponent.opacity.categ:Basic
NoiseStimComponent.opacity.allowedVals:[]
NoiseStimComponent.opacity.readOnly:False
NoiseStimComponent.opacity.updates:constant
NoiseStimComponent.opacity.staticUpdater:None
NoiseStimComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
NoiseStimComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.stopVal.default:1.0
NoiseStimComponent.stopVal.label:Stop
NoiseStimComponent.stopVal.valType:code
NoiseStimComponent.stopVal.val:1.0
NoiseStimComponent.stopVal.allowedTypes:[]
NoiseStimComponent.stopVal.categ:Basic
NoiseStimComponent.stopVal.allowedVals:[]
NoiseStimComponent.stopVal.readOnly:False
NoiseStimComponent.stopVal.updates:constant
NoiseStimComponent.stopVal.staticUpdater:None
NoiseStimComponent.stopVal.hint:When does the component end? (blank is endless)
NoiseStimComponent.stopVal.allowedUpdates:[]
NoiseStimComponent.durationEstim.default:
NoiseStimComponent.durationEstim.label:Expected duration (s)
NoiseStimComponent.durationEstim.valType:code
NoiseStimComponent.durationEstim.val:
NoiseStimComponent.durationEstim.allowedTypes:[]
NoiseStimComponent.durationEstim.categ:Basic
NoiseStimComponent.durationEstim.allowedVals:[]
NoiseStimComponent.durationEstim.readOnly:False
NoiseStimComponent.durationEstim.updates:None
NoiseStimComponent.durationEstim.staticUpdater:None
NoiseStimComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
NoiseStimComponent.durationEstim.allowedUpdates:None
NoiseStimComponent.interpolate.default:'nearest'
NoiseStimComponent.interpolate.label:Interpolate
NoiseStimComponent.interpolate.valType:str
NoiseStimComponent.interpolate.val:nearest
NoiseStimComponent.interpolate.allowedTypes:[]
NoiseStimComponent.interpolate.categ:Advanced
NoiseStimComponent.interpolate.allowedVals:['linear', 'nearest']
NoiseStimComponent.interpolate.readOnly:False
NoiseStimComponent.interpolate.updates:constant
NoiseStimComponent.interpolate.staticUpdater:None
NoiseStimComponent.interpolate.hint:How should the image be interpolated if/when rescaled
NoiseStimComponent.interpolate.allowedUpdates:[]
NoiseStimComponent.startEstim.default:
NoiseStimComponent.startEstim.label:Expected start (s)
NoiseStimComponent.startEstim.valType:code
NoiseStimComponent.startEstim.val:
NoiseStimComponent.startEstim.allowedTypes:[]
NoiseStimComponent.startEstim.categ:Basic
NoiseStimComponent.startEstim.allowedVals:[]
NoiseStimComponent.startEstim.readOnly:False
NoiseStimComponent.startEstim.updates:None
NoiseStimComponent.startEstim.staticUpdater:None
NoiseStimComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
NoiseStimComponent.startEstim.allowedUpdates:None
NoiseStimComponent.startType.default:'time (s)'
NoiseStimComponent.startType.label:start type
NoiseStimComponent.startType.valType:str
NoiseStimComponent.startType.val:time (s)
NoiseStimComponent.startType.allowedTypes:[]
NoiseStimComponent.startType.categ:Basic
NoiseStimComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
NoiseStimComponent.startType.readOnly:False
NoiseStimComponent.startType.updates:None
NoiseStimComponent.startType.staticUpdater:None
NoiseStimComponent.startType.hint:How do you want to define your start point?
NoiseStimComponent.startType.allowedUpdates:None
NoiseStimComponent.ori.default:0
NoiseStimComponent.ori.label:Orientation
NoiseStimComponent.ori.valType:code
NoiseStimComponent.ori.val:0
NoiseStimComponent.ori.allowedTypes:[]
NoiseStimComponent.ori.categ:Advanced
NoiseStimComponent.ori.allowedVals:[]
NoiseStimComponent.ori.readOnly:False
NoiseStimComponent.ori.updates:constant
NoiseStimComponent.ori.staticUpdater:None
NoiseStimComponent.ori.hint:Orientation of this stimulus (in deg)
NoiseStimComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.phase.default:0.0
NoiseStimComponent.phase.label:Phase (in cycles)
NoiseStimComponent.phase.valType:code
NoiseStimComponent.phase.val:0.0
NoiseStimComponent.phase.allowedTypes:[]
NoiseStimComponent.phase.categ:Advanced
NoiseStimComponent.phase.allowedVals:[]
NoiseStimComponent.phase.readOnly:False
NoiseStimComponent.phase.updates:constant
NoiseStimComponent.phase.staticUpdater:None
NoiseStimComponent.phase.hint:Spatial positioning of the image  (wraps in range 0-1.0)
NoiseStimComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFilterOrder.default:0.0
NoiseStimComponent.noiseFilterOrder.label:Order of filter
NoiseStimComponent.noiseFilterOrder.valType:code
NoiseStimComponent.noiseFilterOrder.val:0.0
NoiseStimComponent.noiseFilterOrder.allowedTypes:[]
NoiseStimComponent.noiseFilterOrder.categ:Filtered
NoiseStimComponent.noiseFilterOrder.allowedVals:[]
NoiseStimComponent.noiseFilterOrder.readOnly:False
NoiseStimComponent.noiseFilterOrder.updates:constant
NoiseStimComponent.noiseFilterOrder.staticUpdater:None
NoiseStimComponent.noiseFilterOrder.hint:Order of filter - higher = steeper fall off, zero = no filter
NoiseStimComponent.noiseFilterOrder.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseBW.default:1
NoiseStimComponent.noiseBW.label:Spatial frequency bandwidth
NoiseStimComponent.noiseBW.valType:code
NoiseStimComponent.noiseBW.val:1
NoiseStimComponent.noiseBW.allowedTypes:[]
NoiseStimComponent.noiseBW.categ:Gabor/Isotropic
NoiseStimComponent.noiseBW.allowedVals:[]
NoiseStimComponent.noiseBW.readOnly:False
NoiseStimComponent.noiseBW.updates:constant
NoiseStimComponent.noiseBW.staticUpdater:None
NoiseStimComponent.noiseBW.hint:Spatial frequency bandwidth in octaves - Full width half height
NoiseStimComponent.noiseBW.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.texture resolution.default:128
NoiseStimComponent.texture resolution.label:Texture resolution
NoiseStimComponent.texture resolution.valType:code
NoiseStimComponent.texture resolution.val:128
NoiseStimComponent.texture resolution.allowedTypes:[]
NoiseStimComponent.texture resolution.categ:Advanced
NoiseStimComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
NoiseStimComponent.texture resolution.readOnly:False
NoiseStimComponent.texture resolution.updates:constant
NoiseStimComponent.texture resolution.staticUpdater:None
NoiseStimComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
NoiseStimComponent.texture resolution.allowedUpdates:[]
NoiseStimComponent.name.default:noise
NoiseStimComponent.name.label:Name
NoiseStimComponent.name.valType:code
NoiseStimComponent.name.val:noise
NoiseStimComponent.name.allowedTypes:[]
NoiseStimComponent.name.categ:Basic
NoiseStimComponent.name.allowedVals:[]
NoiseStimComponent.name.readOnly:False
NoiseStimComponent.name.staticUpdater:None
NoiseStimComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
NoiseStimComponent.name.allowedUpdates:None
NoiseStimComponent.noiseElementSize.default:0.0625
NoiseStimComponent.noiseElementSize.label:Noise element size for pixelated noise
NoiseStimComponent.noiseElementSize.valType:code
NoiseStimComponent.noiseElementSize.val:0.0625
NoiseStimComponent.noiseElementSize.allowedTypes:[]
NoiseStimComponent.noiseElementSize.categ:Binary/Normal/Uniform
NoiseStimComponent.noiseElementSize.allowedVals:[]
NoiseStimComponent.noiseElementSize.readOnly:False
NoiseStimComponent.noiseElementSize.updates:constant
NoiseStimComponent.noiseElementSize.staticUpdater:None
NoiseStimComponent.noiseElementSize.hint:(Binary, Normal an Uniform only) Size of noise elements
NoiseStimComponent.noiseElementSize.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.mask.default:'None'
NoiseStimComponent.mask.label:Mask
NoiseStimComponent.mask.valType:str
NoiseStimComponent.mask.val:None
NoiseStimComponent.mask.allowedTypes:[]
NoiseStimComponent.mask.categ:Advanced
NoiseStimComponent.mask.allowedVals:[]
NoiseStimComponent.mask.readOnly:False
NoiseStimComponent.mask.updates:constant
NoiseStimComponent.mask.staticUpdater:None
NoiseStimComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
NoiseStimComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseFractalPower.default:0.0
NoiseStimComponent.noiseFractalPower.label:Skew in frequency spectrum
NoiseStimComponent.noiseFractalPower.valType:code
NoiseStimComponent.noiseFractalPower.val:0.0
NoiseStimComponent.noiseFractalPower.allowedTypes:[]
NoiseStimComponent.noiseFractalPower.categ:Filtered
NoiseStimComponent.noiseFractalPower.allowedVals:[]
NoiseStimComponent.noiseFractalPower.readOnly:False
NoiseStimComponent.noiseFractalPower.updates:constant
NoiseStimComponent.noiseFractalPower.staticUpdater:None
NoiseStimComponent.noiseFractalPower.hint:Exponent for spectral slope (A=f^Exponent) of noise negative exponents look nice. -1='pink noise', 0='white noise' (changes the spatial frequency spectrum - does not make the noise colourful)
NoiseStimComponent.noiseFractalPower.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.sf.default:None
NoiseStimComponent.sf.label:Final spatial frequency
NoiseStimComponent.sf.valType:code
NoiseStimComponent.sf.val:None
NoiseStimComponent.sf.allowedTypes:[]
NoiseStimComponent.sf.categ:Advanced
NoiseStimComponent.sf.allowedVals:[]
NoiseStimComponent.sf.readOnly:False
NoiseStimComponent.sf.updates:constant
NoiseStimComponent.sf.staticUpdater:None
NoiseStimComponent.sf.hint:Final spatial frequency of image in 1 or 2 dimensions, e.g. 4 or [2,3] use None to set to 1 cycle per unit length or 1 cycle per image if units=pix
NoiseStimComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
NoiseStimComponent.noiseType.default:'Binary'
NoiseStimComponent.noiseType.label:Type of noise
NoiseStimComponent.noiseType.valType:str
NoiseStimComponent.noiseType.val:Binary
NoiseStimComponent.noiseType.allowedTypes:[]
NoiseStimComponent.noiseType.categ: Noise
NoiseStimComponent.noiseType.allowedVals:['Binary', 'Normal', 'Uniform', 'Gabor', 'Isotropic', 'White', 'Filtered', 'Image']
NoiseStimComponent.noiseType.readOnly:False
NoiseStimComponent.noiseType.updates:constant
NoiseStimComponent.noiseType.staticUpdater:None
NoiseStimComponent.noiseType.hint:Type of noise (Binary, Normal, Gabor, Isotropic, White, Coloured, Filtered, Image)
NoiseStimComponent.noiseType.allowedUpdates:[]
ParallelOutComponent.order:['address', 'startData', 'stopData']
ParallelOutComponent.name.default:p_port
ParallelOutComponent.name.label:Name
ParallelOutComponent.name.valType:code
ParallelOutComponent.name.val:p_port
ParallelOutComponent.name.allowedTypes:[]
ParallelOutComponent.name.categ:Basic
ParallelOutComponent.name.allowedVals:[]
ParallelOutComponent.name.readOnly:False
ParallelOutComponent.name.staticUpdater:None
ParallelOutComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ParallelOutComponent.name.allowedUpdates:None
ParallelOutComponent.syncScreen.default:True
ParallelOutComponent.syncScreen.label:Sync to screen
ParallelOutComponent.syncScreen.valType:bool
ParallelOutComponent.syncScreen.val:True
ParallelOutComponent.syncScreen.allowedTypes:[]
ParallelOutComponent.syncScreen.categ:Basic
ParallelOutComponent.syncScreen.allowedVals:[True, False]
ParallelOutComponent.syncScreen.readOnly:False
ParallelOutComponent.syncScreen.updates:constant
ParallelOutComponent.syncScreen.staticUpdater:None
ParallelOutComponent.syncScreen.hint:If the parallel port data relates to visual stimuli then sync its pulse to the screen refresh
ParallelOutComponent.syncScreen.allowedUpdates:[]
ParallelOutComponent.stopData.default:0
ParallelOutComponent.stopData.label:Stop data
ParallelOutComponent.stopData.valType:code
ParallelOutComponent.stopData.val:0
ParallelOutComponent.stopData.allowedTypes:[]
ParallelOutComponent.stopData.categ:Basic
ParallelOutComponent.stopData.allowedVals:[]
ParallelOutComponent.stopData.readOnly:False
ParallelOutComponent.stopData.updates:None
ParallelOutComponent.stopData.staticUpdater:None
ParallelOutComponent.stopData.hint:Data to be sent at 'end'
ParallelOutComponent.stopData.allowedUpdates:None
ParallelOutComponent.stopVal.default:1.0
ParallelOutComponent.stopVal.label:Stop
ParallelOutComponent.stopVal.valType:code
ParallelOutComponent.stopVal.val:1.0
ParallelOutComponent.stopVal.allowedTypes:[]
ParallelOutComponent.stopVal.categ:Basic
ParallelOutComponent.stopVal.allowedVals:[]
ParallelOutComponent.stopVal.readOnly:False
ParallelOutComponent.stopVal.updates:constant
ParallelOutComponent.stopVal.staticUpdater:None
ParallelOutComponent.stopVal.hint:When does the component end? (blank is endless)
ParallelOutComponent.stopVal.allowedUpdates:[]
ParallelOutComponent.durationEstim.default:
ParallelOutComponent.durationEstim.label:Expected duration (s)
ParallelOutComponent.durationEstim.valType:code
ParallelOutComponent.durationEstim.val:
ParallelOutComponent.durationEstim.allowedTypes:[]
ParallelOutComponent.durationEstim.categ:Basic
ParallelOutComponent.durationEstim.allowedVals:[]
ParallelOutComponent.durationEstim.readOnly:False
ParallelOutComponent.durationEstim.updates:None
ParallelOutComponent.durationEstim.staticUpdater:None
ParallelOutComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ParallelOutComponent.durationEstim.allowedUpdates:None
ParallelOutComponent.startEstim.default:
ParallelOutComponent.startEstim.label:Expected start (s)
ParallelOutComponent.startEstim.valType:code
ParallelOutComponent.startEstim.val:
ParallelOutComponent.startEstim.allowedTypes:[]
ParallelOutComponent.startEstim.categ:Basic
ParallelOutComponent.startEstim.allowedVals:[]
ParallelOutComponent.startEstim.readOnly:False
ParallelOutComponent.startEstim.updates:None
ParallelOutComponent.startEstim.staticUpdater:None
ParallelOutComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ParallelOutComponent.startEstim.allowedUpdates:None
ParallelOutComponent.startType.default:'time (s)'
ParallelOutComponent.startType.label:start type
ParallelOutComponent.startType.valType:str
ParallelOutComponent.startType.val:time (s)
ParallelOutComponent.startType.allowedTypes:[]
ParallelOutComponent.startType.categ:Basic
ParallelOutComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ParallelOutComponent.startType.readOnly:False
ParallelOutComponent.startType.updates:None
ParallelOutComponent.startType.staticUpdater:None
ParallelOutComponent.startType.hint:How do you want to define your start point?
ParallelOutComponent.startType.allowedUpdates:None
ParallelOutComponent.address.default:'0x0378'
ParallelOutComponent.address.label:Port address
ParallelOutComponent.address.valType:str
ParallelOutComponent.address.val:0x0378
ParallelOutComponent.address.allowedTypes:[]
ParallelOutComponent.address.categ:Basic
ParallelOutComponent.address.allowedVals:[u'0x0378', u'0x03BC', u'/dev/parport0', u'/dev/parport1', u'LabJack U3']
ParallelOutComponent.address.readOnly:False
ParallelOutComponent.address.updates:None
ParallelOutComponent.address.staticUpdater:None
ParallelOutComponent.address.hint:Parallel port to be used (you can change these options in preferences>general)
ParallelOutComponent.address.allowedUpdates:None
ParallelOutComponent.stopType.default:'duration (s)'
ParallelOutComponent.stopType.label:stop type
ParallelOutComponent.stopType.valType:str
ParallelOutComponent.stopType.val:duration (s)
ParallelOutComponent.stopType.allowedTypes:[]
ParallelOutComponent.stopType.categ:Basic
ParallelOutComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ParallelOutComponent.stopType.readOnly:False
ParallelOutComponent.stopType.updates:None
ParallelOutComponent.stopType.staticUpdater:None
ParallelOutComponent.stopType.hint:How do you want to define your end point?
ParallelOutComponent.stopType.allowedUpdates:None
ParallelOutComponent.startVal.default:0.0
ParallelOutComponent.startVal.label:Start
ParallelOutComponent.startVal.valType:code
ParallelOutComponent.startVal.val:0.0
ParallelOutComponent.startVal.allowedTypes:[]
ParallelOutComponent.startVal.categ:Basic
ParallelOutComponent.startVal.allowedVals:[]
ParallelOutComponent.startVal.readOnly:False
ParallelOutComponent.startVal.updates:None
ParallelOutComponent.startVal.staticUpdater:None
ParallelOutComponent.startVal.hint:When does the component start?
ParallelOutComponent.startVal.allowedUpdates:None
ParallelOutComponent.startData.default:1
ParallelOutComponent.startData.label:Start data
ParallelOutComponent.startData.valType:code
ParallelOutComponent.startData.val:1
ParallelOutComponent.startData.allowedTypes:[]
ParallelOutComponent.startData.categ:Basic
ParallelOutComponent.startData.allowedVals:[]
ParallelOutComponent.startData.readOnly:False
ParallelOutComponent.startData.updates:None
ParallelOutComponent.startData.staticUpdater:None
ParallelOutComponent.startData.hint:Data to be sent at 'start'
ParallelOutComponent.startData.allowedUpdates:None
PatchComponent.order:['name']
PatchComponent.opacity.default:1
PatchComponent.opacity.label:Opacity
PatchComponent.opacity.valType:code
PatchComponent.opacity.val:1
PatchComponent.opacity.allowedTypes:[]
PatchComponent.opacity.categ:Basic
PatchComponent.opacity.allowedVals:[]
PatchComponent.opacity.readOnly:False
PatchComponent.opacity.updates:constant
PatchComponent.opacity.staticUpdater:None
PatchComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PatchComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.colorSpace.default:'rgb'
PatchComponent.colorSpace.label:Color space
PatchComponent.colorSpace.valType:str
PatchComponent.colorSpace.val:rgb
PatchComponent.colorSpace.allowedTypes:[]
PatchComponent.colorSpace.categ:Advanced
PatchComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PatchComponent.colorSpace.readOnly:False
PatchComponent.colorSpace.updates:constant
PatchComponent.colorSpace.staticUpdater:None
PatchComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
PatchComponent.colorSpace.allowedUpdates:None
PatchComponent.name.default:patch
PatchComponent.name.label:Name
PatchComponent.name.valType:code
PatchComponent.name.val:patch
PatchComponent.name.allowedTypes:[]
PatchComponent.name.categ:Basic
PatchComponent.name.allowedVals:[]
PatchComponent.name.readOnly:False
PatchComponent.name.staticUpdater:None
PatchComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PatchComponent.name.allowedUpdates:None
PatchComponent.color.default:[1,1,1]
PatchComponent.color.label:Color
PatchComponent.color.valType:str
PatchComponent.color.val:$[1,1,1]
PatchComponent.color.allowedTypes:[]
PatchComponent.color.categ:Advanced
PatchComponent.color.allowedVals:[]
PatchComponent.color.readOnly:False
PatchComponent.color.updates:constant
PatchComponent.color.staticUpdater:None
PatchComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
PatchComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.stopVal.default:1.0
PatchComponent.stopVal.label:Stop
PatchComponent.stopVal.valType:code
PatchComponent.stopVal.val:1.0
PatchComponent.stopVal.allowedTypes:[]
PatchComponent.stopVal.categ:Basic
PatchComponent.stopVal.allowedVals:[]
PatchComponent.stopVal.readOnly:False
PatchComponent.stopVal.updates:constant
PatchComponent.stopVal.staticUpdater:None
PatchComponent.stopVal.hint:When does the component end? (blank is endless)
PatchComponent.stopVal.allowedUpdates:[]
PatchComponent.durationEstim.default:
PatchComponent.durationEstim.label:Expected duration (s)
PatchComponent.durationEstim.valType:code
PatchComponent.durationEstim.val:
PatchComponent.durationEstim.allowedTypes:[]
PatchComponent.durationEstim.categ:Basic
PatchComponent.durationEstim.allowedVals:[]
PatchComponent.durationEstim.readOnly:False
PatchComponent.durationEstim.updates:None
PatchComponent.durationEstim.staticUpdater:None
PatchComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PatchComponent.durationEstim.allowedUpdates:None
PatchComponent.mask.default:'None'
PatchComponent.mask.label:Mask
PatchComponent.mask.valType:str
PatchComponent.mask.val:None
PatchComponent.mask.allowedTypes:[]
PatchComponent.mask.categ:Basic
PatchComponent.mask.allowedVals:[]
PatchComponent.mask.readOnly:False
PatchComponent.mask.updates:constant
PatchComponent.mask.staticUpdater:None
PatchComponent.mask.hint:An image to define the alpha mask (ie shape)- gauss, circle... or a filename (including path)
PatchComponent.mask.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.pos.default:(0, 0)
PatchComponent.pos.label:Position [x,y]
PatchComponent.pos.valType:code
PatchComponent.pos.val:(0, 0)
PatchComponent.pos.allowedTypes:[]
PatchComponent.pos.categ:Basic
PatchComponent.pos.allowedVals:[]
PatchComponent.pos.readOnly:False
PatchComponent.pos.updates:constant
PatchComponent.pos.staticUpdater:None
PatchComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PatchComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.interpolate.default:'linear'
PatchComponent.interpolate.label:Interpolate
PatchComponent.interpolate.valType:str
PatchComponent.interpolate.val:linear
PatchComponent.interpolate.allowedTypes:[]
PatchComponent.interpolate.categ:Advanced
PatchComponent.interpolate.allowedVals:['linear', 'nearest']
PatchComponent.interpolate.readOnly:False
PatchComponent.interpolate.updates:constant
PatchComponent.interpolate.staticUpdater:None
PatchComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PatchComponent.interpolate.allowedUpdates:[]
PatchComponent.sf.default:None
PatchComponent.sf.label:Spatial frequency
PatchComponent.sf.valType:code
PatchComponent.sf.val:None
PatchComponent.sf.allowedTypes:[]
PatchComponent.sf.categ:Advanced
PatchComponent.sf.allowedVals:[]
PatchComponent.sf.readOnly:False
PatchComponent.sf.updates:constant
PatchComponent.sf.staticUpdater:None
PatchComponent.sf.hint:Spatial frequency of image repeats across the patch, e.g. 4 or [2,3]
PatchComponent.sf.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.startEstim.default:
PatchComponent.startEstim.label:Expected start (s)
PatchComponent.startEstim.valType:code
PatchComponent.startEstim.val:
PatchComponent.startEstim.allowedTypes:[]
PatchComponent.startEstim.categ:Basic
PatchComponent.startEstim.allowedVals:[]
PatchComponent.startEstim.readOnly:False
PatchComponent.startEstim.updates:None
PatchComponent.startEstim.staticUpdater:None
PatchComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PatchComponent.startEstim.allowedUpdates:None
PatchComponent.units.default:'from exp settings'
PatchComponent.units.label:Units
PatchComponent.units.valType:str
PatchComponent.units.val:from exp settings
PatchComponent.units.allowedTypes:[]
PatchComponent.units.categ:Basic
PatchComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PatchComponent.units.readOnly:False
PatchComponent.units.updates:None
PatchComponent.units.staticUpdater:None
PatchComponent.units.hint:Units of dimensions for this stimulus
PatchComponent.units.allowedUpdates:None
PatchComponent.texture resolution.default:128
PatchComponent.texture resolution.label:Texture resolution
PatchComponent.texture resolution.valType:code
PatchComponent.texture resolution.val:128
PatchComponent.texture resolution.allowedTypes:[]
PatchComponent.texture resolution.categ:Advanced
PatchComponent.texture resolution.allowedVals:['32', '64', '128', '256', '512']
PatchComponent.texture resolution.readOnly:False
PatchComponent.texture resolution.updates:constant
PatchComponent.texture resolution.staticUpdater:None
PatchComponent.texture resolution.hint:Resolution of the texture for standard ones such as sin, sqr etc. For most cases a value of 256 pixels will suffice
PatchComponent.texture resolution.allowedUpdates:[]
PatchComponent.phase.default:0.0
PatchComponent.phase.label:Phase (in cycles)
PatchComponent.phase.valType:code
PatchComponent.phase.val:0.0
PatchComponent.phase.allowedTypes:[]
PatchComponent.phase.categ:Advanced
PatchComponent.phase.allowedVals:[]
PatchComponent.phase.readOnly:False
PatchComponent.phase.updates:constant
PatchComponent.phase.staticUpdater:None
PatchComponent.phase.hint:Spatial positioning of the image on the patch (in range 0-1.0)
PatchComponent.phase.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.startType.default:'time (s)'
PatchComponent.startType.label:start type
PatchComponent.startType.valType:str
PatchComponent.startType.val:time (s)
PatchComponent.startType.allowedTypes:[]
PatchComponent.startType.categ:Basic
PatchComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PatchComponent.startType.readOnly:False
PatchComponent.startType.updates:None
PatchComponent.startType.staticUpdater:None
PatchComponent.startType.hint:How do you want to define your start point?
PatchComponent.startType.allowedUpdates:None
PatchComponent.ori.default:0
PatchComponent.ori.label:Orientation
PatchComponent.ori.valType:code
PatchComponent.ori.val:0
PatchComponent.ori.allowedTypes:[]
PatchComponent.ori.categ:Basic
PatchComponent.ori.allowedVals:[]
PatchComponent.ori.readOnly:False
PatchComponent.ori.updates:constant
PatchComponent.ori.staticUpdater:None
PatchComponent.ori.hint:Orientation of this stimulus (in deg)
PatchComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.stopType.default:'duration (s)'
PatchComponent.stopType.label:stop type
PatchComponent.stopType.valType:str
PatchComponent.stopType.val:duration (s)
PatchComponent.stopType.allowedTypes:[]
PatchComponent.stopType.categ:Basic
PatchComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PatchComponent.stopType.readOnly:False
PatchComponent.stopType.updates:None
PatchComponent.stopType.staticUpdater:None
PatchComponent.stopType.hint:How do you want to define your end point?
PatchComponent.stopType.allowedUpdates:None
PatchComponent.startVal.default:0.0
PatchComponent.startVal.label:Start
PatchComponent.startVal.valType:code
PatchComponent.startVal.val:0.0
PatchComponent.startVal.allowedTypes:[]
PatchComponent.startVal.categ:Basic
PatchComponent.startVal.allowedVals:[]
PatchComponent.startVal.readOnly:False
PatchComponent.startVal.updates:None
PatchComponent.startVal.staticUpdater:None
PatchComponent.startVal.hint:When does the component start?
PatchComponent.startVal.allowedUpdates:None
PatchComponent.image.default:'sin'
PatchComponent.image.label:Image/tex
PatchComponent.image.valType:str
PatchComponent.image.val:sin
PatchComponent.image.allowedTypes:[]
PatchComponent.image.categ:Basic
PatchComponent.image.allowedVals:[]
PatchComponent.image.readOnly:False
PatchComponent.image.updates:constant
PatchComponent.image.staticUpdater:None
PatchComponent.image.hint:The image to be displayed - 'sin','sqr'... or a filename (including path)
PatchComponent.image.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PatchComponent.size.default:(0.5, 0.5)
PatchComponent.size.label:Size [w,h]
PatchComponent.size.valType:code
PatchComponent.size.val:(0.5, 0.5)
PatchComponent.size.allowedTypes:[]
PatchComponent.size.categ:Basic
PatchComponent.size.allowedVals:[]
PatchComponent.size.readOnly:False
PatchComponent.size.updates:constant
PatchComponent.size.staticUpdater:None
PatchComponent.size.hint:Size of this stimulus (either a single value or x,y pair, e.g. 2.5, [1,2] 
PatchComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.order:['shape', 'nVertices']
PolygonComponent.lineColorSpace.default:'rgb'
PolygonComponent.lineColorSpace.label:Line color-space
PolygonComponent.lineColorSpace.valType:str
PolygonComponent.lineColorSpace.val:rgb
PolygonComponent.lineColorSpace.allowedTypes:[]
PolygonComponent.lineColorSpace.categ:Advanced
PolygonComponent.lineColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
PolygonComponent.lineColorSpace.readOnly:False
PolygonComponent.lineColorSpace.updates:constant
PolygonComponent.lineColorSpace.staticUpdater:None
PolygonComponent.lineColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.lineColorSpace.allowedUpdates:None
PolygonComponent.pos.default:(0, 0)
PolygonComponent.pos.label:Position [x,y]
PolygonComponent.pos.valType:code
PolygonComponent.pos.val:(0, 0)
PolygonComponent.pos.allowedTypes:[]
PolygonComponent.pos.categ:Basic
PolygonComponent.pos.allowedVals:[]
PolygonComponent.pos.readOnly:False
PolygonComponent.pos.updates:constant
PolygonComponent.pos.staticUpdater:None
PolygonComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
PolygonComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColorSpace.default:'rgb'
PolygonComponent.fillColorSpace.label:Fill color-space
PolygonComponent.fillColorSpace.valType:str
PolygonComponent.fillColorSpace.val:rgb
PolygonComponent.fillColorSpace.allowedTypes:[]
PolygonComponent.fillColorSpace.categ:Advanced
PolygonComponent.fillColorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'rgb255']
PolygonComponent.fillColorSpace.readOnly:False
PolygonComponent.fillColorSpace.updates:constant
PolygonComponent.fillColorSpace.staticUpdater:None
PolygonComponent.fillColorSpace.hint:Choice of color space for the fill color (rgb, dkl, lms, hsv)
PolygonComponent.fillColorSpace.allowedUpdates:None
PolygonComponent.shape.default:'triangle'
PolygonComponent.shape.label:Shape
PolygonComponent.shape.valType:str
PolygonComponent.shape.val:triangle
PolygonComponent.shape.allowedTypes:[]
PolygonComponent.shape.categ:Basic
PolygonComponent.shape.allowedVals:['line', 'triangle', 'rectangle', 'cross', 'regular polygon...']
PolygonComponent.shape.readOnly:False
PolygonComponent.shape.updates:constant
PolygonComponent.shape.staticUpdater:None
PolygonComponent.shape.hint:What shape is this? With 'regular polygon...' you can set number of vertices
PolygonComponent.shape.allowedUpdates:['constant']
PolygonComponent.startVal.default:0.0
PolygonComponent.startVal.label:Start
PolygonComponent.startVal.valType:code
PolygonComponent.startVal.val:0.0
PolygonComponent.startVal.allowedTypes:[]
PolygonComponent.startVal.categ:Basic
PolygonComponent.startVal.allowedVals:[]
PolygonComponent.startVal.readOnly:False
PolygonComponent.startVal.updates:None
PolygonComponent.startVal.staticUpdater:None
PolygonComponent.startVal.hint:When does the component start?
PolygonComponent.startVal.allowedUpdates:None
PolygonComponent.size.default:(0.5, 0.5)
PolygonComponent.size.label:Size [w,h]
PolygonComponent.size.valType:code
PolygonComponent.size.val:(0.5, 0.5)
PolygonComponent.size.allowedTypes:[]
PolygonComponent.size.categ:Basic
PolygonComponent.size.allowedVals:[]
PolygonComponent.size.readOnly:False
PolygonComponent.size.updates:constant
PolygonComponent.size.staticUpdater:None
PolygonComponent.size.hint:Size of this stimulus [w,h]. Note that for a line only the first value is used, for triangle and rect the [w,h] is as expected,
 but for higher-order polygons it represents the [w,h] of the ellipse that the polygon sits on!! 
PolygonComponent.size.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.fillColor.default:[1,1,1]
PolygonComponent.fillColor.label:Fill color
PolygonComponent.fillColor.valType:str
PolygonComponent.fillColor.val:$[1,1,1]
PolygonComponent.fillColor.allowedTypes:[]
PolygonComponent.fillColor.categ:Advanced
PolygonComponent.fillColor.allowedVals:[]
PolygonComponent.fillColor.readOnly:False
PolygonComponent.fillColor.updates:constant
PolygonComponent.fillColor.staticUpdater:None
PolygonComponent.fillColor.hint:Fill color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.fillColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.units.default:'from exp settings'
PolygonComponent.units.label:Units
PolygonComponent.units.valType:str
PolygonComponent.units.val:from exp settings
PolygonComponent.units.allowedTypes:[]
PolygonComponent.units.categ:Basic
PolygonComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
PolygonComponent.units.readOnly:False
PolygonComponent.units.updates:None
PolygonComponent.units.staticUpdater:None
PolygonComponent.units.hint:Units of dimensions for this stimulus
PolygonComponent.units.allowedUpdates:None
PolygonComponent.nVertices.default:4
PolygonComponent.nVertices.label:Num. vertices
PolygonComponent.nVertices.valType:int
PolygonComponent.nVertices.val:4
PolygonComponent.nVertices.allowedTypes:[]
PolygonComponent.nVertices.categ:Basic
PolygonComponent.nVertices.allowedVals:[]
PolygonComponent.nVertices.readOnly:False
PolygonComponent.nVertices.updates:constant
PolygonComponent.nVertices.staticUpdater:None
PolygonComponent.nVertices.hint:How many vertices in your regular polygon?
PolygonComponent.nVertices.allowedUpdates:['constant']
PolygonComponent.opacity.default:1
PolygonComponent.opacity.label:Opacity
PolygonComponent.opacity.valType:code
PolygonComponent.opacity.val:1
PolygonComponent.opacity.allowedTypes:[]
PolygonComponent.opacity.categ:Basic
PolygonComponent.opacity.allowedVals:[]
PolygonComponent.opacity.readOnly:False
PolygonComponent.opacity.updates:constant
PolygonComponent.opacity.staticUpdater:None
PolygonComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
PolygonComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.stopVal.default:1.0
PolygonComponent.stopVal.label:Stop
PolygonComponent.stopVal.valType:code
PolygonComponent.stopVal.val:1.0
PolygonComponent.stopVal.allowedTypes:[]
PolygonComponent.stopVal.categ:Basic
PolygonComponent.stopVal.allowedVals:[]
PolygonComponent.stopVal.readOnly:False
PolygonComponent.stopVal.updates:constant
PolygonComponent.stopVal.staticUpdater:None
PolygonComponent.stopVal.hint:When does the component end? (blank is endless)
PolygonComponent.stopVal.allowedUpdates:[]
PolygonComponent.durationEstim.default:
PolygonComponent.durationEstim.label:Expected duration (s)
PolygonComponent.durationEstim.valType:code
PolygonComponent.durationEstim.val:
PolygonComponent.durationEstim.allowedTypes:[]
PolygonComponent.durationEstim.categ:Basic
PolygonComponent.durationEstim.allowedVals:[]
PolygonComponent.durationEstim.readOnly:False
PolygonComponent.durationEstim.updates:None
PolygonComponent.durationEstim.staticUpdater:None
PolygonComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
PolygonComponent.durationEstim.allowedUpdates:None
PolygonComponent.interpolate.default:'linear'
PolygonComponent.interpolate.label:Interpolate
PolygonComponent.interpolate.valType:str
PolygonComponent.interpolate.val:linear
PolygonComponent.interpolate.allowedTypes:[]
PolygonComponent.interpolate.categ:Advanced
PolygonComponent.interpolate.allowedVals:['linear', 'nearest']
PolygonComponent.interpolate.readOnly:False
PolygonComponent.interpolate.updates:constant
PolygonComponent.interpolate.staticUpdater:None
PolygonComponent.interpolate.hint:How should the image be interpolated if/when rescaled
PolygonComponent.interpolate.allowedUpdates:[]
PolygonComponent.startEstim.default:
PolygonComponent.startEstim.label:Expected start (s)
PolygonComponent.startEstim.valType:code
PolygonComponent.startEstim.val:
PolygonComponent.startEstim.allowedTypes:[]
PolygonComponent.startEstim.categ:Basic
PolygonComponent.startEstim.allowedVals:[]
PolygonComponent.startEstim.readOnly:False
PolygonComponent.startEstim.updates:None
PolygonComponent.startEstim.staticUpdater:None
PolygonComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
PolygonComponent.startEstim.allowedUpdates:None
PolygonComponent.startType.default:'time (s)'
PolygonComponent.startType.label:start type
PolygonComponent.startType.valType:str
PolygonComponent.startType.val:time (s)
PolygonComponent.startType.allowedTypes:[]
PolygonComponent.startType.categ:Basic
PolygonComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
PolygonComponent.startType.readOnly:False
PolygonComponent.startType.updates:None
PolygonComponent.startType.staticUpdater:None
PolygonComponent.startType.hint:How do you want to define your start point?
PolygonComponent.startType.allowedUpdates:None
PolygonComponent.ori.default:0
PolygonComponent.ori.label:Orientation
PolygonComponent.ori.valType:code
PolygonComponent.ori.val:0
PolygonComponent.ori.allowedTypes:[]
PolygonComponent.ori.categ:Basic
PolygonComponent.ori.allowedVals:[]
PolygonComponent.ori.readOnly:False
PolygonComponent.ori.updates:constant
PolygonComponent.ori.staticUpdater:None
PolygonComponent.ori.hint:Orientation of this stimulus (in deg)
PolygonComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.stopType.default:'duration (s)'
PolygonComponent.stopType.label:stop type
PolygonComponent.stopType.valType:str
PolygonComponent.stopType.val:duration (s)
PolygonComponent.stopType.allowedTypes:[]
PolygonComponent.stopType.categ:Basic
PolygonComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
PolygonComponent.stopType.readOnly:False
PolygonComponent.stopType.updates:None
PolygonComponent.stopType.staticUpdater:None
PolygonComponent.stopType.hint:How do you want to define your end point?
PolygonComponent.stopType.allowedUpdates:None
PolygonComponent.name.default:polygon
PolygonComponent.name.label:Name
PolygonComponent.name.valType:code
PolygonComponent.name.val:polygon
PolygonComponent.name.allowedTypes:[]
PolygonComponent.name.categ:Basic
PolygonComponent.name.allowedVals:[]
PolygonComponent.name.readOnly:False
PolygonComponent.name.staticUpdater:None
PolygonComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
PolygonComponent.name.allowedUpdates:None
PolygonComponent.lineColor.default:[1,1,1]
PolygonComponent.lineColor.label:Line color
PolygonComponent.lineColor.valType:str
PolygonComponent.lineColor.val:$[1,1,1]
PolygonComponent.lineColor.allowedTypes:[]
PolygonComponent.lineColor.categ:Advanced
PolygonComponent.lineColor.allowedVals:[]
PolygonComponent.lineColor.readOnly:False
PolygonComponent.lineColor.updates:constant
PolygonComponent.lineColor.staticUpdater:None
PolygonComponent.lineColor.hint:Line color of this shape; Right-click to bring up a color-picker (rgb only)
PolygonComponent.lineColor.allowedUpdates:['constant', 'set every repeat', 'set every frame']
PolygonComponent.lineWidth.default:1
PolygonComponent.lineWidth.label:Line width
PolygonComponent.lineWidth.valType:code
PolygonComponent.lineWidth.val:1
PolygonComponent.lineWidth.allowedTypes:[]
PolygonComponent.lineWidth.categ:Basic
PolygonComponent.lineWidth.allowedVals:[]
PolygonComponent.lineWidth.readOnly:False
PolygonComponent.lineWidth.updates:constant
PolygonComponent.lineWidth.staticUpdater:None
PolygonComponent.lineWidth.hint:Width of the shape's line (always in pixels - this does NOT use 'units')
PolygonComponent.lineWidth.allowedUpdates:['constant', 'set every repeat', 'set every frame']
RatingScaleComponent.order:['name', 'visualAnalogScale', 'categoryChoices', 'scaleDescription', 'low', 'high', 'labels', 'markerStart', 'size', 'pos', 'tickHeight']
RatingScaleComponent.labels.default:''
RatingScaleComponent.labels.label:Labels
RatingScaleComponent.labels.valType:str
RatingScaleComponent.labels.val:
RatingScaleComponent.labels.allowedTypes:[]
RatingScaleComponent.labels.categ:Basic
RatingScaleComponent.labels.allowedVals:[]
RatingScaleComponent.labels.readOnly:False
RatingScaleComponent.labels.updates:constant
RatingScaleComponent.labels.staticUpdater:None
RatingScaleComponent.labels.hint:Labels for the ends of the scale, separated by commas
RatingScaleComponent.labels.allowedUpdates:[]
RatingScaleComponent.pos.default:'0, -0.4'
RatingScaleComponent.pos.label:Position [x,y]
RatingScaleComponent.pos.valType:str
RatingScaleComponent.pos.val:0, -0.4
RatingScaleComponent.pos.allowedTypes:[]
RatingScaleComponent.pos.categ:Advanced
RatingScaleComponent.pos.allowedVals:[]
RatingScaleComponent.pos.readOnly:False
RatingScaleComponent.pos.updates:constant
RatingScaleComponent.pos.staticUpdater:None
RatingScaleComponent.pos.hint:x,y position on the screen
RatingScaleComponent.pos.allowedUpdates:[]
RatingScaleComponent.high.default:7
RatingScaleComponent.high.label:Highest value
RatingScaleComponent.high.valType:code
RatingScaleComponent.high.val:7
RatingScaleComponent.high.allowedTypes:[]
RatingScaleComponent.high.categ:Basic
RatingScaleComponent.high.allowedVals:[]
RatingScaleComponent.high.readOnly:False
RatingScaleComponent.high.updates:constant
RatingScaleComponent.high.staticUpdater:None
RatingScaleComponent.high.hint:Highest rating (top end of the scale); not used for categories.
RatingScaleComponent.high.allowedUpdates:[]
RatingScaleComponent.storeRating.default:True
RatingScaleComponent.storeRating.label:Store rating
RatingScaleComponent.storeRating.valType:bool
RatingScaleComponent.storeRating.val:True
RatingScaleComponent.storeRating.allowedTypes:[]
RatingScaleComponent.storeRating.categ:Advanced
RatingScaleComponent.storeRating.allowedVals:[]
RatingScaleComponent.storeRating.readOnly:False
RatingScaleComponent.storeRating.updates:constant
RatingScaleComponent.storeRating.staticUpdater:None
RatingScaleComponent.storeRating.hint:store the rating
RatingScaleComponent.storeRating.allowedUpdates:[]
RatingScaleComponent.marker.default:'triangle'
RatingScaleComponent.marker.label:Marker type
RatingScaleComponent.marker.valType:str
RatingScaleComponent.marker.val:triangle
RatingScaleComponent.marker.allowedTypes:[]
RatingScaleComponent.marker.categ:Basic
RatingScaleComponent.marker.allowedVals:[]
RatingScaleComponent.marker.readOnly:False
RatingScaleComponent.marker.updates:constant
RatingScaleComponent.marker.staticUpdater:None
RatingScaleComponent.marker.hint:Style for the marker: triangle, circle, glow, slider, hover
RatingScaleComponent.marker.allowedUpdates:[]
RatingScaleComponent.startVal.default:0.0
RatingScaleComponent.startVal.label:Start
RatingScaleComponent.startVal.valType:code
RatingScaleComponent.startVal.val:0.0
RatingScaleComponent.startVal.allowedTypes:[]
RatingScaleComponent.startVal.categ:Basic
RatingScaleComponent.startVal.allowedVals:[]
RatingScaleComponent.startVal.readOnly:False
RatingScaleComponent.startVal.updates:None
RatingScaleComponent.startVal.staticUpdater:None
RatingScaleComponent.startVal.hint:When does the component start?
RatingScaleComponent.startVal.allowedUpdates:None
RatingScaleComponent.markerStart.default:''
RatingScaleComponent.markerStart.label:Marker start
RatingScaleComponent.markerStart.valType:str
RatingScaleComponent.markerStart.val:
RatingScaleComponent.markerStart.allowedTypes:[]
RatingScaleComponent.markerStart.categ:Basic
RatingScaleComponent.markerStart.allowedVals:[]
RatingScaleComponent.markerStart.readOnly:False
RatingScaleComponent.markerStart.updates:constant
RatingScaleComponent.markerStart.staticUpdater:None
RatingScaleComponent.markerStart.hint:initial position for the marker
RatingScaleComponent.markerStart.allowedUpdates:[]
RatingScaleComponent.disappear.default:False
RatingScaleComponent.disappear.label:Disappear
RatingScaleComponent.disappear.valType:bool
RatingScaleComponent.disappear.val:False
RatingScaleComponent.disappear.allowedTypes:[]
RatingScaleComponent.disappear.categ:Advanced
RatingScaleComponent.disappear.allowedVals:[]
RatingScaleComponent.disappear.readOnly:False
RatingScaleComponent.disappear.updates:constant
RatingScaleComponent.disappear.staticUpdater:None
RatingScaleComponent.disappear.hint:Hide the scale when a rating has been accepted; False to remain on-screen
RatingScaleComponent.disappear.allowedUpdates:[]
RatingScaleComponent.size.default:1.0
RatingScaleComponent.size.label:Size
RatingScaleComponent.size.valType:code
RatingScaleComponent.size.val:1.0
RatingScaleComponent.size.allowedTypes:[]
RatingScaleComponent.size.categ:Advanced
RatingScaleComponent.size.allowedVals:[]
RatingScaleComponent.size.readOnly:False
RatingScaleComponent.size.updates:constant
RatingScaleComponent.size.staticUpdater:None
RatingScaleComponent.size.hint:Relative size on the screen; size > 1 is larger than default; size < 1 is smaller
RatingScaleComponent.size.allowedUpdates:[]
RatingScaleComponent.tickHeight.default:''
RatingScaleComponent.tickHeight.label:Tick height
RatingScaleComponent.tickHeight.valType:str
RatingScaleComponent.tickHeight.val:
RatingScaleComponent.tickHeight.allowedTypes:[]
RatingScaleComponent.tickHeight.categ:Advanced
RatingScaleComponent.tickHeight.allowedVals:[]
RatingScaleComponent.tickHeight.readOnly:False
RatingScaleComponent.tickHeight.updates:constant
RatingScaleComponent.tickHeight.staticUpdater:None
RatingScaleComponent.tickHeight.hint:height of tick marks (1 is upward, 0 is hidden, -1 is downward)
RatingScaleComponent.tickHeight.allowedUpdates:[]
RatingScaleComponent.showAccept.default:True
RatingScaleComponent.showAccept.label:Show accept
RatingScaleComponent.showAccept.valType:bool
RatingScaleComponent.showAccept.val:True
RatingScaleComponent.showAccept.allowedTypes:[]
RatingScaleComponent.showAccept.categ:Advanced
RatingScaleComponent.showAccept.allowedVals:[]
RatingScaleComponent.showAccept.readOnly:False
RatingScaleComponent.showAccept.updates:constant
RatingScaleComponent.showAccept.staticUpdater:None
RatingScaleComponent.showAccept.hint:Should the accept button by visible?
RatingScaleComponent.showAccept.allowedUpdates:[]
RatingScaleComponent.storeRatingTime.default:True
RatingScaleComponent.storeRatingTime.label:Store rating time
RatingScaleComponent.storeRatingTime.valType:bool
RatingScaleComponent.storeRatingTime.val:True
RatingScaleComponent.storeRatingTime.allowedTypes:[]
RatingScaleComponent.storeRatingTime.categ:Advanced
RatingScaleComponent.storeRatingTime.allowedVals:[]
RatingScaleComponent.storeRatingTime.readOnly:False
RatingScaleComponent.storeRatingTime.updates:constant
RatingScaleComponent.storeRatingTime.staticUpdater:None
RatingScaleComponent.storeRatingTime.hint:store the time taken to make the choice (in seconds)
RatingScaleComponent.storeRatingTime.allowedUpdates:[]
RatingScaleComponent.forceEndRoutine.default:True
RatingScaleComponent.forceEndRoutine.label:Force end of Routine
RatingScaleComponent.forceEndRoutine.valType:bool
RatingScaleComponent.forceEndRoutine.val:True
RatingScaleComponent.forceEndRoutine.allowedTypes:[]
RatingScaleComponent.forceEndRoutine.categ:Advanced
RatingScaleComponent.forceEndRoutine.allowedVals:[]
RatingScaleComponent.forceEndRoutine.readOnly:False
RatingScaleComponent.forceEndRoutine.updates:constant
RatingScaleComponent.forceEndRoutine.staticUpdater:None
RatingScaleComponent.forceEndRoutine.hint:Should accepting a rating cause the end of the routine (e.g. trial)?
RatingScaleComponent.forceEndRoutine.allowedUpdates:[]
RatingScaleComponent.low.default:1
RatingScaleComponent.low.label:Lowest value
RatingScaleComponent.low.valType:code
RatingScaleComponent.low.val:1
RatingScaleComponent.low.allowedTypes:[]
RatingScaleComponent.low.categ:Basic
RatingScaleComponent.low.allowedVals:[]
RatingScaleComponent.low.readOnly:False
RatingScaleComponent.low.updates:constant
RatingScaleComponent.low.staticUpdater:None
RatingScaleComponent.low.hint:Lowest rating (low end of the scale); not used for categories.
RatingScaleComponent.low.allowedUpdates:[]
RatingScaleComponent.durationEstim.default:
RatingScaleComponent.durationEstim.label:Expected duration (s)
RatingScaleComponent.durationEstim.valType:code
RatingScaleComponent.durationEstim.val:
RatingScaleComponent.durationEstim.allowedTypes:[]
RatingScaleComponent.durationEstim.categ:Basic
RatingScaleComponent.durationEstim.allowedVals:[]
RatingScaleComponent.durationEstim.readOnly:False
RatingScaleComponent.durationEstim.updates:None
RatingScaleComponent.durationEstim.staticUpdater:None
RatingScaleComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
RatingScaleComponent.durationEstim.allowedUpdates:None
RatingScaleComponent.stopVal.default:
RatingScaleComponent.stopVal.label:Stop
RatingScaleComponent.stopVal.valType:code
RatingScaleComponent.stopVal.val:
RatingScaleComponent.stopVal.allowedTypes:[]
RatingScaleComponent.stopVal.categ:Basic
RatingScaleComponent.stopVal.allowedVals:[]
RatingScaleComponent.stopVal.readOnly:False
RatingScaleComponent.stopVal.updates:constant
RatingScaleComponent.stopVal.staticUpdater:None
RatingScaleComponent.stopVal.hint:When does the component end? (blank is endless)
RatingScaleComponent.stopVal.allowedUpdates:[]
RatingScaleComponent.visualAnalogScale.default:False
RatingScaleComponent.visualAnalogScale.label:Visual analog scale
RatingScaleComponent.visualAnalogScale.valType:bool
RatingScaleComponent.visualAnalogScale.val:False
RatingScaleComponent.visualAnalogScale.allowedTypes:[]
RatingScaleComponent.visualAnalogScale.categ:Basic
RatingScaleComponent.visualAnalogScale.allowedVals:[]
RatingScaleComponent.visualAnalogScale.readOnly:False
RatingScaleComponent.visualAnalogScale.updates:constant
RatingScaleComponent.visualAnalogScale.staticUpdater:None
RatingScaleComponent.visualAnalogScale.hint:Show a continuous visual analog scale; returns 0.00 to 1.00; takes precedence over numeric scale or categorical choices
RatingScaleComponent.visualAnalogScale.allowedUpdates:[]
RatingScaleComponent.startEstim.default:
RatingScaleComponent.startEstim.label:Expected start (s)
RatingScaleComponent.startEstim.valType:code
RatingScaleComponent.startEstim.val:
RatingScaleComponent.startEstim.allowedTypes:[]
RatingScaleComponent.startEstim.categ:Basic
RatingScaleComponent.startEstim.allowedVals:[]
RatingScaleComponent.startEstim.readOnly:False
RatingScaleComponent.startEstim.updates:None
RatingScaleComponent.startEstim.staticUpdater:None
RatingScaleComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
RatingScaleComponent.startEstim.allowedUpdates:None
RatingScaleComponent.startType.default:'time (s)'
RatingScaleComponent.startType.label:start type
RatingScaleComponent.startType.valType:str
RatingScaleComponent.startType.val:time (s)
RatingScaleComponent.startType.allowedTypes:[]
RatingScaleComponent.startType.categ:Basic
RatingScaleComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
RatingScaleComponent.startType.readOnly:False
RatingScaleComponent.startType.updates:None
RatingScaleComponent.startType.staticUpdater:None
RatingScaleComponent.startType.hint:How do you want to define your start point?
RatingScaleComponent.startType.allowedUpdates:None
RatingScaleComponent.stopType.default:'condition'
RatingScaleComponent.stopType.label:stop type
RatingScaleComponent.stopType.valType:str
RatingScaleComponent.stopType.val:condition
RatingScaleComponent.stopType.allowedTypes:[]
RatingScaleComponent.stopType.categ:Basic
RatingScaleComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
RatingScaleComponent.stopType.readOnly:False
RatingScaleComponent.stopType.updates:None
RatingScaleComponent.stopType.staticUpdater:None
RatingScaleComponent.stopType.hint:How do you want to define your end point?
RatingScaleComponent.stopType.allowedUpdates:None
RatingScaleComponent.scaleDescription.default:''
RatingScaleComponent.scaleDescription.label:Scale description
RatingScaleComponent.scaleDescription.valType:str
RatingScaleComponent.scaleDescription.val:
RatingScaleComponent.scaleDescription.allowedTypes:[]
RatingScaleComponent.scaleDescription.categ:Basic
RatingScaleComponent.scaleDescription.allowedVals:[]
RatingScaleComponent.scaleDescription.readOnly:False
RatingScaleComponent.scaleDescription.updates:constant
RatingScaleComponent.scaleDescription.staticUpdater:None
RatingScaleComponent.scaleDescription.hint:Brief instructions, such as a description of the scale numbers as seen by the subject.
RatingScaleComponent.scaleDescription.allowedUpdates:[]
RatingScaleComponent.storeHistory.default:False
RatingScaleComponent.storeHistory.label:Store history
RatingScaleComponent.storeHistory.valType:bool
RatingScaleComponent.storeHistory.val:False
RatingScaleComponent.storeHistory.allowedTypes:[]
RatingScaleComponent.storeHistory.categ:Advanced
RatingScaleComponent.storeHistory.allowedVals:[]
RatingScaleComponent.storeHistory.readOnly:False
RatingScaleComponent.storeHistory.updates:constant
RatingScaleComponent.storeHistory.staticUpdater:None
RatingScaleComponent.storeHistory.hint:store the history of (selection, time)
RatingScaleComponent.storeHistory.allowedUpdates:[]
RatingScaleComponent.categoryChoices.default:''
RatingScaleComponent.categoryChoices.label:Category choices
RatingScaleComponent.categoryChoices.valType:str
RatingScaleComponent.categoryChoices.val:
RatingScaleComponent.categoryChoices.allowedTypes:[]
RatingScaleComponent.categoryChoices.categ:Basic
RatingScaleComponent.categoryChoices.allowedVals:[]
RatingScaleComponent.categoryChoices.readOnly:False
RatingScaleComponent.categoryChoices.updates:constant
RatingScaleComponent.categoryChoices.staticUpdater:None
RatingScaleComponent.categoryChoices.hint:A list of categories (non-numeric alternatives) to present, space or comma-separated; these take precedence over a numeric scale
RatingScaleComponent.categoryChoices.allowedUpdates:[]
RatingScaleComponent.customize_everything.default:''
RatingScaleComponent.customize_everything.label:Customize everything :
RatingScaleComponent.customize_everything.valType:str
RatingScaleComponent.customize_everything.val:
RatingScaleComponent.customize_everything.allowedTypes:[]
RatingScaleComponent.customize_everything.categ:Custom
RatingScaleComponent.customize_everything.allowedVals:[]
RatingScaleComponent.customize_everything.readOnly:False
RatingScaleComponent.customize_everything.updates:constant
RatingScaleComponent.customize_everything.staticUpdater:None
RatingScaleComponent.customize_everything.hint:Use this text to create the rating scale as you would in a code component; overrides all dialog settings except time parameters, forceEndRoutine, storeRatingTime, storeRating
RatingScaleComponent.customize_everything.allowedUpdates:[]
RatingScaleComponent.name.default:rating
RatingScaleComponent.name.label:Name
RatingScaleComponent.name.valType:code
RatingScaleComponent.name.val:rating
RatingScaleComponent.name.allowedTypes:[]
RatingScaleComponent.name.categ:Basic
RatingScaleComponent.name.allowedVals:[]
RatingScaleComponent.name.readOnly:False
RatingScaleComponent.name.staticUpdater:None
RatingScaleComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
RatingScaleComponent.name.allowedUpdates:None
RatingScaleComponent.singleClick.default:False
RatingScaleComponent.singleClick.label:Single click
RatingScaleComponent.singleClick.valType:bool
RatingScaleComponent.singleClick.val:False
RatingScaleComponent.singleClick.allowedTypes:[]
RatingScaleComponent.singleClick.categ:Advanced
RatingScaleComponent.singleClick.allowedVals:[]
RatingScaleComponent.singleClick.readOnly:False
RatingScaleComponent.singleClick.updates:constant
RatingScaleComponent.singleClick.staticUpdater:None
RatingScaleComponent.singleClick.hint:Should clicking the line accept that rating (without needing to confirm via 'accept')?
RatingScaleComponent.singleClick.allowedUpdates:[]
SettingsComponent.order:['expName', 'Show info dlg', 'Experiment info', 'Data filename', 'Save excel file', 'Save csv file', 'Save wide csv file', 'Save psydat file', 'Save log file', 'logging level', 'Monitor', 'Screen', 'Full-screen window', 'Window size (pixels)', 'color', 'colorSpace', 'Units']
SettingsComponent.Monitor.default:'testMonitor'
SettingsComponent.Monitor.label:Monitor
SettingsComponent.Monitor.valType:str
SettingsComponent.Monitor.val:testMonitor
SettingsComponent.Monitor.allowedTypes:[]
SettingsComponent.Monitor.categ:Screen
SettingsComponent.Monitor.allowedVals:[]
SettingsComponent.Monitor.readOnly:False
SettingsComponent.Monitor.updates:None
SettingsComponent.Monitor.staticUpdater:None
SettingsComponent.Monitor.hint:Name of the monitor (from Monitor Center). Right-click to go there, then copy & paste a monitor name here.
SettingsComponent.Monitor.allowedUpdates:None
SettingsComponent.color.default:[0,0,0]
SettingsComponent.color.label:Color
SettingsComponent.color.valType:str
SettingsComponent.color.val:$[0,0,0]
SettingsComponent.color.allowedTypes:[]
SettingsComponent.color.categ:Screen
SettingsComponent.color.allowedVals:[]
SettingsComponent.color.readOnly:False
SettingsComponent.color.updates:None
SettingsComponent.color.staticUpdater:None
SettingsComponent.color.hint:Color of the screen (e.g. black, $[1.0,1.0,1.0], $variable. Right-click to bring up a color-picker.)
SettingsComponent.color.allowedUpdates:None
SettingsComponent.colorSpace.default:'rgb'
SettingsComponent.colorSpace.label:Color space
SettingsComponent.colorSpace.valType:str
SettingsComponent.colorSpace.val:rgb
SettingsComponent.colorSpace.allowedTypes:[]
SettingsComponent.colorSpace.categ:Screen
SettingsComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv', 'hex']
SettingsComponent.colorSpace.readOnly:False
SettingsComponent.colorSpace.updates:None
SettingsComponent.colorSpace.staticUpdater:None
SettingsComponent.colorSpace.hint:Needed if color is defined numerically (see PsychoPy documentation on color spaces)
SettingsComponent.colorSpace.allowedUpdates:None
SettingsComponent.Experiment info.default:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.label:Experiment info
SettingsComponent.Experiment info.valType:code
SettingsComponent.Experiment info.val:{'participant':'', 'session':'001'}
SettingsComponent.Experiment info.allowedTypes:[]
SettingsComponent.Experiment info.categ:Basic
SettingsComponent.Experiment info.allowedVals:[]
SettingsComponent.Experiment info.readOnly:False
SettingsComponent.Experiment info.updates:None
SettingsComponent.Experiment info.staticUpdater:None
SettingsComponent.Experiment info.hint:The info to present in a dialog box. Right-click to check syntax and preview the dialog box.
SettingsComponent.Experiment info.allowedUpdates:None
SettingsComponent.JS libs.default:'packaged'
SettingsComponent.JS libs.label:JS libs
SettingsComponent.JS libs.valType:str
SettingsComponent.JS libs.val:packaged
SettingsComponent.JS libs.allowedTypes:[]
SettingsComponent.JS libs.categ:Online
SettingsComponent.JS libs.allowedVals:['packaged']
SettingsComponent.JS libs.readOnly:False
SettingsComponent.JS libs.updates:None
SettingsComponent.JS libs.staticUpdater:None
SettingsComponent.JS libs.hint:Should we package a copy of the JS libs or useremote copies (http:/www.psychopy.org/js)?
SettingsComponent.JS libs.allowedUpdates:None
SettingsComponent.Units.default:'use prefs'
SettingsComponent.Units.label:Units
SettingsComponent.Units.valType:str
SettingsComponent.Units.val:use prefs
SettingsComponent.Units.allowedTypes:[]
SettingsComponent.Units.categ:Screen
SettingsComponent.Units.allowedVals:['use prefs', 'deg', 'pix', 'cm', 'norm', 'height', 'degFlatPos', 'degFlat']
SettingsComponent.Units.readOnly:False
SettingsComponent.Units.updates:None
SettingsComponent.Units.staticUpdater:None
SettingsComponent.Units.hint:Units to use for window/stimulus coordinates (e.g. cm, pix, deg)
SettingsComponent.Units.allowedUpdates:None
SettingsComponent.Save excel file.default:False
SettingsComponent.Save excel file.label:Save excel file
SettingsComponent.Save excel file.valType:bool
SettingsComponent.Save excel file.val:False
SettingsComponent.Save excel file.allowedTypes:[]
SettingsComponent.Save excel file.categ:Data
SettingsComponent.Save excel file.allowedVals:[]
SettingsComponent.Save excel file.readOnly:False
SettingsComponent.Save excel file.updates:None
SettingsComponent.Save excel file.staticUpdater:None
SettingsComponent.Save excel file.hint:Save data from loops in Excel (.xlsx) format
SettingsComponent.Save excel file.allowedUpdates:None
SettingsComponent.Enable Escape.default:True
SettingsComponent.Enable Escape.label:Enable Escape key
SettingsComponent.Enable Escape.valType:bool
SettingsComponent.Enable Escape.val:True
SettingsComponent.Enable Escape.allowedTypes:[]
SettingsComponent.Enable Escape.categ:Basic
SettingsComponent.Enable Escape.allowedVals:[]
SettingsComponent.Enable Escape.readOnly:False
SettingsComponent.Enable Escape.updates:None
SettingsComponent.Enable Escape.staticUpdater:None
SettingsComponent.Enable Escape.hint:Enable the <esc> key, to allow subjects to quit / break out of the experiment
SettingsComponent.Enable Escape.allowedUpdates:None
SettingsComponent.Save psydat file.default:True
SettingsComponent.Save psydat file.label:Save psydat file
SettingsComponent.Save psydat file.valType:bool
SettingsComponent.Save psydat file.val:True
SettingsComponent.Save psydat file.allowedTypes:[]
SettingsComponent.Save psydat file.categ:Data
SettingsComponent.Save psydat file.allowedVals:[True]
SettingsComponent.Save psydat file.readOnly:False
SettingsComponent.Save psydat file.updates:None
SettingsComponent.Save psydat file.staticUpdater:None
SettingsComponent.Save psydat file.hint:Save data from loops in psydat format. This is useful for python programmers to generate analysis scripts.
SettingsComponent.Save psydat file.allowedUpdates:None
SettingsComponent.Window size (pixels).default:(1024, 768)
SettingsComponent.Window size (pixels).label:Window size (pixels)
SettingsComponent.Window size (pixels).valType:code
SettingsComponent.Window size (pixels).val:(1024, 768)
SettingsComponent.Window size (pixels).allowedTypes:[]
SettingsComponent.Window size (pixels).categ:Screen
SettingsComponent.Window size (pixels).allowedVals:[]
SettingsComponent.Window size (pixels).readOnly:False
SettingsComponent.Window size (pixels).updates:None
SettingsComponent.Window size (pixels).staticUpdater:None
SettingsComponent.Window size (pixels).hint:Size of window (if not fullscreen)
SettingsComponent.Window size (pixels).allowedUpdates:None
SettingsComponent.Full-screen window.default:True
SettingsComponent.Full-screen window.label:Full-screen window
SettingsComponent.Full-screen window.valType:bool
SettingsComponent.Full-screen window.val:True
SettingsComponent.Full-screen window.allowedTypes:[]
SettingsComponent.Full-screen window.categ:Screen
SettingsComponent.Full-screen window.allowedVals:[]
SettingsComponent.Full-screen window.readOnly:False
SettingsComponent.Full-screen window.updates:None
SettingsComponent.Full-screen window.staticUpdater:None
SettingsComponent.Full-screen window.hint:Run the experiment full-screen (recommended)
SettingsComponent.Full-screen window.allowedUpdates:None
SettingsComponent.blendMode.default:'avg'
SettingsComponent.blendMode.label:Blend mode
SettingsComponent.blendMode.valType:str
SettingsComponent.blendMode.val:avg
SettingsComponent.blendMode.allowedTypes:[]
SettingsComponent.blendMode.categ:Screen
SettingsComponent.blendMode.allowedVals:['add', 'avg']
SettingsComponent.blendMode.readOnly:False
SettingsComponent.blendMode.updates:None
SettingsComponent.blendMode.staticUpdater:None
SettingsComponent.blendMode.hint:Should new stimuli be added or averaged with the stimuli that have been drawn already
SettingsComponent.blendMode.allowedUpdates:None
SettingsComponent.Use version.default:''
SettingsComponent.Use version.label:Use PsychoPy version
SettingsComponent.Use version.valType:str
SettingsComponent.Use version.val:
SettingsComponent.Use version.allowedTypes:[]
SettingsComponent.Use version.categ:Basic
SettingsComponent.Use version.allowedVals:['latest', u'1', u'1.85', u'1.84', u'1.83', u'1.82', u'1.81', u'1.80', u'1.79', u'1.78', u'1.77', u'1.76', '', u'1.85.3', u'1.85.2', u'1.85.1', u'1.85.0', u'1.84.2', u'1.84.1', u'1.84.0', u'1.83.04', u'1.83.03', u'1.83.01', u'1.83.00', u'1.82.01', u'1.82.00', u'1.81.03', u'1.81.02', u'1.81.01', u'1.81.00', u'1.80.06', u'1.80.05', u'1.80.03', u'1.80.02', u'1.80.01', u'1.80.00', u'1.79.00', u'1.78.01', u'1.78.00', u'1.77.02', u'1.77.01', u'1.77.00', u'1.76.00']
SettingsComponent.Use version.readOnly:False
SettingsComponent.Use version.updates:None
SettingsComponent.Use version.staticUpdater:None
SettingsComponent.Use version.hint:The version of PsychoPy to use when running the experiment.
SettingsComponent.Use version.allowedUpdates:None
SettingsComponent.HTML path.default:'html'
SettingsComponent.HTML path.label:Output path
SettingsComponent.HTML path.valType:str
SettingsComponent.HTML path.val:html
SettingsComponent.HTML path.allowedTypes:[]
SettingsComponent.HTML path.categ:Online
SettingsComponent.HTML path.allowedVals:[]
SettingsComponent.HTML path.readOnly:False
SettingsComponent.HTML path.updates:None
SettingsComponent.HTML path.staticUpdater:None
SettingsComponent.HTML path.hint:Place the HTML files will be saved locally 
SettingsComponent.HTML path.allowedUpdates:None
SettingsComponent.Save csv file.default:False
SettingsComponent.Save csv file.label:Save csv file (summaries)
SettingsComponent.Save csv file.valType:bool
SettingsComponent.Save csv file.val:False
SettingsComponent.Save csv file.allowedTypes:[]
SettingsComponent.Save csv file.categ:Data
SettingsComponent.Save csv file.allowedVals:[]
SettingsComponent.Save csv file.readOnly:False
SettingsComponent.Save csv file.updates:None
SettingsComponent.Save csv file.staticUpdater:None
SettingsComponent.Save csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save csv file.allowedUpdates:None
SettingsComponent.OSF Project ID.default:''
SettingsComponent.OSF Project ID.label:OSF Project ID
SettingsComponent.OSF Project ID.valType:str
SettingsComponent.OSF Project ID.val:
SettingsComponent.OSF Project ID.allowedTypes:[]
SettingsComponent.OSF Project ID.categ:Online
SettingsComponent.OSF Project ID.allowedVals:['']
SettingsComponent.OSF Project ID.readOnly:False
SettingsComponent.OSF Project ID.updates:None
SettingsComponent.OSF Project ID.staticUpdater:None
SettingsComponent.OSF Project ID.hint:The ID of this project (e.g. 5bqpc)
SettingsComponent.OSF Project ID.allowedUpdates:None
SettingsComponent.Save log file.default:True
SettingsComponent.Save log file.label:Save log file
SettingsComponent.Save log file.valType:bool
SettingsComponent.Save log file.val:True
SettingsComponent.Save log file.allowedTypes:[]
SettingsComponent.Save log file.categ:Data
SettingsComponent.Save log file.allowedVals:[]
SettingsComponent.Save log file.readOnly:False
SettingsComponent.Save log file.updates:None
SettingsComponent.Save log file.staticUpdater:None
SettingsComponent.Save log file.hint:Save a detailed log (more detailed than the excel/csv files) of the entire experiment
SettingsComponent.Save log file.allowedUpdates:None
SettingsComponent.Save wide csv file.default:True
SettingsComponent.Save wide csv file.label:Save csv file (trial-by-trial)
SettingsComponent.Save wide csv file.valType:bool
SettingsComponent.Save wide csv file.val:True
SettingsComponent.Save wide csv file.allowedTypes:[]
SettingsComponent.Save wide csv file.categ:Data
SettingsComponent.Save wide csv file.allowedVals:[]
SettingsComponent.Save wide csv file.readOnly:False
SettingsComponent.Save wide csv file.updates:None
SettingsComponent.Save wide csv file.staticUpdater:None
SettingsComponent.Save wide csv file.hint:Save data from loops in comma-separated-value (.csv) format for maximum portability
SettingsComponent.Save wide csv file.allowedUpdates:None
SettingsComponent.Show mouse.default:False
SettingsComponent.Show mouse.label:Show mouse
SettingsComponent.Show mouse.valType:bool
SettingsComponent.Show mouse.val:False
SettingsComponent.Show mouse.allowedTypes:[]
SettingsComponent.Show mouse.categ:Screen
SettingsComponent.Show mouse.allowedVals:[]
SettingsComponent.Show mouse.readOnly:False
SettingsComponent.Show mouse.updates:None
SettingsComponent.Show mouse.staticUpdater:None
SettingsComponent.Show mouse.hint:Should the mouse be visible on screen?
SettingsComponent.Show mouse.allowedUpdates:None
SettingsComponent.Data filename.default:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.label:Data filename
SettingsComponent.Data filename.valType:code
SettingsComponent.Data filename.val:u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])
SettingsComponent.Data filename.allowedTypes:[]
SettingsComponent.Data filename.categ:Data
SettingsComponent.Data filename.allowedVals:[]
SettingsComponent.Data filename.readOnly:False
SettingsComponent.Data filename.updates:None
SettingsComponent.Data filename.staticUpdater:None
SettingsComponent.Data filename.hint:Code to create your custom file name base. Don't give a file extension - this will be added.
SettingsComponent.Data filename.allowedUpdates:None
SettingsComponent.Show info dlg.default:True
SettingsComponent.Show info dlg.label:Show info dialog
SettingsComponent.Show info dlg.valType:bool
SettingsComponent.Show info dlg.val:True
SettingsComponent.Show info dlg.allowedTypes:[]
SettingsComponent.Show info dlg.categ:Basic
SettingsComponent.Show info dlg.allowedVals:[]
SettingsComponent.Show info dlg.readOnly:False
SettingsComponent.Show info dlg.updates:None
SettingsComponent.Show info dlg.staticUpdater:None
SettingsComponent.Show info dlg.hint:Start the experiment with a dialog to set info (e.g.participant or condition)
SettingsComponent.Show info dlg.allowedUpdates:None
SettingsComponent.expName.default:''
SettingsComponent.expName.label:Experiment name
SettingsComponent.expName.valType:str
SettingsComponent.expName.val:
SettingsComponent.expName.allowedTypes:[]
SettingsComponent.expName.categ:Basic
SettingsComponent.expName.allowedVals:[]
SettingsComponent.expName.readOnly:False
SettingsComponent.expName.updates:None
SettingsComponent.expName.staticUpdater:None
SettingsComponent.expName.hint:Name of the entire experiment (taken by default from the filename on save)
SettingsComponent.expName.allowedUpdates:None
SettingsComponent.logging level.default:exp
SettingsComponent.logging level.label:Logging level
SettingsComponent.logging level.valType:code
SettingsComponent.logging level.val:exp
SettingsComponent.logging level.allowedTypes:[]
SettingsComponent.logging level.categ:Data
SettingsComponent.logging level.allowedVals:['error', 'warning', 'data', 'exp', 'info', 'debug']
SettingsComponent.logging level.readOnly:False
SettingsComponent.logging level.updates:None
SettingsComponent.logging level.staticUpdater:None
SettingsComponent.logging level.hint:How much output do you want in the log files? ('error' is fewest messages, 'debug' is most)
SettingsComponent.logging level.allowedUpdates:None
SettingsComponent.Screen.default:1.0
SettingsComponent.Screen.label:Screen
SettingsComponent.Screen.valType:num
SettingsComponent.Screen.val:1
SettingsComponent.Screen.allowedTypes:[]
SettingsComponent.Screen.categ:Screen
SettingsComponent.Screen.allowedVals:[]
SettingsComponent.Screen.readOnly:False
SettingsComponent.Screen.updates:None
SettingsComponent.Screen.staticUpdater:None
SettingsComponent.Screen.hint:Which physical screen to run on (1 or 2)
SettingsComponent.Screen.allowedUpdates:None
SoundComponent.order:['name']
SoundComponent.sound.default:'A'
SoundComponent.sound.label:Sound
SoundComponent.sound.valType:str
SoundComponent.sound.val:A
SoundComponent.sound.allowedTypes:[]
SoundComponent.sound.categ:Basic
SoundComponent.sound.allowedVals:[]
SoundComponent.sound.readOnly:False
SoundComponent.sound.updates:constant
SoundComponent.sound.staticUpdater:None
SoundComponent.sound.hint:A sound can be a note name (e.g. A or Bf), a number to specify Hz (e.g. 440) or a filename
SoundComponent.sound.allowedUpdates:['constant', 'set every repeat']
SoundComponent.volume.default:1
SoundComponent.volume.label:Volume
SoundComponent.volume.valType:code
SoundComponent.volume.val:1
SoundComponent.volume.allowedTypes:[]
SoundComponent.volume.categ:Basic
SoundComponent.volume.allowedVals:[]
SoundComponent.volume.readOnly:False
SoundComponent.volume.updates:constant
SoundComponent.volume.staticUpdater:None
SoundComponent.volume.hint:The volume (in range 0 to 1)
SoundComponent.volume.allowedUpdates:['constant', 'set every repeat', 'set every frame']
SoundComponent.name.default:sound_1
SoundComponent.name.label:Name
SoundComponent.name.valType:code
SoundComponent.name.val:sound_1
SoundComponent.name.allowedTypes:[]
SoundComponent.name.categ:Basic
SoundComponent.name.allowedVals:[]
SoundComponent.name.readOnly:False
SoundComponent.name.staticUpdater:None
SoundComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
SoundComponent.name.allowedUpdates:None
SoundComponent.stopVal.default:1.0
SoundComponent.stopVal.label:Stop
SoundComponent.stopVal.valType:code
SoundComponent.stopVal.val:1.0
SoundComponent.stopVal.allowedTypes:[]
SoundComponent.stopVal.categ:Basic
SoundComponent.stopVal.allowedVals:[]
SoundComponent.stopVal.readOnly:False
SoundComponent.stopVal.updates:constant
SoundComponent.stopVal.staticUpdater:None
SoundComponent.stopVal.hint:When does the component end? (blank to use the duration of the media)
SoundComponent.stopVal.allowedUpdates:[]
SoundComponent.durationEstim.default:
SoundComponent.durationEstim.label:Expected duration (s)
SoundComponent.durationEstim.valType:code
SoundComponent.durationEstim.val:
SoundComponent.durationEstim.allowedTypes:[]
SoundComponent.durationEstim.categ:Basic
SoundComponent.durationEstim.allowedVals:[]
SoundComponent.durationEstim.readOnly:False
SoundComponent.durationEstim.updates:None
SoundComponent.durationEstim.staticUpdater:None
SoundComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
SoundComponent.durationEstim.allowedUpdates:None
SoundComponent.startEstim.default:
SoundComponent.startEstim.label:Expected start (s)
SoundComponent.startEstim.valType:code
SoundComponent.startEstim.val:
SoundComponent.startEstim.allowedTypes:[]
SoundComponent.startEstim.categ:Basic
SoundComponent.startEstim.allowedVals:[]
SoundComponent.startEstim.readOnly:False
SoundComponent.startEstim.updates:None
SoundComponent.startEstim.staticUpdater:None
SoundComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
SoundComponent.startEstim.allowedUpdates:None
SoundComponent.startType.default:'time (s)'
SoundComponent.startType.label:start type
SoundComponent.startType.valType:str
SoundComponent.startType.val:time (s)
SoundComponent.startType.allowedTypes:[]
SoundComponent.startType.categ:Basic
SoundComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
SoundComponent.startType.readOnly:False
SoundComponent.startType.updates:None
SoundComponent.startType.staticUpdater:None
SoundComponent.startType.hint:How do you want to define your start point?
SoundComponent.startType.allowedUpdates:None
SoundComponent.stopType.default:'duration (s)'
SoundComponent.stopType.label:stop type
SoundComponent.stopType.valType:str
SoundComponent.stopType.val:duration (s)
SoundComponent.stopType.allowedTypes:[]
SoundComponent.stopType.categ:Basic
SoundComponent.stopType.allowedVals:['duration (s)']
SoundComponent.stopType.readOnly:False
SoundComponent.stopType.updates:None
SoundComponent.stopType.staticUpdater:None
SoundComponent.stopType.hint:The maximum duration of a sound in seconds
SoundComponent.stopType.allowedUpdates:None
SoundComponent.startVal.default:0.0
SoundComponent.startVal.label:Start
SoundComponent.startVal.valType:code
SoundComponent.startVal.val:0.0
SoundComponent.startVal.allowedTypes:[]
SoundComponent.startVal.categ:Basic
SoundComponent.startVal.allowedVals:[]
SoundComponent.startVal.readOnly:False
SoundComponent.startVal.updates:None
SoundComponent.startVal.staticUpdater:None
SoundComponent.startVal.hint:When does the component start?
SoundComponent.startVal.allowedUpdates:None
StaticComponent.order:['name']
StaticComponent.code.default:
StaticComponent.code.label:Custom code
StaticComponent.code.valType:code
StaticComponent.code.val:
StaticComponent.code.allowedTypes:[]
StaticComponent.code.categ:Basic
StaticComponent.code.allowedVals:[]
StaticComponent.code.readOnly:False
StaticComponent.code.updates:None
StaticComponent.code.staticUpdater:None
StaticComponent.code.hint:Custom code to be run during the static period (after updates)
StaticComponent.code.allowedUpdates:None
StaticComponent.name.default:ISI
StaticComponent.name.label:Name
StaticComponent.name.valType:code
StaticComponent.name.val:ISI
StaticComponent.name.allowedTypes:[]
StaticComponent.name.categ:Basic
StaticComponent.name.allowedVals:[]
StaticComponent.name.readOnly:False
StaticComponent.name.staticUpdater:None
StaticComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
StaticComponent.name.allowedUpdates:None
StaticComponent.stopVal.default:0.5
StaticComponent.stopVal.label:
StaticComponent.stopVal.valType:code
StaticComponent.stopVal.val:0.5
StaticComponent.stopVal.allowedTypes:[]
StaticComponent.stopVal.categ:Basic
StaticComponent.stopVal.allowedVals:[]
StaticComponent.stopVal.readOnly:False
StaticComponent.stopVal.updates:constant
StaticComponent.stopVal.staticUpdater:None
StaticComponent.stopVal.hint:When does the component end? (blank is endless)
StaticComponent.stopVal.allowedUpdates:[]
StaticComponent.durationEstim.default:
StaticComponent.durationEstim.label:
StaticComponent.durationEstim.valType:code
StaticComponent.durationEstim.val:
StaticComponent.durationEstim.allowedTypes:[]
StaticComponent.durationEstim.categ:Basic
StaticComponent.durationEstim.allowedVals:[]
StaticComponent.durationEstim.readOnly:False
StaticComponent.durationEstim.updates:None
StaticComponent.durationEstim.staticUpdater:None
StaticComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
StaticComponent.durationEstim.allowedUpdates:None
StaticComponent.startEstim.default:
StaticComponent.startEstim.label:
StaticComponent.startEstim.valType:code
StaticComponent.startEstim.val:
StaticComponent.startEstim.allowedTypes:[]
StaticComponent.startEstim.categ:Basic
StaticComponent.startEstim.allowedVals:[]
StaticComponent.startEstim.readOnly:False
StaticComponent.startEstim.updates:None
StaticComponent.startEstim.staticUpdater:None
StaticComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
StaticComponent.startEstim.allowedUpdates:None
StaticComponent.startType.default:'time (s)'
StaticComponent.startType.label:
StaticComponent.startType.valType:str
StaticComponent.startType.val:time (s)
StaticComponent.startType.allowedTypes:[]
StaticComponent.startType.categ:Basic
StaticComponent.startType.allowedVals:['time (s)', 'frame N']
StaticComponent.startType.readOnly:False
StaticComponent.startType.updates:None
StaticComponent.startType.staticUpdater:None
StaticComponent.startType.hint:How do you want to define your start point?
StaticComponent.startType.allowedUpdates:None
StaticComponent.stopType.default:'duration (s)'
StaticComponent.stopType.label:
StaticComponent.stopType.valType:str
StaticComponent.stopType.val:duration (s)
StaticComponent.stopType.allowedTypes:[]
StaticComponent.stopType.categ:Basic
StaticComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N']
StaticComponent.stopType.readOnly:False
StaticComponent.stopType.updates:None
StaticComponent.stopType.staticUpdater:None
StaticComponent.stopType.hint:How do you want to define your end point?
StaticComponent.stopType.allowedUpdates:None
StaticComponent.startVal.default:0.0
StaticComponent.startVal.label:
StaticComponent.startVal.valType:code
StaticComponent.startVal.val:0.0
StaticComponent.startVal.allowedTypes:[]
StaticComponent.startVal.categ:Basic
StaticComponent.startVal.allowedVals:[]
StaticComponent.startVal.readOnly:False
StaticComponent.startVal.updates:None
StaticComponent.startVal.staticUpdater:None
StaticComponent.startVal.hint:When does the component start?
StaticComponent.startVal.allowedUpdates:None
TextComponent.order:['name']
TextComponent.opacity.default:1
TextComponent.opacity.label:Opacity
TextComponent.opacity.valType:code
TextComponent.opacity.val:1
TextComponent.opacity.allowedTypes:[]
TextComponent.opacity.categ:Advanced
TextComponent.opacity.allowedVals:[]
TextComponent.opacity.readOnly:False
TextComponent.opacity.updates:constant
TextComponent.opacity.staticUpdater:None
TextComponent.opacity.hint:Opacity of the stimulus (1=opaque, 0=fully transparent, 0.5=translucent)
TextComponent.opacity.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.colorSpace.default:'rgb'
TextComponent.colorSpace.label:Color space
TextComponent.colorSpace.valType:str
TextComponent.colorSpace.val:rgb
TextComponent.colorSpace.allowedTypes:[]
TextComponent.colorSpace.categ:Advanced
TextComponent.colorSpace.allowedVals:['rgb', 'dkl', 'lms', 'hsv']
TextComponent.colorSpace.readOnly:False
TextComponent.colorSpace.updates:constant
TextComponent.colorSpace.staticUpdater:None
TextComponent.colorSpace.hint:Choice of color space for the color (rgb, dkl, lms, hsv)
TextComponent.colorSpace.allowedUpdates:None
TextComponent.name.default:text
TextComponent.name.label:Name
TextComponent.name.valType:code
TextComponent.name.val:text
TextComponent.name.allowedTypes:[]
TextComponent.name.categ:Basic
TextComponent.name.allowedVals:[]
TextComponent.name.readOnly:False
TextComponent.name.staticUpdater:None
TextComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
TextComponent.name.allowedUpdates:None
TextComponent.wrapWidth.default:
TextComponent.wrapWidth.label:Wrap width
TextComponent.wrapWidth.valType:code
TextComponent.wrapWidth.val:
TextComponent.wrapWidth.allowedTypes:[]
TextComponent.wrapWidth.categ:Advanced
TextComponent.wrapWidth.allowedVals:[]
TextComponent.wrapWidth.readOnly:False
TextComponent.wrapWidth.updates:constant
TextComponent.wrapWidth.staticUpdater:None
TextComponent.wrapWidth.hint:How wide should the text get when it wraps? (in the specified units)
TextComponent.wrapWidth.allowedUpdates:['constant']
TextComponent.color.default:'white'
TextComponent.color.label:Color
TextComponent.color.valType:str
TextComponent.color.val:white
TextComponent.color.allowedTypes:[]
TextComponent.color.categ:Basic
TextComponent.color.allowedVals:[]
TextComponent.color.readOnly:False
TextComponent.color.updates:constant
TextComponent.color.staticUpdater:None
TextComponent.color.hint:Color of this stimulus (e.g. $[1,1,0], red ); Right-click to bring up a color-picker (rgb only)
TextComponent.color.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.text.default:'Any text\n\nincluding line breaks'
TextComponent.text.label:Text
TextComponent.text.valType:str
TextComponent.text.val:Any text

including line breaks
TextComponent.text.allowedTypes:[]
TextComponent.text.categ:Basic
TextComponent.text.allowedVals:[]
TextComponent.text.readOnly:False
TextComponent.text.updates:constant
TextComponent.text.staticUpdater:None
TextComponent.text.hint:The text to be displayed
TextComponent.text.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.stopVal.default:1.0
TextComponent.stopVal.label:Stop
TextComponent.stopVal.valType:code
TextComponent.stopVal.val:1.0
TextComponent.stopVal.allowedTypes:[]
TextComponent.stopVal.categ:Basic
TextComponent.stopVal.allowedVals:[]
TextComponent.stopVal.readOnly:False
TextComponent.stopVal.updates:constant
TextComponent.stopVal.staticUpdater:None
TextComponent.stopVal.hint:When does the component end? (blank is endless)
TextComponent.stopVal.allowedUpdates:[]
TextComponent.durationEstim.default:
TextComponent.durationEstim.label:Expected duration (s)
TextComponent.durationEstim.valType:code
TextComponent.durationEstim.val:
TextComponent.durationEstim.allowedTypes:[]
TextComponent.durationEstim.categ:Basic
TextComponent.durationEstim.allowedVals:[]
TextComponent.durationEstim.readOnly:False
TextComponent.durationEstim.updates:None
TextComponent.durationEstim.staticUpdater:None
TextComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
TextComponent.durationEstim.allowedUpdates:None
TextComponent.pos.default:(0, 0)
TextComponent.pos.label:Position [x,y]
TextComponent.pos.valType:code
TextComponent.pos.val:(0, 0)
TextComponent.pos.allowedTypes:[]
TextComponent.pos.categ:Basic
TextComponent.pos.allowedVals:[]
TextComponent.pos.readOnly:False
TextComponent.pos.updates:constant
TextComponent.pos.staticUpdater:None
TextComponent.pos.hint:Position of this stimulus (e.g. [1,2] )
TextComponent.pos.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.flip.default:''
TextComponent.flip.label:Flip (mirror)
TextComponent.flip.valType:str
TextComponent.flip.val:
TextComponent.flip.allowedTypes:[]
TextComponent.flip.categ:Advanced
TextComponent.flip.allowedVals:[]
TextComponent.flip.readOnly:False
TextComponent.flip.updates:constant
TextComponent.flip.staticUpdater:None
TextComponent.flip.hint:horiz = left-right reversed; vert = up-down reversed; $var = variable
TextComponent.flip.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.startEstim.default:
TextComponent.startEstim.label:Expected start (s)
TextComponent.startEstim.valType:code
TextComponent.startEstim.val:
TextComponent.startEstim.allowedTypes:[]
TextComponent.startEstim.categ:Basic
TextComponent.startEstim.allowedVals:[]
TextComponent.startEstim.readOnly:False
TextComponent.startEstim.updates:None
TextComponent.startEstim.staticUpdater:None
TextComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
TextComponent.startEstim.allowedUpdates:None
TextComponent.units.default:'from exp settings'
TextComponent.units.label:Units
TextComponent.units.valType:str
TextComponent.units.val:from exp settings
TextComponent.units.allowedTypes:[]
TextComponent.units.categ:Advanced
TextComponent.units.allowedVals:['from exp settings', 'deg', 'cm', 'pix', 'norm', 'height', 'degFlatPos', 'degFlat']
TextComponent.units.readOnly:False
TextComponent.units.updates:None
TextComponent.units.staticUpdater:None
TextComponent.units.hint:Units of dimensions for this stimulus
TextComponent.units.allowedUpdates:None
TextComponent.startType.default:'time (s)'
TextComponent.startType.label:start type
TextComponent.startType.valType:str
TextComponent.startType.val:time (s)
TextComponent.startType.allowedTypes:[]
TextComponent.startType.categ:Basic
TextComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
TextComponent.startType.readOnly:False
TextComponent.startType.updates:None
TextComponent.startType.staticUpdater:None
TextComponent.startType.hint:How do you want to define your start point?
TextComponent.startType.allowedUpdates:None
TextComponent.ori.default:0
TextComponent.ori.label:Orientation
TextComponent.ori.valType:code
TextComponent.ori.val:0
TextComponent.ori.allowedTypes:[]
TextComponent.ori.categ:Advanced
TextComponent.ori.allowedVals:[]
TextComponent.ori.readOnly:False
TextComponent.ori.updates:constant
TextComponent.ori.staticUpdater:None
TextComponent.ori.hint:Orientation of this stimulus (in deg)
TextComponent.ori.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.stopType.default:'duration (s)'
TextComponent.stopType.label:stop type
TextComponent.stopType.valType:str
TextComponent.stopType.val:duration (s)
TextComponent.stopType.allowedTypes:[]
TextComponent.stopType.categ:Basic
TextComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
TextComponent.stopType.readOnly:False
TextComponent.stopType.updates:None
TextComponent.stopType.staticUpdater:None
TextComponent.stopType.hint:How do you want to define your end point?
TextComponent.stopType.allowedUpdates:None
TextComponent.startVal.default:0.0
TextComponent.startVal.label:Start
TextComponent.startVal.valType:code
TextComponent.startVal.val:0.0
TextComponent.startVal.allowedTypes:[]
TextComponent.startVal.categ:Basic
TextComponent.startVal.allowedVals:[]
TextComponent.startVal.readOnly:False
TextComponent.startVal.updates:None
TextComponent.startVal.staticUpdater:None
TextComponent.startVal.hint:When does the component start?
TextComponent.startVal.allowedUpdates:None
TextComponent.font.default:'Arial'
TextComponent.font.label:Font
TextComponent.font.valType:str
TextComponent.font.val:Arial
TextComponent.font.allowedTypes:[]
TextComponent.font.categ:Basic
TextComponent.font.allowedVals:[]
TextComponent.font.readOnly:False
TextComponent.font.updates:constant
TextComponent.font.staticUpdater:None
TextComponent.font.hint:The font name (e.g. Comic Sans)
TextComponent.font.allowedUpdates:['constant', 'set every repeat', 'set every frame']
TextComponent.letterHeight.default:0.1
TextComponent.letterHeight.label:Letter height
TextComponent.letterHeight.valType:code
TextComponent.letterHeight.val:0.1
TextComponent.letterHeight.allowedTypes:[]
TextComponent.letterHeight.categ:Basic
TextComponent.letterHeight.allowedVals:[]
TextComponent.letterHeight.readOnly:False
TextComponent.letterHeight.updates:constant
TextComponent.letterHeight.staticUpdater:None
TextComponent.letterHeight.hint:Specifies the height of the letter (the width is then determined by the font)
TextComponent.letterHeight.allowedUpdates:['constant', 'set every repeat', 'set every frame']
UnknownComponent.order:['name']
UnknownComponent.name.default:
UnknownComponent.name.label:Name
UnknownComponent.name.valType:code
UnknownComponent.name.val:
UnknownComponent.name.allowedTypes:[]
UnknownComponent.name.categ:Basic
UnknownComponent.name.allowedVals:[]
UnknownComponent.name.readOnly:False
UnknownComponent.name.staticUpdater:None
UnknownComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
UnknownComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.order:['forceEndRoutine', 'allowedKeys', 'store', 'storeCorrect', 'correctAns']
cedrusButtonBoxComponent.correctAns.default:
cedrusButtonBoxComponent.correctAns.label:Correct answer
cedrusButtonBoxComponent.correctAns.valType:code
cedrusButtonBoxComponent.correctAns.val:
cedrusButtonBoxComponent.correctAns.allowedTypes:[]
cedrusButtonBoxComponent.correctAns.categ:Basic
cedrusButtonBoxComponent.correctAns.allowedVals:[]
cedrusButtonBoxComponent.correctAns.readOnly:False
cedrusButtonBoxComponent.correctAns.updates:constant
cedrusButtonBoxComponent.correctAns.staticUpdater:None
cedrusButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 6 on a 7-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
cedrusButtonBoxComponent.correctAns.allowedUpdates:None
cedrusButtonBoxComponent.storeCorrect.default:False
cedrusButtonBoxComponent.storeCorrect.label:Store correct
cedrusButtonBoxComponent.storeCorrect.valType:bool
cedrusButtonBoxComponent.storeCorrect.val:False
cedrusButtonBoxComponent.storeCorrect.allowedTypes:[]
cedrusButtonBoxComponent.storeCorrect.categ:Basic
cedrusButtonBoxComponent.storeCorrect.allowedVals:[]
cedrusButtonBoxComponent.storeCorrect.readOnly:False
cedrusButtonBoxComponent.storeCorrect.updates:constant
cedrusButtonBoxComponent.storeCorrect.staticUpdater:None
cedrusButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
cedrusButtonBoxComponent.storeCorrect.allowedUpdates:None
cedrusButtonBoxComponent.name.default:buttonBox
cedrusButtonBoxComponent.name.label:Name
cedrusButtonBoxComponent.name.valType:code
cedrusButtonBoxComponent.name.val:buttonBox
cedrusButtonBoxComponent.name.allowedTypes:[]
cedrusButtonBoxComponent.name.categ:Basic
cedrusButtonBoxComponent.name.allowedVals:[]
cedrusButtonBoxComponent.name.readOnly:False
cedrusButtonBoxComponent.name.staticUpdater:None
cedrusButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
cedrusButtonBoxComponent.name.allowedUpdates:None
cedrusButtonBoxComponent.deviceNumber.default:0
cedrusButtonBoxComponent.deviceNumber.label:Device number
cedrusButtonBoxComponent.deviceNumber.valType:code
cedrusButtonBoxComponent.deviceNumber.val:0
cedrusButtonBoxComponent.deviceNumber.allowedTypes:[]
cedrusButtonBoxComponent.deviceNumber.categ:Advanced
cedrusButtonBoxComponent.deviceNumber.allowedVals:[]
cedrusButtonBoxComponent.deviceNumber.readOnly:False
cedrusButtonBoxComponent.deviceNumber.updates:constant
cedrusButtonBoxComponent.deviceNumber.staticUpdater:None
cedrusButtonBoxComponent.deviceNumber.hint:Device number, if you have multiple devices which one do you want (0, 1, 2...)
cedrusButtonBoxComponent.deviceNumber.allowedUpdates:[]
cedrusButtonBoxComponent.stopVal.default:1.0
cedrusButtonBoxComponent.stopVal.label:Stop
cedrusButtonBoxComponent.stopVal.valType:code
cedrusButtonBoxComponent.stopVal.val:1.0
cedrusButtonBoxComponent.stopVal.allowedTypes:[]
cedrusButtonBoxComponent.stopVal.categ:Basic
cedrusButtonBoxComponent.stopVal.allowedVals:[]
cedrusButtonBoxComponent.stopVal.readOnly:False
cedrusButtonBoxComponent.stopVal.updates:constant
cedrusButtonBoxComponent.stopVal.staticUpdater:None
cedrusButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
cedrusButtonBoxComponent.stopVal.allowedUpdates:[]
cedrusButtonBoxComponent.durationEstim.default:
cedrusButtonBoxComponent.durationEstim.label:Expected duration (s)
cedrusButtonBoxComponent.durationEstim.valType:code
cedrusButtonBoxComponent.durationEstim.val:
cedrusButtonBoxComponent.durationEstim.allowedTypes:[]
cedrusButtonBoxComponent.durationEstim.categ:Basic
cedrusButtonBoxComponent.durationEstim.allowedVals:[]
cedrusButtonBoxComponent.durationEstim.readOnly:False
cedrusButtonBoxComponent.durationEstim.updates:None
cedrusButtonBoxComponent.durationEstim.staticUpdater:None
cedrusButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
cedrusButtonBoxComponent.durationEstim.allowedUpdates:None
cedrusButtonBoxComponent.useBoxTimer.default:False
cedrusButtonBoxComponent.useBoxTimer.label:Use box timer
cedrusButtonBoxComponent.useBoxTimer.valType:bool
cedrusButtonBoxComponent.useBoxTimer.val:False
cedrusButtonBoxComponent.useBoxTimer.allowedTypes:[]
cedrusButtonBoxComponent.useBoxTimer.categ:Advanced
cedrusButtonBoxComponent.useBoxTimer.allowedVals:[True, False]
cedrusButtonBoxComponent.useBoxTimer.readOnly:False
cedrusButtonBoxComponent.useBoxTimer.updates:constant
cedrusButtonBoxComponent.useBoxTimer.staticUpdater:None
cedrusButtonBoxComponent.useBoxTimer.hint:According to Cedrus the response box timer has a drift - use with caution!
cedrusButtonBoxComponent.useBoxTimer.allowedUpdates:[]
cedrusButtonBoxComponent.forceEndRoutine.default:True
cedrusButtonBoxComponent.forceEndRoutine.label:Force end of Routine
cedrusButtonBoxComponent.forceEndRoutine.valType:bool
cedrusButtonBoxComponent.forceEndRoutine.val:True
cedrusButtonBoxComponent.forceEndRoutine.allowedTypes:[]
cedrusButtonBoxComponent.forceEndRoutine.categ:Basic
cedrusButtonBoxComponent.forceEndRoutine.allowedVals:[]
cedrusButtonBoxComponent.forceEndRoutine.readOnly:False
cedrusButtonBoxComponent.forceEndRoutine.updates:constant
cedrusButtonBoxComponent.forceEndRoutine.staticUpdater:None
cedrusButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
cedrusButtonBoxComponent.forceEndRoutine.allowedUpdates:None
cedrusButtonBoxComponent.startEstim.default:
cedrusButtonBoxComponent.startEstim.label:Expected start (s)
cedrusButtonBoxComponent.startEstim.valType:code
cedrusButtonBoxComponent.startEstim.val:
cedrusButtonBoxComponent.startEstim.allowedTypes:[]
cedrusButtonBoxComponent.startEstim.categ:Basic
cedrusButtonBoxComponent.startEstim.allowedVals:[]
cedrusButtonBoxComponent.startEstim.readOnly:False
cedrusButtonBoxComponent.startEstim.updates:None
cedrusButtonBoxComponent.startEstim.staticUpdater:None
cedrusButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
cedrusButtonBoxComponent.startEstim.allowedUpdates:None
cedrusButtonBoxComponent.discard previous.default:True
cedrusButtonBoxComponent.discard previous.label:Discard previous
cedrusButtonBoxComponent.discard previous.valType:bool
cedrusButtonBoxComponent.discard previous.val:True
cedrusButtonBoxComponent.discard previous.allowedTypes:[]
cedrusButtonBoxComponent.discard previous.categ:Basic
cedrusButtonBoxComponent.discard previous.allowedVals:[]
cedrusButtonBoxComponent.discard previous.readOnly:False
cedrusButtonBoxComponent.discard previous.updates:constant
cedrusButtonBoxComponent.discard previous.staticUpdater:None
cedrusButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
cedrusButtonBoxComponent.discard previous.allowedUpdates:None
cedrusButtonBoxComponent.startType.default:'time (s)'
cedrusButtonBoxComponent.startType.label:start type
cedrusButtonBoxComponent.startType.valType:str
cedrusButtonBoxComponent.startType.val:time (s)
cedrusButtonBoxComponent.startType.allowedTypes:[]
cedrusButtonBoxComponent.startType.categ:Basic
cedrusButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.startType.readOnly:False
cedrusButtonBoxComponent.startType.updates:None
cedrusButtonBoxComponent.startType.staticUpdater:None
cedrusButtonBoxComponent.startType.hint:How do you want to define your start point?
cedrusButtonBoxComponent.startType.allowedUpdates:None
cedrusButtonBoxComponent.allowedKeys.default:
cedrusButtonBoxComponent.allowedKeys.label:Allowed keys
cedrusButtonBoxComponent.allowedKeys.valType:code
cedrusButtonBoxComponent.allowedKeys.val:
cedrusButtonBoxComponent.allowedKeys.allowedTypes:[]
cedrusButtonBoxComponent.allowedKeys.categ:Basic
cedrusButtonBoxComponent.allowedKeys.allowedVals:[]
cedrusButtonBoxComponent.allowedKeys.readOnly:False
cedrusButtonBoxComponent.allowedKeys.updates:constant
cedrusButtonBoxComponent.allowedKeys.staticUpdater:None
cedrusButtonBoxComponent.allowedKeys.hint:Keys to be read (blank for any) or key numbers separated by commas
cedrusButtonBoxComponent.allowedKeys.allowedUpdates:['constant', 'set every repeat']
cedrusButtonBoxComponent.stopType.default:'duration (s)'
cedrusButtonBoxComponent.stopType.label:stop type
cedrusButtonBoxComponent.stopType.valType:str
cedrusButtonBoxComponent.stopType.val:duration (s)
cedrusButtonBoxComponent.stopType.allowedTypes:[]
cedrusButtonBoxComponent.stopType.categ:Basic
cedrusButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
cedrusButtonBoxComponent.stopType.readOnly:False
cedrusButtonBoxComponent.stopType.updates:None
cedrusButtonBoxComponent.stopType.staticUpdater:None
cedrusButtonBoxComponent.stopType.hint:How do you want to define your end point?
cedrusButtonBoxComponent.stopType.allowedUpdates:None
cedrusButtonBoxComponent.startVal.default:0.0
cedrusButtonBoxComponent.startVal.label:Start
cedrusButtonBoxComponent.startVal.valType:code
cedrusButtonBoxComponent.startVal.val:0.0
cedrusButtonBoxComponent.startVal.allowedTypes:[]
cedrusButtonBoxComponent.startVal.categ:Basic
cedrusButtonBoxComponent.startVal.allowedVals:[]
cedrusButtonBoxComponent.startVal.readOnly:False
cedrusButtonBoxComponent.startVal.updates:None
cedrusButtonBoxComponent.startVal.staticUpdater:None
cedrusButtonBoxComponent.startVal.hint:When does the component start?
cedrusButtonBoxComponent.startVal.allowedUpdates:None
cedrusButtonBoxComponent.store.default:'first key'
cedrusButtonBoxComponent.store.label:Store
cedrusButtonBoxComponent.store.valType:str
cedrusButtonBoxComponent.store.val:first key
cedrusButtonBoxComponent.store.allowedTypes:[]
cedrusButtonBoxComponent.store.categ:Basic
cedrusButtonBoxComponent.store.allowedVals:['last key', 'first key', 'all keys', 'nothing']
cedrusButtonBoxComponent.store.readOnly:False
cedrusButtonBoxComponent.store.updates:constant
cedrusButtonBoxComponent.store.staticUpdater:None
cedrusButtonBoxComponent.store.hint:Choose which (if any) responses to store at the end of a trial
cedrusButtonBoxComponent.store.allowedUpdates:None
cedrusButtonBoxComponent.syncScreenRefresh.default:True
cedrusButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
cedrusButtonBoxComponent.syncScreenRefresh.valType:bool
cedrusButtonBoxComponent.syncScreenRefresh.val:True
cedrusButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
cedrusButtonBoxComponent.syncScreenRefresh.categ:Basic
cedrusButtonBoxComponent.syncScreenRefresh.allowedVals:[]
cedrusButtonBoxComponent.syncScreenRefresh.readOnly:False
cedrusButtonBoxComponent.syncScreenRefresh.updates:constant
cedrusButtonBoxComponent.syncScreenRefresh.staticUpdater:None
cedrusButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
cedrusButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
ioLabsButtonBoxComponent.order:['forceEndRoutine', 'active', 'lights', 'store', 'storeCorrect', 'correctAns']
ioLabsButtonBoxComponent.correctAns.default:'0'
ioLabsButtonBoxComponent.correctAns.label:Correct answer
ioLabsButtonBoxComponent.correctAns.valType:str
ioLabsButtonBoxComponent.correctAns.val:0
ioLabsButtonBoxComponent.correctAns.allowedTypes:[]
ioLabsButtonBoxComponent.correctAns.categ:Basic
ioLabsButtonBoxComponent.correctAns.allowedVals:[]
ioLabsButtonBoxComponent.correctAns.readOnly:False
ioLabsButtonBoxComponent.correctAns.updates:constant
ioLabsButtonBoxComponent.correctAns.staticUpdater:None
ioLabsButtonBoxComponent.correctAns.hint:What is the 'correct' response? NB, buttons are labelled 0 to 7 on a 8-button box. Enter 'None' (no quotes) if withholding a response is correct. Might be helpful to add a correctAns column and use $correctAns to compare to the key press.
ioLabsButtonBoxComponent.correctAns.allowedUpdates:None
ioLabsButtonBoxComponent.storeCorrect.default:False
ioLabsButtonBoxComponent.storeCorrect.label:Store correct
ioLabsButtonBoxComponent.storeCorrect.valType:bool
ioLabsButtonBoxComponent.storeCorrect.val:False
ioLabsButtonBoxComponent.storeCorrect.allowedTypes:[]
ioLabsButtonBoxComponent.storeCorrect.categ:Basic
ioLabsButtonBoxComponent.storeCorrect.allowedVals:[]
ioLabsButtonBoxComponent.storeCorrect.readOnly:False
ioLabsButtonBoxComponent.storeCorrect.updates:constant
ioLabsButtonBoxComponent.storeCorrect.staticUpdater:None
ioLabsButtonBoxComponent.storeCorrect.hint:Do you want to save the response as correct/incorrect?
ioLabsButtonBoxComponent.storeCorrect.allowedUpdates:None
ioLabsButtonBoxComponent.name.default:bbox
ioLabsButtonBoxComponent.name.label:Name
ioLabsButtonBoxComponent.name.valType:code
ioLabsButtonBoxComponent.name.val:bbox
ioLabsButtonBoxComponent.name.allowedTypes:[]
ioLabsButtonBoxComponent.name.categ:Basic
ioLabsButtonBoxComponent.name.allowedVals:[]
ioLabsButtonBoxComponent.name.readOnly:False
ioLabsButtonBoxComponent.name.staticUpdater:None
ioLabsButtonBoxComponent.name.hint:Name of this component (alpha-numeric or _, no spaces)
ioLabsButtonBoxComponent.name.allowedUpdates:None
ioLabsButtonBoxComponent.lights.default:True
ioLabsButtonBoxComponent.lights.label:Lights
ioLabsButtonBoxComponent.lights.valType:bool
ioLabsButtonBoxComponent.lights.val:True
ioLabsButtonBoxComponent.lights.allowedTypes:[]
ioLabsButtonBoxComponent.lights.categ:Basic
ioLabsButtonBoxComponent.lights.allowedVals:[]
ioLabsButtonBoxComponent.lights.readOnly:False
ioLabsButtonBoxComponent.lights.updates:constant
ioLabsButtonBoxComponent.lights.staticUpdater:None
ioLabsButtonBoxComponent.lights.hint:Turn ON the lights for the active buttons?
ioLabsButtonBoxComponent.lights.allowedUpdates:[]
ioLabsButtonBoxComponent.stopVal.default:1.0
ioLabsButtonBoxComponent.stopVal.label:Stop
ioLabsButtonBoxComponent.stopVal.valType:code
ioLabsButtonBoxComponent.stopVal.val:1.0
ioLabsButtonBoxComponent.stopVal.allowedTypes:[]
ioLabsButtonBoxComponent.stopVal.categ:Basic
ioLabsButtonBoxComponent.stopVal.allowedVals:[]
ioLabsButtonBoxComponent.stopVal.readOnly:False
ioLabsButtonBoxComponent.stopVal.updates:constant
ioLabsButtonBoxComponent.stopVal.staticUpdater:None
ioLabsButtonBoxComponent.stopVal.hint:When does the component end? (blank is endless)
ioLabsButtonBoxComponent.stopVal.allowedUpdates:[]
ioLabsButtonBoxComponent.durationEstim.default:
ioLabsButtonBoxComponent.durationEstim.label:Expected duration (s)
ioLabsButtonBoxComponent.durationEstim.valType:code
ioLabsButtonBoxComponent.durationEstim.val:
ioLabsButtonBoxComponent.durationEstim.allowedTypes:[]
ioLabsButtonBoxComponent.durationEstim.categ:Basic
ioLabsButtonBoxComponent.durationEstim.allowedVals:[]
ioLabsButtonBoxComponent.durationEstim.readOnly:False
ioLabsButtonBoxComponent.durationEstim.updates:None
ioLabsButtonBoxComponent.durationEstim.staticUpdater:None
ioLabsButtonBoxComponent.durationEstim.hint:(Optional) expected duration (s), purely for representing in the timeline
ioLabsButtonBoxComponent.durationEstim.allowedUpdates:None
ioLabsButtonBoxComponent.forceEndRoutine.default:True
ioLabsButtonBoxComponent.forceEndRoutine.label:Force end of Routine
ioLabsButtonBoxComponent.forceEndRoutine.valType:bool
ioLabsButtonBoxComponent.forceEndRoutine.val:True
ioLabsButtonBoxComponent.forceEndRoutine.allowedTypes:[]
ioLabsButtonBoxComponent.forceEndRoutine.categ:Basic
ioLabsButtonBoxComponent.forceEndRoutine.allowedVals:[]
ioLabsButtonBoxComponent.forceEndRoutine.readOnly:False
ioLabsButtonBoxComponent.forceEndRoutine.updates:constant
ioLabsButtonBoxComponent.forceEndRoutine.staticUpdater:None
ioLabsButtonBoxComponent.forceEndRoutine.hint:Should a response force the end of the Routine (e.g end the trial)?
ioLabsButtonBoxComponent.forceEndRoutine.allowedUpdates:None
ioLabsButtonBoxComponent.startEstim.default:
ioLabsButtonBoxComponent.startEstim.label:Expected start (s)
ioLabsButtonBoxComponent.startEstim.valType:code
ioLabsButtonBoxComponent.startEstim.val:
ioLabsButtonBoxComponent.startEstim.allowedTypes:[]
ioLabsButtonBoxComponent.startEstim.categ:Basic
ioLabsButtonBoxComponent.startEstim.allowedVals:[]
ioLabsButtonBoxComponent.startEstim.readOnly:False
ioLabsButtonBoxComponent.startEstim.updates:None
ioLabsButtonBoxComponent.startEstim.staticUpdater:None
ioLabsButtonBoxComponent.startEstim.hint:(Optional) expected start (s), purely for representing in the timeline
ioLabsButtonBoxComponent.startEstim.allowedUpdates:None
ioLabsButtonBoxComponent.discard previous.default:True
ioLabsButtonBoxComponent.discard previous.label:Discard previous
ioLabsButtonBoxComponent.discard previous.valType:bool
ioLabsButtonBoxComponent.discard previous.val:True
ioLabsButtonBoxComponent.discard previous.allowedTypes:[]
ioLabsButtonBoxComponent.discard previous.categ:Basic
ioLabsButtonBoxComponent.discard previous.allowedVals:[]
ioLabsButtonBoxComponent.discard previous.readOnly:False
ioLabsButtonBoxComponent.discard previous.updates:constant
ioLabsButtonBoxComponent.discard previous.staticUpdater:None
ioLabsButtonBoxComponent.discard previous.hint:Do you want to discard all responses occuring before the onset of this component?
ioLabsButtonBoxComponent.discard previous.allowedUpdates:None
ioLabsButtonBoxComponent.startType.default:'time (s)'
ioLabsButtonBoxComponent.startType.label:start type
ioLabsButtonBoxComponent.startType.valType:str
ioLabsButtonBoxComponent.startType.val:time (s)
ioLabsButtonBoxComponent.startType.allowedTypes:[]
ioLabsButtonBoxComponent.startType.categ:Basic
ioLabsButtonBoxComponent.startType.allowedVals:['time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.startType.readOnly:False
ioLabsButtonBoxComponent.startType.updates:None
ioLabsButtonBoxComponent.startType.staticUpdater:None
ioLabsButtonBoxComponent.startType.hint:How do you want to define your start point?
ioLabsButtonBoxComponent.startType.allowedUpdates:None
ioLabsButtonBoxComponent.lights off.default:False
ioLabsButtonBoxComponent.lights off.label:Lights off
ioLabsButtonBoxComponent.lights off.valType:bool
ioLabsButtonBoxComponent.lights off.val:False
ioLabsButtonBoxComponent.lights off.allowedTypes:[]
ioLabsButtonBoxComponent.lights off.categ:Basic
ioLabsButtonBoxComponent.lights off.allowedVals:[]
ioLabsButtonBoxComponent.lights off.readOnly:False
ioLabsButtonBoxComponent.lights off.updates:constant
ioLabsButtonBoxComponent.lights off.staticUpdater:None
ioLabsButtonBoxComponent.lights off.hint:Turn OFF all lights at the end of each routine?
ioLabsButtonBoxComponent.lights off.allowedUpdates:[]
ioLabsButtonBoxComponent.stopType.default:'duration (s)'
ioLabsButtonBoxComponent.stopType.label:stop type
ioLabsButtonBoxComponent.stopType.valType:str
ioLabsButtonBoxComponent.stopType.val:duration (s)
ioLabsButtonBoxComponent.stopType.allowedTypes:[]
ioLabsButtonBoxComponent.stopType.categ:Basic
ioLabsButtonBoxComponent.stopType.allowedVals:['duration (s)', 'duration (frames)', 'time (s)', 'frame N', 'condition']
ioLabsButtonBoxComponent.stopType.readOnly:False
ioLabsButtonBoxComponent.stopType.updates:None
ioLabsButtonBoxComponent.stopType.staticUpdater:None
ioLabsButtonBoxComponent.stopType.hint:How do you want to define your end point?
ioLabsButtonBoxComponent.stopType.allowedUpdates:None
ioLabsButtonBoxComponent.startVal.default:0.0
ioLabsButtonBoxComponent.startVal.label:Start
ioLabsButtonBoxComponent.startVal.valType:code
ioLabsButtonBoxComponent.startVal.val:0.0
ioLabsButtonBoxComponent.startVal.allowedTypes:[]
ioLabsButtonBoxComponent.startVal.categ:Basic
ioLabsButtonBoxComponent.startVal.allowedVals:[]
ioLabsButtonBoxComponent.startVal.readOnly:False
ioLabsButtonBoxComponent.startVal.updates:None
ioLabsButtonBoxComponent.startVal.staticUpdater:None
ioLabsButtonBoxComponent.startVal.hint:When does the component start?
ioLabsButtonBoxComponent.startVal.allowedUpdates:None
ioLabsButtonBoxComponent.active.default:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.label:Active buttons
ioLabsButtonBoxComponent.active.valType:code
ioLabsButtonBoxComponent.active.val:(0,1,2,3,4,5,6,7)
ioLabsButtonBoxComponent.active.allowedTypes:[]
ioLabsButtonBoxComponent.active.categ:Basic
ioLabsButtonBoxComponent.active.allowedVals:[]
ioLabsButtonBoxComponent.active.readOnly:False
ioLabsButtonBoxComponent.active.updates:constant
ioLabsButtonBoxComponent.active.staticUpdater:None
ioLabsButtonBoxComponent.active.hint:Active buttons, such as '1,6', '(1,2,5,6)' or '0' (without quotes)
ioLabsButtonBoxComponent.active.allowedUpdates:['constant', 'set every repeat']
ioLabsButtonBoxComponent.store.default:'first button'
ioLabsButtonBoxComponent.store.label:Store
ioLabsButtonBoxComponent.store.valType:str
ioLabsButtonBoxComponent.store.val:first button
ioLabsButtonBoxComponent.store.allowedTypes:[]
ioLabsButtonBoxComponent.store.categ:Basic
ioLabsButtonBoxComponent.store.allowedVals:['last button', 'first button', 'all buttons', 'nothing']
ioLabsButtonBoxComponent.store.readOnly:False
ioLabsButtonBoxComponent.store.updates:constant
ioLabsButtonBoxComponent.store.staticUpdater:None
ioLabsButtonBoxComponent.store.hint:Choose which (if any) responses to store at end of a trial
ioLabsButtonBoxComponent.store.allowedUpdates:None
ioLabsButtonBoxComponent.syncScreenRefresh.default:True
ioLabsButtonBoxComponent.syncScreenRefresh.label:sync RT with screen
ioLabsButtonBoxComponent.syncScreenRefresh.valType:bool
ioLabsButtonBoxComponent.syncScreenRefresh.val:True
ioLabsButtonBoxComponent.syncScreenRefresh.allowedTypes:[]
ioLabsButtonBoxComponent.syncScreenRefresh.categ:Basic
ioLabsButtonBoxComponent.syncScreenRefresh.allowedVals:[]
ioLabsButtonBoxComponent.syncScreenRefresh.readOnly:False
ioLabsButtonBoxComponent.syncScreenRefresh.updates:constant
ioLabsButtonBoxComponent.syncScreenRefresh.staticUpdater:None
ioLabsButtonBoxComponent.syncScreenRefresh.hint:A reaction time to a visual stimulus should be based on when the screen flipped
ioLabsButtonBoxComponent.syncScreenRefresh.allowedUpdates:None
